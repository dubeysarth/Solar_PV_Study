2023-07-06 16:09:58,499:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 16:09:58,499:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 16:09:58,500:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 16:09:58,500:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-06 16:10:00,473:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/numba/core/decorators.py:262: NumbaDeprecationWarning: numba.generated_jit is deprecated. Please see the documentation at: https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-generated-jit for more information and advice on a suitable replacement.
  warnings.warn(msg, NumbaDeprecationWarning)

2023-07-06 16:10:00,478:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/visions/backends/shared/nan_handling.py:51: NumbaDeprecationWarning: The 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.
  def hasna(x: np.ndarray) -> bool:

2023-07-06 16:10:00,604:WARNING:/tmp/ipykernel_743737/3561161289.py:6: DeprecationWarning: `import pandas_profiling` is going to be deprecated by April 1st. Please use `import ydata_profiling` instead.
  import pandas_profiling

2023-07-06 16:41:27,053:INFO:PyCaret RegressionExperiment
2023-07-06 16:41:27,053:INFO:Logging name: reg-default-name
2023-07-06 16:41:27,053:INFO:ML Usecase: MLUsecase.REGRESSION
2023-07-06 16:41:27,053:INFO:version 3.0.4
2023-07-06 16:41:27,053:INFO:Initializing setup()
2023-07-06 16:41:27,053:INFO:self.USI: f7e4
2023-07-06 16:41:27,054:INFO:self._variable_keys: {'pipeline', 'fold_groups_param', 'log_plots_param', '_ml_usecase', 'memory', 'transform_target_param', 'logging_param', 'y', 'USI', 'data', 'target_param', 'html_param', 'fold_generator', 'X', 'n_jobs_param', 'X_test', 'y_test', 'exp_id', 'X_train', 'exp_name_log', 'gpu_n_jobs_param', 'seed', 'idx', 'gpu_param', 'y_train', '_available_plots', 'fold_shuffle_param'}
2023-07-06 16:41:27,054:INFO:Checking environment
2023-07-06 16:41:27,054:INFO:python_version: 3.9.16
2023-07-06 16:41:27,054:INFO:python_build: ('main', 'Feb  1 2023 21:39:03')
2023-07-06 16:41:27,054:INFO:machine: x86_64
2023-07-06 16:41:27,054:INFO:platform: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 16:41:27,054:INFO:Memory: svmem(total=540878073856, available=531001290752, percent=1.8, used=6356832256, free=6842720256, active=32447950848, inactive=484925845504, buffers=2741620736, cached=524936900608, shared=21770240, slab=14523711488)
2023-07-06 16:41:27,058:INFO:Physical Core: 64
2023-07-06 16:41:27,058:INFO:Logical Core: 64
2023-07-06 16:41:27,058:INFO:Checking libraries
2023-07-06 16:41:27,058:INFO:System:
2023-07-06 16:41:27,058:INFO:    python: 3.9.16 | packaged by conda-forge | (main, Feb  1 2023, 21:39:03)  [GCC 11.3.0]
2023-07-06 16:41:27,058:INFO:executable: /home/mirlab/anaconda3/envs/misc/bin/python
2023-07-06 16:41:27,058:INFO:   machine: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 16:41:27,059:INFO:PyCaret required dependencies:
2023-07-06 16:41:27,062:INFO:                 pip: 23.1.2
2023-07-06 16:41:27,063:INFO:          setuptools: 67.7.2
2023-07-06 16:41:27,063:INFO:             pycaret: 3.0.4
2023-07-06 16:41:27,063:INFO:             IPython: 8.14.0
2023-07-06 16:41:27,063:INFO:          ipywidgets: 8.0.7
2023-07-06 16:41:27,063:INFO:                tqdm: 4.64.1
2023-07-06 16:41:27,063:INFO:               numpy: 1.23.5
2023-07-06 16:41:27,063:INFO:              pandas: 1.5.3
2023-07-06 16:41:27,063:INFO:              jinja2: 3.1.2
2023-07-06 16:41:27,063:INFO:               scipy: 1.10.1
2023-07-06 16:41:27,063:INFO:              joblib: 1.2.0
2023-07-06 16:41:27,063:INFO:             sklearn: 1.2.2
2023-07-06 16:41:27,063:INFO:                pyod: 1.1.0
2023-07-06 16:41:27,063:INFO:            imblearn: 0.10.1
2023-07-06 16:41:27,063:INFO:   category_encoders: 2.6.1
2023-07-06 16:41:27,063:INFO:            lightgbm: 3.3.5
2023-07-06 16:41:27,063:INFO:               numba: 0.57.0
2023-07-06 16:41:27,063:INFO:            requests: 2.28.1
2023-07-06 16:41:27,063:INFO:          matplotlib: 3.7.1
2023-07-06 16:41:27,063:INFO:          scikitplot: 0.3.7
2023-07-06 16:41:27,063:INFO:         yellowbrick: 1.5
2023-07-06 16:41:27,063:INFO:              plotly: 5.15.0
2023-07-06 16:41:27,063:INFO:    plotly-resampler: Not installed
2023-07-06 16:41:27,064:INFO:             kaleido: 0.2.1
2023-07-06 16:41:27,064:INFO:           schemdraw: 0.15
2023-07-06 16:41:27,064:INFO:         statsmodels: 0.14.0
2023-07-06 16:41:27,064:INFO:              sktime: 0.20.0
2023-07-06 16:41:27,064:INFO:               tbats: 1.1.3
2023-07-06 16:41:27,064:INFO:            pmdarima: 2.0.3
2023-07-06 16:41:27,064:INFO:              psutil: 5.9.5
2023-07-06 16:41:27,064:INFO:          markupsafe: 2.1.2
2023-07-06 16:41:27,064:INFO:             pickle5: Not installed
2023-07-06 16:41:27,064:INFO:         cloudpickle: 2.2.1
2023-07-06 16:41:27,064:INFO:         deprecation: 2.1.0
2023-07-06 16:41:27,064:INFO:              xxhash: 3.2.0
2023-07-06 16:41:27,064:INFO:           wurlitzer: 3.0.3
2023-07-06 16:41:27,064:INFO:PyCaret optional dependencies:
2023-07-06 16:41:27,089:INFO:                shap: Not installed
2023-07-06 16:41:27,089:INFO:           interpret: Not installed
2023-07-06 16:41:27,089:INFO:                umap: Not installed
2023-07-06 16:41:27,089:INFO:    pandas_profiling: 3.6.6
2023-07-06 16:41:27,089:INFO:  explainerdashboard: Not installed
2023-07-06 16:41:27,089:INFO:             autoviz: Not installed
2023-07-06 16:41:27,090:INFO:           fairlearn: Not installed
2023-07-06 16:41:27,090:INFO:          deepchecks: Not installed
2023-07-06 16:41:27,090:INFO:             xgboost: Not installed
2023-07-06 16:41:27,090:INFO:            catboost: Not installed
2023-07-06 16:41:27,090:INFO:              kmodes: Not installed
2023-07-06 16:41:27,090:INFO:             mlxtend: Not installed
2023-07-06 16:41:27,090:INFO:       statsforecast: Not installed
2023-07-06 16:41:27,090:INFO:        tune_sklearn: Not installed
2023-07-06 16:41:27,090:INFO:                 ray: Not installed
2023-07-06 16:41:27,090:INFO:            hyperopt: Not installed
2023-07-06 16:41:27,090:INFO:              optuna: 3.1.1
2023-07-06 16:41:27,090:INFO:               skopt: Not installed
2023-07-06 16:41:27,090:INFO:              mlflow: Not installed
2023-07-06 16:41:27,090:INFO:              gradio: Not installed
2023-07-06 16:41:27,090:INFO:             fastapi: Not installed
2023-07-06 16:41:27,090:INFO:             uvicorn: Not installed
2023-07-06 16:41:27,090:INFO:              m2cgen: Not installed
2023-07-06 16:41:27,090:INFO:           evidently: Not installed
2023-07-06 16:41:27,090:INFO:               fugue: Not installed
2023-07-06 16:41:27,090:INFO:           streamlit: 1.24.0
2023-07-06 16:41:27,090:INFO:             prophet: Not installed
2023-07-06 16:41:27,090:INFO:None
2023-07-06 16:41:27,091:INFO:Set up data.
2023-07-06 16:41:27,102:INFO:Set up train/test split.
2023-07-06 16:41:27,107:INFO:Set up index.
2023-07-06 16:41:27,107:INFO:Set up folding strategy.
2023-07-06 16:41:27,107:INFO:Assigning column types.
2023-07-06 16:41:27,112:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-06 16:41:27,112:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 16:41:27,123:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:41:27,131:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:41:27,223:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:41:27,269:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:41:27,270:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:41:27,864:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:41:27,865:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 16:41:27,873:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:41:27,881:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:41:27,954:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:41:28,001:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:41:28,001:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:41:28,001:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:41:28,002:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-07-06 16:41:28,006:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:41:28,011:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:41:28,070:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:41:28,117:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:41:28,118:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:41:28,118:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:41:28,123:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:41:28,127:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:41:28,189:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:41:28,235:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:41:28,236:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:41:28,236:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:41:28,236:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-07-06 16:41:28,246:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:41:28,305:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:41:28,352:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:41:28,353:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:41:28,353:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:41:28,363:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:41:28,421:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:41:28,468:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:41:28,468:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:41:28,469:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:41:28,469:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-07-06 16:41:28,537:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:41:28,584:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:41:28,584:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:41:28,585:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:41:28,653:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:41:28,700:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:41:28,700:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:41:28,701:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:41:28,701:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-06 16:41:28,769:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:41:28,816:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:41:28,816:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:41:28,885:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:41:28,932:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:41:28,932:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:41:28,933:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-07-06 16:41:29,047:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:41:29,048:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:41:29,162:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:41:29,163:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:41:29,165:INFO:Preparing preprocessing pipeline...
2023-07-06 16:41:29,165:INFO:Set up simple imputation.
2023-07-06 16:41:29,165:INFO:Set up column name cleaning.
2023-07-06 16:41:29,184:INFO:Finished creating preprocessing pipeline.
2023-07-06 16:41:29,188:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['PTemp_C_Max', 'AirTC_Avg', 'RH',
                                             'WS_ms_Avg', 'TPM1', 'TPM2.5',
                                             'TPM10', 'GeffRef', 'TempRef',
                                             'Daylight'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-07-06 16:41:29,188:INFO:Creating final display dataframe.
2023-07-06 16:41:29,239:INFO:Setup _display_container:                     Description             Value
0                    Session id              1286
1                        Target       FT_Voltage1
2                   Target type        Regression
3           Original data shape        (2400, 11)
4        Transformed data shape        (2400, 11)
5   Transformed train set shape        (1680, 11)
6    Transformed test set shape         (720, 11)
7              Numeric features                10
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              f7e4
2023-07-06 16:41:29,369:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:41:29,370:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:41:29,489:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:41:29,489:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:41:29,489:INFO:setup() successfully completed in 2.44s...............
2023-07-06 16:41:29,490:INFO:Initializing compare_models()
2023-07-06 16:41:29,490:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af89b940>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f25af89b940>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-07-06 16:41:29,490:INFO:Checking exceptions
2023-07-06 16:41:29,491:INFO:Preparing display monitor
2023-07-06 16:41:29,511:INFO:Initializing Linear Regression
2023-07-06 16:41:29,512:INFO:Total runtime is 4.827976226806641e-06 minutes
2023-07-06 16:41:29,514:INFO:SubProcess create_model() called ==================================
2023-07-06 16:41:29,514:INFO:Initializing create_model()
2023-07-06 16:41:29,515:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af89b940>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae694fd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:41:29,515:INFO:Checking exceptions
2023-07-06 16:41:29,515:INFO:Importing libraries
2023-07-06 16:41:29,515:INFO:Copying training dataset
2023-07-06 16:41:29,518:INFO:Defining folds
2023-07-06 16:41:29,518:INFO:Declaring metric variables
2023-07-06 16:41:29,520:INFO:Importing untrained model
2023-07-06 16:41:29,523:INFO:Linear Regression Imported successfully
2023-07-06 16:41:29,528:INFO:Starting cross validation
2023-07-06 16:41:29,567:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:41:31,602:INFO:Calculating mean and std
2023-07-06 16:41:31,605:INFO:Creating metrics dataframe
2023-07-06 16:41:31,613:INFO:Uploading results into container
2023-07-06 16:41:31,614:INFO:Uploading model into container now
2023-07-06 16:41:31,615:INFO:_master_model_container: 1
2023-07-06 16:41:31,615:INFO:_display_container: 2
2023-07-06 16:41:31,615:INFO:LinearRegression(n_jobs=-1)
2023-07-06 16:41:31,616:INFO:create_model() successfully completed......................................
2023-07-06 16:41:31,856:INFO:SubProcess create_model() end ==================================
2023-07-06 16:41:31,856:INFO:Creating metrics dataframe
2023-07-06 16:41:31,864:INFO:Initializing Lasso Regression
2023-07-06 16:41:31,864:INFO:Total runtime is 0.039215449492136636 minutes
2023-07-06 16:41:31,867:INFO:SubProcess create_model() called ==================================
2023-07-06 16:41:31,867:INFO:Initializing create_model()
2023-07-06 16:41:31,868:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af89b940>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae694fd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:41:31,868:INFO:Checking exceptions
2023-07-06 16:41:31,868:INFO:Importing libraries
2023-07-06 16:41:31,868:INFO:Copying training dataset
2023-07-06 16:41:31,871:INFO:Defining folds
2023-07-06 16:41:31,871:INFO:Declaring metric variables
2023-07-06 16:41:31,874:INFO:Importing untrained model
2023-07-06 16:41:31,877:INFO:Lasso Regression Imported successfully
2023-07-06 16:41:31,882:INFO:Starting cross validation
2023-07-06 16:41:31,883:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:41:32,917:INFO:Calculating mean and std
2023-07-06 16:41:32,919:INFO:Creating metrics dataframe
2023-07-06 16:41:32,925:INFO:Uploading results into container
2023-07-06 16:41:32,926:INFO:Uploading model into container now
2023-07-06 16:41:32,927:INFO:_master_model_container: 2
2023-07-06 16:41:32,927:INFO:_display_container: 2
2023-07-06 16:41:32,927:INFO:Lasso(random_state=1286)
2023-07-06 16:41:32,927:INFO:create_model() successfully completed......................................
2023-07-06 16:41:33,103:INFO:SubProcess create_model() end ==================================
2023-07-06 16:41:33,103:INFO:Creating metrics dataframe
2023-07-06 16:41:33,111:INFO:Initializing Ridge Regression
2023-07-06 16:41:33,111:INFO:Total runtime is 0.05999018748601277 minutes
2023-07-06 16:41:33,113:INFO:SubProcess create_model() called ==================================
2023-07-06 16:41:33,113:INFO:Initializing create_model()
2023-07-06 16:41:33,114:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af89b940>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae694fd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:41:33,114:INFO:Checking exceptions
2023-07-06 16:41:33,114:INFO:Importing libraries
2023-07-06 16:41:33,114:INFO:Copying training dataset
2023-07-06 16:41:33,117:INFO:Defining folds
2023-07-06 16:41:33,117:INFO:Declaring metric variables
2023-07-06 16:41:33,120:INFO:Importing untrained model
2023-07-06 16:41:33,123:INFO:Ridge Regression Imported successfully
2023-07-06 16:41:33,128:INFO:Starting cross validation
2023-07-06 16:41:33,128:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:41:34,096:INFO:Calculating mean and std
2023-07-06 16:41:34,097:INFO:Creating metrics dataframe
2023-07-06 16:41:34,103:INFO:Uploading results into container
2023-07-06 16:41:34,104:INFO:Uploading model into container now
2023-07-06 16:41:34,105:INFO:_master_model_container: 3
2023-07-06 16:41:34,105:INFO:_display_container: 2
2023-07-06 16:41:34,105:INFO:Ridge(random_state=1286)
2023-07-06 16:41:34,105:INFO:create_model() successfully completed......................................
2023-07-06 16:41:34,320:INFO:SubProcess create_model() end ==================================
2023-07-06 16:41:34,320:INFO:Creating metrics dataframe
2023-07-06 16:41:34,329:INFO:Initializing Elastic Net
2023-07-06 16:41:34,329:INFO:Total runtime is 0.0802949587504069 minutes
2023-07-06 16:41:34,332:INFO:SubProcess create_model() called ==================================
2023-07-06 16:41:34,332:INFO:Initializing create_model()
2023-07-06 16:41:34,332:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af89b940>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae694fd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:41:34,332:INFO:Checking exceptions
2023-07-06 16:41:34,332:INFO:Importing libraries
2023-07-06 16:41:34,332:INFO:Copying training dataset
2023-07-06 16:41:34,337:INFO:Defining folds
2023-07-06 16:41:34,337:INFO:Declaring metric variables
2023-07-06 16:41:34,340:INFO:Importing untrained model
2023-07-06 16:41:34,342:INFO:Elastic Net Imported successfully
2023-07-06 16:41:34,347:INFO:Starting cross validation
2023-07-06 16:41:34,348:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:41:35,346:INFO:Calculating mean and std
2023-07-06 16:41:35,347:INFO:Creating metrics dataframe
2023-07-06 16:41:35,354:INFO:Uploading results into container
2023-07-06 16:41:35,355:INFO:Uploading model into container now
2023-07-06 16:41:35,356:INFO:_master_model_container: 4
2023-07-06 16:41:35,356:INFO:_display_container: 2
2023-07-06 16:41:35,357:INFO:ElasticNet(random_state=1286)
2023-07-06 16:41:35,357:INFO:create_model() successfully completed......................................
2023-07-06 16:41:35,569:INFO:SubProcess create_model() end ==================================
2023-07-06 16:41:35,569:INFO:Creating metrics dataframe
2023-07-06 16:41:35,578:INFO:Initializing Least Angle Regression
2023-07-06 16:41:35,578:INFO:Total runtime is 0.10111631155014038 minutes
2023-07-06 16:41:35,581:INFO:SubProcess create_model() called ==================================
2023-07-06 16:41:35,581:INFO:Initializing create_model()
2023-07-06 16:41:35,581:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af89b940>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae694fd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:41:35,581:INFO:Checking exceptions
2023-07-06 16:41:35,581:INFO:Importing libraries
2023-07-06 16:41:35,582:INFO:Copying training dataset
2023-07-06 16:41:35,585:INFO:Defining folds
2023-07-06 16:41:35,585:INFO:Declaring metric variables
2023-07-06 16:41:35,588:INFO:Importing untrained model
2023-07-06 16:41:35,591:INFO:Least Angle Regression Imported successfully
2023-07-06 16:41:35,595:INFO:Starting cross validation
2023-07-06 16:41:35,596:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:41:36,564:INFO:Calculating mean and std
2023-07-06 16:41:36,566:INFO:Creating metrics dataframe
2023-07-06 16:41:36,574:INFO:Uploading results into container
2023-07-06 16:41:36,575:INFO:Uploading model into container now
2023-07-06 16:41:36,576:INFO:_master_model_container: 5
2023-07-06 16:41:36,576:INFO:_display_container: 2
2023-07-06 16:41:36,576:INFO:Lars(random_state=1286)
2023-07-06 16:41:36,577:INFO:create_model() successfully completed......................................
2023-07-06 16:41:36,783:INFO:SubProcess create_model() end ==================================
2023-07-06 16:41:36,783:INFO:Creating metrics dataframe
2023-07-06 16:41:36,792:INFO:Initializing Lasso Least Angle Regression
2023-07-06 16:41:36,792:INFO:Total runtime is 0.12135365804036458 minutes
2023-07-06 16:41:36,795:INFO:SubProcess create_model() called ==================================
2023-07-06 16:41:36,796:INFO:Initializing create_model()
2023-07-06 16:41:36,796:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af89b940>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae694fd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:41:36,796:INFO:Checking exceptions
2023-07-06 16:41:36,796:INFO:Importing libraries
2023-07-06 16:41:36,796:INFO:Copying training dataset
2023-07-06 16:41:36,800:INFO:Defining folds
2023-07-06 16:41:36,800:INFO:Declaring metric variables
2023-07-06 16:41:36,803:INFO:Importing untrained model
2023-07-06 16:41:36,806:INFO:Lasso Least Angle Regression Imported successfully
2023-07-06 16:41:36,810:INFO:Starting cross validation
2023-07-06 16:41:36,811:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:41:37,769:INFO:Calculating mean and std
2023-07-06 16:41:37,770:INFO:Creating metrics dataframe
2023-07-06 16:41:37,777:INFO:Uploading results into container
2023-07-06 16:41:37,778:INFO:Uploading model into container now
2023-07-06 16:41:37,778:INFO:_master_model_container: 6
2023-07-06 16:41:37,779:INFO:_display_container: 2
2023-07-06 16:41:37,779:INFO:LassoLars(random_state=1286)
2023-07-06 16:41:37,779:INFO:create_model() successfully completed......................................
2023-07-06 16:41:37,999:INFO:SubProcess create_model() end ==================================
2023-07-06 16:41:37,999:INFO:Creating metrics dataframe
2023-07-06 16:41:38,009:INFO:Initializing Orthogonal Matching Pursuit
2023-07-06 16:41:38,009:INFO:Total runtime is 0.1416336933771769 minutes
2023-07-06 16:41:38,012:INFO:SubProcess create_model() called ==================================
2023-07-06 16:41:38,012:INFO:Initializing create_model()
2023-07-06 16:41:38,013:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af89b940>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae694fd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:41:38,013:INFO:Checking exceptions
2023-07-06 16:41:38,013:INFO:Importing libraries
2023-07-06 16:41:38,013:INFO:Copying training dataset
2023-07-06 16:41:38,016:INFO:Defining folds
2023-07-06 16:41:38,016:INFO:Declaring metric variables
2023-07-06 16:41:38,019:INFO:Importing untrained model
2023-07-06 16:41:38,022:INFO:Orthogonal Matching Pursuit Imported successfully
2023-07-06 16:41:38,027:INFO:Starting cross validation
2023-07-06 16:41:38,028:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:41:38,943:INFO:Calculating mean and std
2023-07-06 16:41:38,944:INFO:Creating metrics dataframe
2023-07-06 16:41:38,951:INFO:Uploading results into container
2023-07-06 16:41:38,951:INFO:Uploading model into container now
2023-07-06 16:41:38,952:INFO:_master_model_container: 7
2023-07-06 16:41:38,952:INFO:_display_container: 2
2023-07-06 16:41:38,952:INFO:OrthogonalMatchingPursuit()
2023-07-06 16:41:38,952:INFO:create_model() successfully completed......................................
2023-07-06 16:41:39,165:INFO:SubProcess create_model() end ==================================
2023-07-06 16:41:39,165:INFO:Creating metrics dataframe
2023-07-06 16:41:39,174:INFO:Initializing Bayesian Ridge
2023-07-06 16:41:39,174:INFO:Total runtime is 0.1610524773597717 minutes
2023-07-06 16:41:39,177:INFO:SubProcess create_model() called ==================================
2023-07-06 16:41:39,178:INFO:Initializing create_model()
2023-07-06 16:41:39,178:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af89b940>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae694fd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:41:39,178:INFO:Checking exceptions
2023-07-06 16:41:39,178:INFO:Importing libraries
2023-07-06 16:41:39,178:INFO:Copying training dataset
2023-07-06 16:41:39,183:INFO:Defining folds
2023-07-06 16:41:39,184:INFO:Declaring metric variables
2023-07-06 16:41:39,186:INFO:Importing untrained model
2023-07-06 16:41:39,189:INFO:Bayesian Ridge Imported successfully
2023-07-06 16:41:39,194:INFO:Starting cross validation
2023-07-06 16:41:39,195:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:41:39,333:INFO:Calculating mean and std
2023-07-06 16:41:39,335:INFO:Creating metrics dataframe
2023-07-06 16:41:39,341:INFO:Uploading results into container
2023-07-06 16:41:39,342:INFO:Uploading model into container now
2023-07-06 16:41:39,342:INFO:_master_model_container: 8
2023-07-06 16:41:39,343:INFO:_display_container: 2
2023-07-06 16:41:39,343:INFO:BayesianRidge()
2023-07-06 16:41:39,343:INFO:create_model() successfully completed......................................
2023-07-06 16:41:39,555:INFO:SubProcess create_model() end ==================================
2023-07-06 16:41:39,555:INFO:Creating metrics dataframe
2023-07-06 16:41:39,565:INFO:Initializing Passive Aggressive Regressor
2023-07-06 16:41:39,565:INFO:Total runtime is 0.16756312052408853 minutes
2023-07-06 16:41:39,568:INFO:SubProcess create_model() called ==================================
2023-07-06 16:41:39,568:INFO:Initializing create_model()
2023-07-06 16:41:39,568:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af89b940>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae694fd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:41:39,568:INFO:Checking exceptions
2023-07-06 16:41:39,568:INFO:Importing libraries
2023-07-06 16:41:39,568:INFO:Copying training dataset
2023-07-06 16:41:39,572:INFO:Defining folds
2023-07-06 16:41:39,572:INFO:Declaring metric variables
2023-07-06 16:41:39,575:INFO:Importing untrained model
2023-07-06 16:41:39,578:INFO:Passive Aggressive Regressor Imported successfully
2023-07-06 16:41:39,582:INFO:Starting cross validation
2023-07-06 16:41:39,583:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:41:39,703:INFO:Calculating mean and std
2023-07-06 16:41:39,704:INFO:Creating metrics dataframe
2023-07-06 16:41:39,708:INFO:Uploading results into container
2023-07-06 16:41:39,709:INFO:Uploading model into container now
2023-07-06 16:41:39,709:INFO:_master_model_container: 9
2023-07-06 16:41:39,709:INFO:_display_container: 2
2023-07-06 16:41:39,709:INFO:PassiveAggressiveRegressor(random_state=1286)
2023-07-06 16:41:39,709:INFO:create_model() successfully completed......................................
2023-07-06 16:41:39,928:INFO:SubProcess create_model() end ==================================
2023-07-06 16:41:39,929:INFO:Creating metrics dataframe
2023-07-06 16:41:39,938:INFO:Initializing Huber Regressor
2023-07-06 16:41:39,939:INFO:Total runtime is 0.17378784418106077 minutes
2023-07-06 16:41:39,941:INFO:SubProcess create_model() called ==================================
2023-07-06 16:41:39,942:INFO:Initializing create_model()
2023-07-06 16:41:39,942:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af89b940>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae694fd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:41:39,942:INFO:Checking exceptions
2023-07-06 16:41:39,942:INFO:Importing libraries
2023-07-06 16:41:39,942:INFO:Copying training dataset
2023-07-06 16:41:39,945:INFO:Defining folds
2023-07-06 16:41:39,946:INFO:Declaring metric variables
2023-07-06 16:41:39,948:INFO:Importing untrained model
2023-07-06 16:41:39,951:INFO:Huber Regressor Imported successfully
2023-07-06 16:41:39,956:INFO:Starting cross validation
2023-07-06 16:41:39,957:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:41:40,039:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:41:40,039:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:41:40,039:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:41:40,044:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:41:40,050:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:41:40,058:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:41:40,069:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:41:40,078:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:41:40,084:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:41:40,087:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:41:40,100:INFO:Calculating mean and std
2023-07-06 16:41:40,102:INFO:Creating metrics dataframe
2023-07-06 16:41:40,109:INFO:Uploading results into container
2023-07-06 16:41:40,110:INFO:Uploading model into container now
2023-07-06 16:41:40,110:INFO:_master_model_container: 10
2023-07-06 16:41:40,110:INFO:_display_container: 2
2023-07-06 16:41:40,111:INFO:HuberRegressor()
2023-07-06 16:41:40,111:INFO:create_model() successfully completed......................................
2023-07-06 16:41:40,318:INFO:SubProcess create_model() end ==================================
2023-07-06 16:41:40,319:INFO:Creating metrics dataframe
2023-07-06 16:41:40,328:INFO:Initializing K Neighbors Regressor
2023-07-06 16:41:40,328:INFO:Total runtime is 0.18028573592503863 minutes
2023-07-06 16:41:40,331:INFO:SubProcess create_model() called ==================================
2023-07-06 16:41:40,332:INFO:Initializing create_model()
2023-07-06 16:41:40,332:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af89b940>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae694fd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:41:40,332:INFO:Checking exceptions
2023-07-06 16:41:40,332:INFO:Importing libraries
2023-07-06 16:41:40,332:INFO:Copying training dataset
2023-07-06 16:41:40,336:INFO:Defining folds
2023-07-06 16:41:40,336:INFO:Declaring metric variables
2023-07-06 16:41:40,339:INFO:Importing untrained model
2023-07-06 16:41:40,341:INFO:K Neighbors Regressor Imported successfully
2023-07-06 16:41:40,346:INFO:Starting cross validation
2023-07-06 16:41:40,347:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:41:40,488:INFO:Calculating mean and std
2023-07-06 16:41:40,489:INFO:Creating metrics dataframe
2023-07-06 16:41:40,494:INFO:Uploading results into container
2023-07-06 16:41:40,494:INFO:Uploading model into container now
2023-07-06 16:41:40,495:INFO:_master_model_container: 11
2023-07-06 16:41:40,495:INFO:_display_container: 2
2023-07-06 16:41:40,495:INFO:KNeighborsRegressor(n_jobs=-1)
2023-07-06 16:41:40,495:INFO:create_model() successfully completed......................................
2023-07-06 16:41:40,702:INFO:SubProcess create_model() end ==================================
2023-07-06 16:41:40,702:INFO:Creating metrics dataframe
2023-07-06 16:41:40,712:INFO:Initializing Decision Tree Regressor
2023-07-06 16:41:40,713:INFO:Total runtime is 0.1866894205411275 minutes
2023-07-06 16:41:40,715:INFO:SubProcess create_model() called ==================================
2023-07-06 16:41:40,716:INFO:Initializing create_model()
2023-07-06 16:41:40,716:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af89b940>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae694fd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:41:40,716:INFO:Checking exceptions
2023-07-06 16:41:40,716:INFO:Importing libraries
2023-07-06 16:41:40,716:INFO:Copying training dataset
2023-07-06 16:41:40,719:INFO:Defining folds
2023-07-06 16:41:40,720:INFO:Declaring metric variables
2023-07-06 16:41:40,722:INFO:Importing untrained model
2023-07-06 16:41:40,725:INFO:Decision Tree Regressor Imported successfully
2023-07-06 16:41:40,730:INFO:Starting cross validation
2023-07-06 16:41:40,731:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:41:40,865:INFO:Calculating mean and std
2023-07-06 16:41:40,867:INFO:Creating metrics dataframe
2023-07-06 16:41:40,871:INFO:Uploading results into container
2023-07-06 16:41:40,871:INFO:Uploading model into container now
2023-07-06 16:41:40,872:INFO:_master_model_container: 12
2023-07-06 16:41:40,872:INFO:_display_container: 2
2023-07-06 16:41:40,872:INFO:DecisionTreeRegressor(random_state=1286)
2023-07-06 16:41:40,872:INFO:create_model() successfully completed......................................
2023-07-06 16:41:41,069:INFO:SubProcess create_model() end ==================================
2023-07-06 16:41:41,069:INFO:Creating metrics dataframe
2023-07-06 16:41:41,080:INFO:Initializing Random Forest Regressor
2023-07-06 16:41:41,080:INFO:Total runtime is 0.19281490246454872 minutes
2023-07-06 16:41:41,083:INFO:SubProcess create_model() called ==================================
2023-07-06 16:41:41,083:INFO:Initializing create_model()
2023-07-06 16:41:41,084:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af89b940>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae694fd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:41:41,084:INFO:Checking exceptions
2023-07-06 16:41:41,084:INFO:Importing libraries
2023-07-06 16:41:41,084:INFO:Copying training dataset
2023-07-06 16:41:41,087:INFO:Defining folds
2023-07-06 16:41:41,087:INFO:Declaring metric variables
2023-07-06 16:41:41,090:INFO:Importing untrained model
2023-07-06 16:41:41,093:INFO:Random Forest Regressor Imported successfully
2023-07-06 16:41:41,098:INFO:Starting cross validation
2023-07-06 16:41:41,099:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:41:41,580:INFO:Calculating mean and std
2023-07-06 16:41:41,581:INFO:Creating metrics dataframe
2023-07-06 16:41:41,587:INFO:Uploading results into container
2023-07-06 16:41:41,587:INFO:Uploading model into container now
2023-07-06 16:41:41,587:INFO:_master_model_container: 13
2023-07-06 16:41:41,587:INFO:_display_container: 2
2023-07-06 16:41:41,588:INFO:RandomForestRegressor(n_jobs=-1, random_state=1286)
2023-07-06 16:41:41,588:INFO:create_model() successfully completed......................................
2023-07-06 16:41:41,746:INFO:SubProcess create_model() end ==================================
2023-07-06 16:41:41,747:INFO:Creating metrics dataframe
2023-07-06 16:41:41,757:INFO:Initializing Extra Trees Regressor
2023-07-06 16:41:41,757:INFO:Total runtime is 0.2040945490201314 minutes
2023-07-06 16:41:41,760:INFO:SubProcess create_model() called ==================================
2023-07-06 16:41:41,760:INFO:Initializing create_model()
2023-07-06 16:41:41,760:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af89b940>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae694fd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:41:41,760:INFO:Checking exceptions
2023-07-06 16:41:41,760:INFO:Importing libraries
2023-07-06 16:41:41,760:INFO:Copying training dataset
2023-07-06 16:41:41,764:INFO:Defining folds
2023-07-06 16:41:41,764:INFO:Declaring metric variables
2023-07-06 16:41:41,767:INFO:Importing untrained model
2023-07-06 16:41:41,770:INFO:Extra Trees Regressor Imported successfully
2023-07-06 16:41:41,774:INFO:Starting cross validation
2023-07-06 16:41:41,775:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:41:42,202:INFO:Calculating mean and std
2023-07-06 16:41:42,204:INFO:Creating metrics dataframe
2023-07-06 16:41:42,224:INFO:Uploading results into container
2023-07-06 16:41:42,225:INFO:Uploading model into container now
2023-07-06 16:41:42,225:INFO:_master_model_container: 14
2023-07-06 16:41:42,226:INFO:_display_container: 2
2023-07-06 16:41:42,226:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1286)
2023-07-06 16:41:42,226:INFO:create_model() successfully completed......................................
2023-07-06 16:41:42,423:INFO:SubProcess create_model() end ==================================
2023-07-06 16:41:42,423:INFO:Creating metrics dataframe
2023-07-06 16:41:42,433:INFO:Initializing AdaBoost Regressor
2023-07-06 16:41:42,433:INFO:Total runtime is 0.2153690775235494 minutes
2023-07-06 16:41:42,436:INFO:SubProcess create_model() called ==================================
2023-07-06 16:41:42,437:INFO:Initializing create_model()
2023-07-06 16:41:42,437:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af89b940>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae694fd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:41:42,437:INFO:Checking exceptions
2023-07-06 16:41:42,437:INFO:Importing libraries
2023-07-06 16:41:42,437:INFO:Copying training dataset
2023-07-06 16:41:42,440:INFO:Defining folds
2023-07-06 16:41:42,441:INFO:Declaring metric variables
2023-07-06 16:41:42,443:INFO:Importing untrained model
2023-07-06 16:41:42,446:INFO:AdaBoost Regressor Imported successfully
2023-07-06 16:41:42,451:INFO:Starting cross validation
2023-07-06 16:41:42,452:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:41:42,805:INFO:Calculating mean and std
2023-07-06 16:41:42,807:INFO:Creating metrics dataframe
2023-07-06 16:41:42,824:INFO:Uploading results into container
2023-07-06 16:41:42,825:INFO:Uploading model into container now
2023-07-06 16:41:42,825:INFO:_master_model_container: 15
2023-07-06 16:41:42,825:INFO:_display_container: 2
2023-07-06 16:41:42,826:INFO:AdaBoostRegressor(random_state=1286)
2023-07-06 16:41:42,826:INFO:create_model() successfully completed......................................
2023-07-06 16:41:43,040:INFO:SubProcess create_model() end ==================================
2023-07-06 16:41:43,040:INFO:Creating metrics dataframe
2023-07-06 16:41:43,050:INFO:Initializing Gradient Boosting Regressor
2023-07-06 16:41:43,051:INFO:Total runtime is 0.2256555954615275 minutes
2023-07-06 16:41:43,053:INFO:SubProcess create_model() called ==================================
2023-07-06 16:41:43,054:INFO:Initializing create_model()
2023-07-06 16:41:43,054:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af89b940>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae694fd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:41:43,054:INFO:Checking exceptions
2023-07-06 16:41:43,054:INFO:Importing libraries
2023-07-06 16:41:43,054:INFO:Copying training dataset
2023-07-06 16:41:43,057:INFO:Defining folds
2023-07-06 16:41:43,058:INFO:Declaring metric variables
2023-07-06 16:41:43,060:INFO:Importing untrained model
2023-07-06 16:41:43,063:INFO:Gradient Boosting Regressor Imported successfully
2023-07-06 16:41:43,068:INFO:Starting cross validation
2023-07-06 16:41:43,069:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:41:43,694:INFO:Calculating mean and std
2023-07-06 16:41:43,696:INFO:Creating metrics dataframe
2023-07-06 16:41:43,717:INFO:Uploading results into container
2023-07-06 16:41:43,718:INFO:Uploading model into container now
2023-07-06 16:41:43,719:INFO:_master_model_container: 16
2023-07-06 16:41:43,719:INFO:_display_container: 2
2023-07-06 16:41:43,719:INFO:GradientBoostingRegressor(random_state=1286)
2023-07-06 16:41:43,719:INFO:create_model() successfully completed......................................
2023-07-06 16:41:43,898:INFO:SubProcess create_model() end ==================================
2023-07-06 16:41:43,898:INFO:Creating metrics dataframe
2023-07-06 16:41:43,909:INFO:Initializing Light Gradient Boosting Machine
2023-07-06 16:41:43,909:INFO:Total runtime is 0.2399632175763448 minutes
2023-07-06 16:41:43,913:INFO:SubProcess create_model() called ==================================
2023-07-06 16:41:43,913:INFO:Initializing create_model()
2023-07-06 16:41:43,913:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af89b940>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae694fd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:41:43,913:INFO:Checking exceptions
2023-07-06 16:41:43,913:INFO:Importing libraries
2023-07-06 16:41:43,913:INFO:Copying training dataset
2023-07-06 16:41:43,917:INFO:Defining folds
2023-07-06 16:41:43,917:INFO:Declaring metric variables
2023-07-06 16:41:43,920:INFO:Importing untrained model
2023-07-06 16:41:43,923:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-06 16:41:43,928:INFO:Starting cross validation
2023-07-06 16:41:43,929:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:41:44,397:INFO:Calculating mean and std
2023-07-06 16:41:44,400:INFO:Creating metrics dataframe
2023-07-06 16:41:44,418:INFO:Uploading results into container
2023-07-06 16:41:44,419:INFO:Uploading model into container now
2023-07-06 16:41:44,420:INFO:_master_model_container: 17
2023-07-06 16:41:44,420:INFO:_display_container: 2
2023-07-06 16:41:44,421:INFO:LGBMRegressor(random_state=1286)
2023-07-06 16:41:44,421:INFO:create_model() successfully completed......................................
2023-07-06 16:41:44,613:INFO:SubProcess create_model() end ==================================
2023-07-06 16:41:44,613:INFO:Creating metrics dataframe
2023-07-06 16:41:44,624:INFO:Initializing Dummy Regressor
2023-07-06 16:41:44,624:INFO:Total runtime is 0.2518774310747782 minutes
2023-07-06 16:41:44,627:INFO:SubProcess create_model() called ==================================
2023-07-06 16:41:44,627:INFO:Initializing create_model()
2023-07-06 16:41:44,627:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af89b940>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae694fd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:41:44,627:INFO:Checking exceptions
2023-07-06 16:41:44,627:INFO:Importing libraries
2023-07-06 16:41:44,627:INFO:Copying training dataset
2023-07-06 16:41:44,631:INFO:Defining folds
2023-07-06 16:41:44,631:INFO:Declaring metric variables
2023-07-06 16:41:44,633:INFO:Importing untrained model
2023-07-06 16:41:44,636:INFO:Dummy Regressor Imported successfully
2023-07-06 16:41:44,641:INFO:Starting cross validation
2023-07-06 16:41:44,642:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:41:44,760:INFO:Calculating mean and std
2023-07-06 16:41:44,761:INFO:Creating metrics dataframe
2023-07-06 16:41:44,769:INFO:Uploading results into container
2023-07-06 16:41:44,770:INFO:Uploading model into container now
2023-07-06 16:41:44,770:INFO:_master_model_container: 18
2023-07-06 16:41:44,770:INFO:_display_container: 2
2023-07-06 16:41:44,770:INFO:DummyRegressor()
2023-07-06 16:41:44,770:INFO:create_model() successfully completed......................................
2023-07-06 16:41:44,940:INFO:SubProcess create_model() end ==================================
2023-07-06 16:41:44,940:INFO:Creating metrics dataframe
2023-07-06 16:41:44,959:INFO:Initializing create_model()
2023-07-06 16:41:44,959:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af89b940>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=1286), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:41:44,959:INFO:Checking exceptions
2023-07-06 16:41:44,961:INFO:Importing libraries
2023-07-06 16:41:44,961:INFO:Copying training dataset
2023-07-06 16:41:44,964:INFO:Defining folds
2023-07-06 16:41:44,964:INFO:Declaring metric variables
2023-07-06 16:41:44,964:INFO:Importing untrained model
2023-07-06 16:41:44,964:INFO:Declaring custom model
2023-07-06 16:41:44,965:INFO:Extra Trees Regressor Imported successfully
2023-07-06 16:41:44,965:INFO:Cross validation set to False
2023-07-06 16:41:44,965:INFO:Fitting Model
2023-07-06 16:41:45,275:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1286)
2023-07-06 16:41:45,275:INFO:create_model() successfully completed......................................
2023-07-06 16:41:45,472:INFO:_master_model_container: 18
2023-07-06 16:41:45,472:INFO:_display_container: 2
2023-07-06 16:41:45,472:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1286)
2023-07-06 16:41:45,472:INFO:compare_models() successfully completed......................................
2023-07-06 16:45:18,096:INFO:PyCaret RegressionExperiment
2023-07-06 16:45:18,096:INFO:Logging name: reg-default-name
2023-07-06 16:45:18,096:INFO:ML Usecase: MLUsecase.REGRESSION
2023-07-06 16:45:18,096:INFO:version 3.0.4
2023-07-06 16:45:18,096:INFO:Initializing setup()
2023-07-06 16:45:18,096:INFO:self.USI: 585c
2023-07-06 16:45:18,096:INFO:self._variable_keys: {'pipeline', 'fold_groups_param', 'log_plots_param', '_ml_usecase', 'memory', 'transform_target_param', 'logging_param', 'y', 'USI', 'data', 'target_param', 'html_param', 'fold_generator', 'X', 'n_jobs_param', 'X_test', 'y_test', 'exp_id', 'X_train', 'exp_name_log', 'gpu_n_jobs_param', 'seed', 'idx', 'gpu_param', 'y_train', '_available_plots', 'fold_shuffle_param'}
2023-07-06 16:45:18,096:INFO:Checking environment
2023-07-06 16:45:18,096:INFO:python_version: 3.9.16
2023-07-06 16:45:18,096:INFO:python_build: ('main', 'Feb  1 2023 21:39:03')
2023-07-06 16:45:18,097:INFO:machine: x86_64
2023-07-06 16:45:18,097:INFO:platform: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 16:45:18,097:INFO:Memory: svmem(total=540878073856, available=523458142208, percent=3.2, used=13903900672, free=2961752064, active=32409448448, inactive=488894771200, buffers=2726014976, cached=521286406144, shared=22061056, slab=14546878464)
2023-07-06 16:45:18,100:INFO:Physical Core: 64
2023-07-06 16:45:18,100:INFO:Logical Core: 64
2023-07-06 16:45:18,100:INFO:Checking libraries
2023-07-06 16:45:18,100:INFO:System:
2023-07-06 16:45:18,100:INFO:    python: 3.9.16 | packaged by conda-forge | (main, Feb  1 2023, 21:39:03)  [GCC 11.3.0]
2023-07-06 16:45:18,100:INFO:executable: /home/mirlab/anaconda3/envs/misc/bin/python
2023-07-06 16:45:18,101:INFO:   machine: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 16:45:18,101:INFO:PyCaret required dependencies:
2023-07-06 16:45:18,101:INFO:                 pip: 23.1.2
2023-07-06 16:45:18,101:INFO:          setuptools: 67.7.2
2023-07-06 16:45:18,101:INFO:             pycaret: 3.0.4
2023-07-06 16:45:18,101:INFO:             IPython: 8.14.0
2023-07-06 16:45:18,101:INFO:          ipywidgets: 8.0.7
2023-07-06 16:45:18,101:INFO:                tqdm: 4.64.1
2023-07-06 16:45:18,101:INFO:               numpy: 1.23.5
2023-07-06 16:45:18,101:INFO:              pandas: 1.5.3
2023-07-06 16:45:18,101:INFO:              jinja2: 3.1.2
2023-07-06 16:45:18,101:INFO:               scipy: 1.10.1
2023-07-06 16:45:18,101:INFO:              joblib: 1.2.0
2023-07-06 16:45:18,101:INFO:             sklearn: 1.2.2
2023-07-06 16:45:18,101:INFO:                pyod: 1.1.0
2023-07-06 16:45:18,101:INFO:            imblearn: 0.10.1
2023-07-06 16:45:18,101:INFO:   category_encoders: 2.6.1
2023-07-06 16:45:18,101:INFO:            lightgbm: 3.3.5
2023-07-06 16:45:18,101:INFO:               numba: 0.57.0
2023-07-06 16:45:18,101:INFO:            requests: 2.28.1
2023-07-06 16:45:18,101:INFO:          matplotlib: 3.7.1
2023-07-06 16:45:18,102:INFO:          scikitplot: 0.3.7
2023-07-06 16:45:18,102:INFO:         yellowbrick: 1.5
2023-07-06 16:45:18,102:INFO:              plotly: 5.15.0
2023-07-06 16:45:18,102:INFO:    plotly-resampler: Not installed
2023-07-06 16:45:18,102:INFO:             kaleido: 0.2.1
2023-07-06 16:45:18,102:INFO:           schemdraw: 0.15
2023-07-06 16:45:18,102:INFO:         statsmodels: 0.14.0
2023-07-06 16:45:18,102:INFO:              sktime: 0.20.0
2023-07-06 16:45:18,102:INFO:               tbats: 1.1.3
2023-07-06 16:45:18,102:INFO:            pmdarima: 2.0.3
2023-07-06 16:45:18,102:INFO:              psutil: 5.9.5
2023-07-06 16:45:18,102:INFO:          markupsafe: 2.1.2
2023-07-06 16:45:18,102:INFO:             pickle5: Not installed
2023-07-06 16:45:18,102:INFO:         cloudpickle: 2.2.1
2023-07-06 16:45:18,102:INFO:         deprecation: 2.1.0
2023-07-06 16:45:18,102:INFO:              xxhash: 3.2.0
2023-07-06 16:45:18,102:INFO:           wurlitzer: 3.0.3
2023-07-06 16:45:18,102:INFO:PyCaret optional dependencies:
2023-07-06 16:45:18,102:INFO:                shap: Not installed
2023-07-06 16:45:18,102:INFO:           interpret: Not installed
2023-07-06 16:45:18,102:INFO:                umap: Not installed
2023-07-06 16:45:18,102:INFO:    pandas_profiling: 3.6.6
2023-07-06 16:45:18,103:INFO:  explainerdashboard: Not installed
2023-07-06 16:45:18,103:INFO:             autoviz: Not installed
2023-07-06 16:45:18,103:INFO:           fairlearn: Not installed
2023-07-06 16:45:18,103:INFO:          deepchecks: Not installed
2023-07-06 16:45:18,103:INFO:             xgboost: Not installed
2023-07-06 16:45:18,103:INFO:            catboost: Not installed
2023-07-06 16:45:18,103:INFO:              kmodes: Not installed
2023-07-06 16:45:18,103:INFO:             mlxtend: Not installed
2023-07-06 16:45:18,103:INFO:       statsforecast: Not installed
2023-07-06 16:45:18,103:INFO:        tune_sklearn: Not installed
2023-07-06 16:45:18,103:INFO:                 ray: Not installed
2023-07-06 16:45:18,103:INFO:            hyperopt: Not installed
2023-07-06 16:45:18,103:INFO:              optuna: 3.1.1
2023-07-06 16:45:18,103:INFO:               skopt: Not installed
2023-07-06 16:45:18,103:INFO:              mlflow: Not installed
2023-07-06 16:45:18,103:INFO:              gradio: Not installed
2023-07-06 16:45:18,103:INFO:             fastapi: Not installed
2023-07-06 16:45:18,103:INFO:             uvicorn: Not installed
2023-07-06 16:45:18,103:INFO:              m2cgen: Not installed
2023-07-06 16:45:18,103:INFO:           evidently: Not installed
2023-07-06 16:45:18,103:INFO:               fugue: Not installed
2023-07-06 16:45:18,103:INFO:           streamlit: 1.24.0
2023-07-06 16:45:18,103:INFO:             prophet: Not installed
2023-07-06 16:45:18,103:INFO:None
2023-07-06 16:45:18,104:INFO:Set up data.
2023-07-06 16:45:18,113:INFO:Set up train/test split.
2023-07-06 16:45:18,117:INFO:Set up index.
2023-07-06 16:45:18,117:INFO:Set up folding strategy.
2023-07-06 16:45:18,117:INFO:Assigning column types.
2023-07-06 16:45:18,122:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-06 16:45:18,122:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 16:45:18,133:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:45:18,141:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:45:18,208:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:45:18,256:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:45:18,257:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:45:18,257:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:45:18,257:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 16:45:18,262:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:45:18,267:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:45:18,327:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:45:18,374:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:45:18,375:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:45:18,375:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:45:18,375:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-07-06 16:45:18,380:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:45:18,385:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:45:18,444:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:45:18,492:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:45:18,492:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:45:18,493:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:45:18,498:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:45:18,503:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:45:18,562:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:45:18,609:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:45:18,609:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:45:18,610:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:45:18,610:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-07-06 16:45:18,620:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:45:18,680:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:45:18,727:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:45:18,728:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:45:18,728:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:45:18,738:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:45:18,802:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:45:18,849:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:45:18,850:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:45:18,850:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:45:18,850:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-07-06 16:45:18,920:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:45:18,968:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:45:18,968:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:45:18,968:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:45:19,038:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:45:19,086:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:45:19,087:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:45:19,087:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:45:19,087:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-06 16:45:19,156:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:45:19,205:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:45:19,205:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:45:19,274:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:45:19,322:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:45:19,322:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:45:19,323:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-07-06 16:45:19,440:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:45:19,440:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:45:19,563:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:45:19,563:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:45:19,564:INFO:Preparing preprocessing pipeline...
2023-07-06 16:45:19,564:INFO:Set up simple imputation.
2023-07-06 16:45:19,565:INFO:Set up column name cleaning.
2023-07-06 16:45:19,580:INFO:Finished creating preprocessing pipeline.
2023-07-06 16:45:19,584:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['PTemp_C_Max', 'AirTC_Avg', 'RH',
                                             'WS_ms_Avg', 'TPM1', 'TPM2.5',
                                             'TPM10', 'GeffRef', 'TempRef',
                                             'Daylight'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-07-06 16:45:19,584:INFO:Creating final display dataframe.
2023-07-06 16:45:19,635:INFO:Setup _display_container:                     Description             Value
0                    Session id              5852
1                        Target       FT_Voltage1
2                   Target type        Regression
3           Original data shape        (2400, 11)
4        Transformed data shape        (2400, 11)
5   Transformed train set shape        (1680, 11)
6    Transformed test set shape         (720, 11)
7              Numeric features                10
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              585c
2023-07-06 16:45:19,761:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:45:19,761:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:45:19,879:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:45:19,879:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:45:19,880:INFO:setup() successfully completed in 1.79s...............
2023-07-06 16:45:19,880:INFO:Initializing compare_models()
2023-07-06 16:45:19,880:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c0935b80>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f25c0935b80>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-07-06 16:45:19,880:INFO:Checking exceptions
2023-07-06 16:45:19,881:INFO:Preparing display monitor
2023-07-06 16:45:19,899:INFO:Initializing Linear Regression
2023-07-06 16:45:19,899:INFO:Total runtime is 4.53790028889974e-06 minutes
2023-07-06 16:45:19,902:INFO:SubProcess create_model() called ==================================
2023-07-06 16:45:19,902:INFO:Initializing create_model()
2023-07-06 16:45:19,902:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c0935b80>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb88340>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:45:19,902:INFO:Checking exceptions
2023-07-06 16:45:19,902:INFO:Importing libraries
2023-07-06 16:45:19,902:INFO:Copying training dataset
2023-07-06 16:45:19,905:INFO:Defining folds
2023-07-06 16:45:19,905:INFO:Declaring metric variables
2023-07-06 16:45:19,907:INFO:Importing untrained model
2023-07-06 16:45:19,910:INFO:Linear Regression Imported successfully
2023-07-06 16:45:19,915:INFO:Starting cross validation
2023-07-06 16:45:19,916:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:45:20,068:INFO:Calculating mean and std
2023-07-06 16:45:20,069:INFO:Creating metrics dataframe
2023-07-06 16:45:20,089:INFO:Uploading results into container
2023-07-06 16:45:20,089:INFO:Uploading model into container now
2023-07-06 16:45:20,090:INFO:_master_model_container: 1
2023-07-06 16:45:20,090:INFO:_display_container: 2
2023-07-06 16:45:20,090:INFO:LinearRegression(n_jobs=-1)
2023-07-06 16:45:20,090:INFO:create_model() successfully completed......................................
2023-07-06 16:45:20,291:INFO:SubProcess create_model() end ==================================
2023-07-06 16:45:20,291:INFO:Creating metrics dataframe
2023-07-06 16:45:20,299:INFO:Initializing Lasso Regression
2023-07-06 16:45:20,299:INFO:Total runtime is 0.006668416659037272 minutes
2023-07-06 16:45:20,302:INFO:SubProcess create_model() called ==================================
2023-07-06 16:45:20,302:INFO:Initializing create_model()
2023-07-06 16:45:20,302:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c0935b80>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb88340>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:45:20,302:INFO:Checking exceptions
2023-07-06 16:45:20,302:INFO:Importing libraries
2023-07-06 16:45:20,303:INFO:Copying training dataset
2023-07-06 16:45:20,305:INFO:Defining folds
2023-07-06 16:45:20,305:INFO:Declaring metric variables
2023-07-06 16:45:20,308:INFO:Importing untrained model
2023-07-06 16:45:20,310:INFO:Lasso Regression Imported successfully
2023-07-06 16:45:20,315:INFO:Starting cross validation
2023-07-06 16:45:20,316:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:45:20,472:INFO:Calculating mean and std
2023-07-06 16:45:20,473:INFO:Creating metrics dataframe
2023-07-06 16:45:20,494:INFO:Uploading results into container
2023-07-06 16:45:20,494:INFO:Uploading model into container now
2023-07-06 16:45:20,495:INFO:_master_model_container: 2
2023-07-06 16:45:20,495:INFO:_display_container: 2
2023-07-06 16:45:20,495:INFO:Lasso(random_state=5852)
2023-07-06 16:45:20,495:INFO:create_model() successfully completed......................................
2023-07-06 16:45:20,701:INFO:SubProcess create_model() end ==================================
2023-07-06 16:45:20,701:INFO:Creating metrics dataframe
2023-07-06 16:45:20,709:INFO:Initializing Ridge Regression
2023-07-06 16:45:20,710:INFO:Total runtime is 0.01351101001103719 minutes
2023-07-06 16:45:20,714:INFO:SubProcess create_model() called ==================================
2023-07-06 16:45:20,714:INFO:Initializing create_model()
2023-07-06 16:45:20,714:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c0935b80>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb88340>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:45:20,714:INFO:Checking exceptions
2023-07-06 16:45:20,714:INFO:Importing libraries
2023-07-06 16:45:20,714:INFO:Copying training dataset
2023-07-06 16:45:20,718:INFO:Defining folds
2023-07-06 16:45:20,718:INFO:Declaring metric variables
2023-07-06 16:45:20,720:INFO:Importing untrained model
2023-07-06 16:45:20,722:INFO:Ridge Regression Imported successfully
2023-07-06 16:45:20,727:INFO:Starting cross validation
2023-07-06 16:45:20,728:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:45:20,845:INFO:Calculating mean and std
2023-07-06 16:45:20,846:INFO:Creating metrics dataframe
2023-07-06 16:45:20,861:INFO:Uploading results into container
2023-07-06 16:45:20,861:INFO:Uploading model into container now
2023-07-06 16:45:20,862:INFO:_master_model_container: 3
2023-07-06 16:45:20,862:INFO:_display_container: 2
2023-07-06 16:45:20,862:INFO:Ridge(random_state=5852)
2023-07-06 16:45:20,863:INFO:create_model() successfully completed......................................
2023-07-06 16:45:21,062:INFO:SubProcess create_model() end ==================================
2023-07-06 16:45:21,062:INFO:Creating metrics dataframe
2023-07-06 16:45:21,071:INFO:Initializing Elastic Net
2023-07-06 16:45:21,071:INFO:Total runtime is 0.01953369379043579 minutes
2023-07-06 16:45:21,074:INFO:SubProcess create_model() called ==================================
2023-07-06 16:45:21,075:INFO:Initializing create_model()
2023-07-06 16:45:21,075:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c0935b80>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb88340>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:45:21,075:INFO:Checking exceptions
2023-07-06 16:45:21,075:INFO:Importing libraries
2023-07-06 16:45:21,075:INFO:Copying training dataset
2023-07-06 16:45:21,078:INFO:Defining folds
2023-07-06 16:45:21,079:INFO:Declaring metric variables
2023-07-06 16:45:21,082:INFO:Importing untrained model
2023-07-06 16:45:21,084:INFO:Elastic Net Imported successfully
2023-07-06 16:45:21,089:INFO:Starting cross validation
2023-07-06 16:45:21,090:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:45:21,225:INFO:Calculating mean and std
2023-07-06 16:45:21,227:INFO:Creating metrics dataframe
2023-07-06 16:45:21,246:INFO:Uploading results into container
2023-07-06 16:45:21,247:INFO:Uploading model into container now
2023-07-06 16:45:21,247:INFO:_master_model_container: 4
2023-07-06 16:45:21,247:INFO:_display_container: 2
2023-07-06 16:45:21,248:INFO:ElasticNet(random_state=5852)
2023-07-06 16:45:21,248:INFO:create_model() successfully completed......................................
2023-07-06 16:45:21,444:INFO:SubProcess create_model() end ==================================
2023-07-06 16:45:21,444:INFO:Creating metrics dataframe
2023-07-06 16:45:21,453:INFO:Initializing Least Angle Regression
2023-07-06 16:45:21,453:INFO:Total runtime is 0.025897558530171713 minutes
2023-07-06 16:45:21,456:INFO:SubProcess create_model() called ==================================
2023-07-06 16:45:21,457:INFO:Initializing create_model()
2023-07-06 16:45:21,457:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c0935b80>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb88340>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:45:21,457:INFO:Checking exceptions
2023-07-06 16:45:21,457:INFO:Importing libraries
2023-07-06 16:45:21,457:INFO:Copying training dataset
2023-07-06 16:45:21,461:INFO:Defining folds
2023-07-06 16:45:21,461:INFO:Declaring metric variables
2023-07-06 16:45:21,464:INFO:Importing untrained model
2023-07-06 16:45:21,467:INFO:Least Angle Regression Imported successfully
2023-07-06 16:45:21,471:INFO:Starting cross validation
2023-07-06 16:45:21,472:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:45:21,584:INFO:Calculating mean and std
2023-07-06 16:45:21,585:INFO:Creating metrics dataframe
2023-07-06 16:45:21,600:INFO:Uploading results into container
2023-07-06 16:45:21,601:INFO:Uploading model into container now
2023-07-06 16:45:21,601:INFO:_master_model_container: 5
2023-07-06 16:45:21,601:INFO:_display_container: 2
2023-07-06 16:45:21,602:INFO:Lars(random_state=5852)
2023-07-06 16:45:21,602:INFO:create_model() successfully completed......................................
2023-07-06 16:45:21,821:INFO:SubProcess create_model() end ==================================
2023-07-06 16:45:21,822:INFO:Creating metrics dataframe
2023-07-06 16:45:21,831:INFO:Initializing Lasso Least Angle Regression
2023-07-06 16:45:21,831:INFO:Total runtime is 0.03219952980677287 minutes
2023-07-06 16:45:21,834:INFO:SubProcess create_model() called ==================================
2023-07-06 16:45:21,834:INFO:Initializing create_model()
2023-07-06 16:45:21,834:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c0935b80>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb88340>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:45:21,834:INFO:Checking exceptions
2023-07-06 16:45:21,834:INFO:Importing libraries
2023-07-06 16:45:21,835:INFO:Copying training dataset
2023-07-06 16:45:21,838:INFO:Defining folds
2023-07-06 16:45:21,839:INFO:Declaring metric variables
2023-07-06 16:45:21,841:INFO:Importing untrained model
2023-07-06 16:45:21,844:INFO:Lasso Least Angle Regression Imported successfully
2023-07-06 16:45:21,848:INFO:Starting cross validation
2023-07-06 16:45:21,849:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:45:22,005:INFO:Calculating mean and std
2023-07-06 16:45:22,007:INFO:Creating metrics dataframe
2023-07-06 16:45:22,027:INFO:Uploading results into container
2023-07-06 16:45:22,028:INFO:Uploading model into container now
2023-07-06 16:45:22,029:INFO:_master_model_container: 6
2023-07-06 16:45:22,029:INFO:_display_container: 2
2023-07-06 16:45:22,029:INFO:LassoLars(random_state=5852)
2023-07-06 16:45:22,029:INFO:create_model() successfully completed......................................
2023-07-06 16:45:22,232:INFO:SubProcess create_model() end ==================================
2023-07-06 16:45:22,232:INFO:Creating metrics dataframe
2023-07-06 16:45:22,241:INFO:Initializing Orthogonal Matching Pursuit
2023-07-06 16:45:22,241:INFO:Total runtime is 0.03903376658757528 minutes
2023-07-06 16:45:22,244:INFO:SubProcess create_model() called ==================================
2023-07-06 16:45:22,244:INFO:Initializing create_model()
2023-07-06 16:45:22,245:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c0935b80>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb88340>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:45:22,245:INFO:Checking exceptions
2023-07-06 16:45:22,245:INFO:Importing libraries
2023-07-06 16:45:22,245:INFO:Copying training dataset
2023-07-06 16:45:22,248:INFO:Defining folds
2023-07-06 16:45:22,248:INFO:Declaring metric variables
2023-07-06 16:45:22,251:INFO:Importing untrained model
2023-07-06 16:45:22,254:INFO:Orthogonal Matching Pursuit Imported successfully
2023-07-06 16:45:22,258:INFO:Starting cross validation
2023-07-06 16:45:22,259:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:45:22,419:INFO:Calculating mean and std
2023-07-06 16:45:22,421:INFO:Creating metrics dataframe
2023-07-06 16:45:22,444:INFO:Uploading results into container
2023-07-06 16:45:22,445:INFO:Uploading model into container now
2023-07-06 16:45:22,446:INFO:_master_model_container: 7
2023-07-06 16:45:22,446:INFO:_display_container: 2
2023-07-06 16:45:22,446:INFO:OrthogonalMatchingPursuit()
2023-07-06 16:45:22,446:INFO:create_model() successfully completed......................................
2023-07-06 16:45:22,641:INFO:SubProcess create_model() end ==================================
2023-07-06 16:45:22,641:INFO:Creating metrics dataframe
2023-07-06 16:45:22,650:INFO:Initializing Bayesian Ridge
2023-07-06 16:45:22,650:INFO:Total runtime is 0.04585543473561605 minutes
2023-07-06 16:45:22,653:INFO:SubProcess create_model() called ==================================
2023-07-06 16:45:22,653:INFO:Initializing create_model()
2023-07-06 16:45:22,653:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c0935b80>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb88340>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:45:22,653:INFO:Checking exceptions
2023-07-06 16:45:22,654:INFO:Importing libraries
2023-07-06 16:45:22,654:INFO:Copying training dataset
2023-07-06 16:45:22,657:INFO:Defining folds
2023-07-06 16:45:22,657:INFO:Declaring metric variables
2023-07-06 16:45:22,660:INFO:Importing untrained model
2023-07-06 16:45:22,663:INFO:Bayesian Ridge Imported successfully
2023-07-06 16:45:22,667:INFO:Starting cross validation
2023-07-06 16:45:22,668:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:45:22,856:INFO:Calculating mean and std
2023-07-06 16:45:22,858:INFO:Creating metrics dataframe
2023-07-06 16:45:22,877:INFO:Uploading results into container
2023-07-06 16:45:22,878:INFO:Uploading model into container now
2023-07-06 16:45:22,879:INFO:_master_model_container: 8
2023-07-06 16:45:22,879:INFO:_display_container: 2
2023-07-06 16:45:22,879:INFO:BayesianRidge()
2023-07-06 16:45:22,879:INFO:create_model() successfully completed......................................
2023-07-06 16:45:23,076:INFO:SubProcess create_model() end ==================================
2023-07-06 16:45:23,077:INFO:Creating metrics dataframe
2023-07-06 16:45:23,086:INFO:Initializing Passive Aggressive Regressor
2023-07-06 16:45:23,086:INFO:Total runtime is 0.053118109703063965 minutes
2023-07-06 16:45:23,089:INFO:SubProcess create_model() called ==================================
2023-07-06 16:45:23,090:INFO:Initializing create_model()
2023-07-06 16:45:23,090:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c0935b80>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb88340>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:45:23,090:INFO:Checking exceptions
2023-07-06 16:45:23,090:INFO:Importing libraries
2023-07-06 16:45:23,090:INFO:Copying training dataset
2023-07-06 16:45:23,093:INFO:Defining folds
2023-07-06 16:45:23,094:INFO:Declaring metric variables
2023-07-06 16:45:23,096:INFO:Importing untrained model
2023-07-06 16:45:23,099:INFO:Passive Aggressive Regressor Imported successfully
2023-07-06 16:45:23,104:INFO:Starting cross validation
2023-07-06 16:45:23,104:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:45:23,245:INFO:Calculating mean and std
2023-07-06 16:45:23,246:INFO:Creating metrics dataframe
2023-07-06 16:45:23,255:INFO:Uploading results into container
2023-07-06 16:45:23,256:INFO:Uploading model into container now
2023-07-06 16:45:23,256:INFO:_master_model_container: 9
2023-07-06 16:45:23,256:INFO:_display_container: 2
2023-07-06 16:45:23,256:INFO:PassiveAggressiveRegressor(random_state=5852)
2023-07-06 16:45:23,256:INFO:create_model() successfully completed......................................
2023-07-06 16:45:23,443:INFO:SubProcess create_model() end ==================================
2023-07-06 16:45:23,443:INFO:Creating metrics dataframe
2023-07-06 16:45:23,453:INFO:Initializing Huber Regressor
2023-07-06 16:45:23,453:INFO:Total runtime is 0.05923877159754435 minutes
2023-07-06 16:45:23,456:INFO:SubProcess create_model() called ==================================
2023-07-06 16:45:23,457:INFO:Initializing create_model()
2023-07-06 16:45:23,457:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c0935b80>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb88340>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:45:23,457:INFO:Checking exceptions
2023-07-06 16:45:23,457:INFO:Importing libraries
2023-07-06 16:45:23,457:INFO:Copying training dataset
2023-07-06 16:45:23,461:INFO:Defining folds
2023-07-06 16:45:23,461:INFO:Declaring metric variables
2023-07-06 16:45:23,464:INFO:Importing untrained model
2023-07-06 16:45:23,466:INFO:Huber Regressor Imported successfully
2023-07-06 16:45:23,472:INFO:Starting cross validation
2023-07-06 16:45:23,472:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:45:23,574:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:45:23,583:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:45:23,589:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:45:23,608:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:45:23,614:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:45:23,622:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:45:23,630:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:45:23,633:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:45:23,645:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:45:23,646:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:45:23,662:INFO:Calculating mean and std
2023-07-06 16:45:23,665:INFO:Creating metrics dataframe
2023-07-06 16:45:23,687:INFO:Uploading results into container
2023-07-06 16:45:23,688:INFO:Uploading model into container now
2023-07-06 16:45:23,689:INFO:_master_model_container: 10
2023-07-06 16:45:23,689:INFO:_display_container: 2
2023-07-06 16:45:23,689:INFO:HuberRegressor()
2023-07-06 16:45:23,689:INFO:create_model() successfully completed......................................
2023-07-06 16:45:23,895:INFO:SubProcess create_model() end ==================================
2023-07-06 16:45:23,895:INFO:Creating metrics dataframe
2023-07-06 16:45:23,905:INFO:Initializing K Neighbors Regressor
2023-07-06 16:45:23,905:INFO:Total runtime is 0.06676779588063558 minutes
2023-07-06 16:45:23,908:INFO:SubProcess create_model() called ==================================
2023-07-06 16:45:23,908:INFO:Initializing create_model()
2023-07-06 16:45:23,908:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c0935b80>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb88340>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:45:23,908:INFO:Checking exceptions
2023-07-06 16:45:23,908:INFO:Importing libraries
2023-07-06 16:45:23,908:INFO:Copying training dataset
2023-07-06 16:45:23,912:INFO:Defining folds
2023-07-06 16:45:23,912:INFO:Declaring metric variables
2023-07-06 16:45:23,914:INFO:Importing untrained model
2023-07-06 16:45:23,916:INFO:K Neighbors Regressor Imported successfully
2023-07-06 16:45:23,921:INFO:Starting cross validation
2023-07-06 16:45:23,922:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:45:24,096:INFO:Calculating mean and std
2023-07-06 16:45:24,097:INFO:Creating metrics dataframe
2023-07-06 16:45:24,115:INFO:Uploading results into container
2023-07-06 16:45:24,115:INFO:Uploading model into container now
2023-07-06 16:45:24,116:INFO:_master_model_container: 11
2023-07-06 16:45:24,116:INFO:_display_container: 2
2023-07-06 16:45:24,116:INFO:KNeighborsRegressor(n_jobs=-1)
2023-07-06 16:45:24,116:INFO:create_model() successfully completed......................................
2023-07-06 16:45:24,291:INFO:SubProcess create_model() end ==================================
2023-07-06 16:45:24,292:INFO:Creating metrics dataframe
2023-07-06 16:45:24,301:INFO:Initializing Decision Tree Regressor
2023-07-06 16:45:24,302:INFO:Total runtime is 0.07337527672449748 minutes
2023-07-06 16:45:24,304:INFO:SubProcess create_model() called ==================================
2023-07-06 16:45:24,304:INFO:Initializing create_model()
2023-07-06 16:45:24,304:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c0935b80>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb88340>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:45:24,304:INFO:Checking exceptions
2023-07-06 16:45:24,305:INFO:Importing libraries
2023-07-06 16:45:24,305:INFO:Copying training dataset
2023-07-06 16:45:24,308:INFO:Defining folds
2023-07-06 16:45:24,308:INFO:Declaring metric variables
2023-07-06 16:45:24,310:INFO:Importing untrained model
2023-07-06 16:45:24,313:INFO:Decision Tree Regressor Imported successfully
2023-07-06 16:45:24,317:INFO:Starting cross validation
2023-07-06 16:45:24,318:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:45:24,491:INFO:Calculating mean and std
2023-07-06 16:45:24,493:INFO:Creating metrics dataframe
2023-07-06 16:45:24,505:INFO:Uploading results into container
2023-07-06 16:45:24,506:INFO:Uploading model into container now
2023-07-06 16:45:24,507:INFO:_master_model_container: 12
2023-07-06 16:45:24,507:INFO:_display_container: 2
2023-07-06 16:45:24,507:INFO:DecisionTreeRegressor(random_state=5852)
2023-07-06 16:45:24,507:INFO:create_model() successfully completed......................................
2023-07-06 16:45:24,686:INFO:SubProcess create_model() end ==================================
2023-07-06 16:45:24,686:INFO:Creating metrics dataframe
2023-07-06 16:45:24,696:INFO:Initializing Random Forest Regressor
2023-07-06 16:45:24,696:INFO:Total runtime is 0.07994831005732218 minutes
2023-07-06 16:45:24,698:INFO:SubProcess create_model() called ==================================
2023-07-06 16:45:24,699:INFO:Initializing create_model()
2023-07-06 16:45:24,699:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c0935b80>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb88340>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:45:24,699:INFO:Checking exceptions
2023-07-06 16:45:24,699:INFO:Importing libraries
2023-07-06 16:45:24,699:INFO:Copying training dataset
2023-07-06 16:45:24,702:INFO:Defining folds
2023-07-06 16:45:24,702:INFO:Declaring metric variables
2023-07-06 16:45:24,705:INFO:Importing untrained model
2023-07-06 16:45:24,707:INFO:Random Forest Regressor Imported successfully
2023-07-06 16:45:24,712:INFO:Starting cross validation
2023-07-06 16:45:24,712:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:45:25,216:INFO:Calculating mean and std
2023-07-06 16:45:25,227:INFO:Creating metrics dataframe
2023-07-06 16:45:25,242:INFO:Uploading results into container
2023-07-06 16:45:25,243:INFO:Uploading model into container now
2023-07-06 16:45:25,243:INFO:_master_model_container: 13
2023-07-06 16:45:25,243:INFO:_display_container: 2
2023-07-06 16:45:25,244:INFO:RandomForestRegressor(n_jobs=-1, random_state=5852)
2023-07-06 16:45:25,244:INFO:create_model() successfully completed......................................
2023-07-06 16:45:25,454:INFO:SubProcess create_model() end ==================================
2023-07-06 16:45:25,454:INFO:Creating metrics dataframe
2023-07-06 16:45:25,464:INFO:Initializing Extra Trees Regressor
2023-07-06 16:45:25,465:INFO:Total runtime is 0.09276243050893147 minutes
2023-07-06 16:45:25,467:INFO:SubProcess create_model() called ==================================
2023-07-06 16:45:25,468:INFO:Initializing create_model()
2023-07-06 16:45:25,468:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c0935b80>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb88340>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:45:25,468:INFO:Checking exceptions
2023-07-06 16:45:25,468:INFO:Importing libraries
2023-07-06 16:45:25,468:INFO:Copying training dataset
2023-07-06 16:45:25,472:INFO:Defining folds
2023-07-06 16:45:25,472:INFO:Declaring metric variables
2023-07-06 16:45:25,475:INFO:Importing untrained model
2023-07-06 16:45:25,477:INFO:Extra Trees Regressor Imported successfully
2023-07-06 16:45:25,482:INFO:Starting cross validation
2023-07-06 16:45:25,483:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:45:25,941:INFO:Calculating mean and std
2023-07-06 16:45:25,942:INFO:Creating metrics dataframe
2023-07-06 16:45:25,959:INFO:Uploading results into container
2023-07-06 16:45:25,960:INFO:Uploading model into container now
2023-07-06 16:45:25,960:INFO:_master_model_container: 14
2023-07-06 16:45:25,960:INFO:_display_container: 2
2023-07-06 16:45:25,961:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5852)
2023-07-06 16:45:25,961:INFO:create_model() successfully completed......................................
2023-07-06 16:45:26,135:INFO:SubProcess create_model() end ==================================
2023-07-06 16:45:26,135:INFO:Creating metrics dataframe
2023-07-06 16:45:26,146:INFO:Initializing AdaBoost Regressor
2023-07-06 16:45:26,147:INFO:Total runtime is 0.10412600835164387 minutes
2023-07-06 16:45:26,150:INFO:SubProcess create_model() called ==================================
2023-07-06 16:45:26,150:INFO:Initializing create_model()
2023-07-06 16:45:26,150:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c0935b80>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb88340>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:45:26,150:INFO:Checking exceptions
2023-07-06 16:45:26,150:INFO:Importing libraries
2023-07-06 16:45:26,150:INFO:Copying training dataset
2023-07-06 16:45:26,154:INFO:Defining folds
2023-07-06 16:45:26,154:INFO:Declaring metric variables
2023-07-06 16:45:26,158:INFO:Importing untrained model
2023-07-06 16:45:26,161:INFO:AdaBoost Regressor Imported successfully
2023-07-06 16:45:26,167:INFO:Starting cross validation
2023-07-06 16:45:26,167:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:45:26,541:INFO:Calculating mean and std
2023-07-06 16:45:26,543:INFO:Creating metrics dataframe
2023-07-06 16:45:26,574:INFO:Uploading results into container
2023-07-06 16:45:26,574:INFO:Uploading model into container now
2023-07-06 16:45:26,575:INFO:_master_model_container: 15
2023-07-06 16:45:26,575:INFO:_display_container: 2
2023-07-06 16:45:26,575:INFO:AdaBoostRegressor(random_state=5852)
2023-07-06 16:45:26,575:INFO:create_model() successfully completed......................................
2023-07-06 16:45:26,756:INFO:SubProcess create_model() end ==================================
2023-07-06 16:45:26,756:INFO:Creating metrics dataframe
2023-07-06 16:45:26,767:INFO:Initializing Gradient Boosting Regressor
2023-07-06 16:45:26,767:INFO:Total runtime is 0.11446959972381592 minutes
2023-07-06 16:45:26,770:INFO:SubProcess create_model() called ==================================
2023-07-06 16:45:26,770:INFO:Initializing create_model()
2023-07-06 16:45:26,770:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c0935b80>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb88340>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:45:26,771:INFO:Checking exceptions
2023-07-06 16:45:26,771:INFO:Importing libraries
2023-07-06 16:45:26,771:INFO:Copying training dataset
2023-07-06 16:45:26,774:INFO:Defining folds
2023-07-06 16:45:26,774:INFO:Declaring metric variables
2023-07-06 16:45:26,777:INFO:Importing untrained model
2023-07-06 16:45:26,780:INFO:Gradient Boosting Regressor Imported successfully
2023-07-06 16:45:26,785:INFO:Starting cross validation
2023-07-06 16:45:26,786:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:45:27,428:INFO:Calculating mean and std
2023-07-06 16:45:27,432:INFO:Creating metrics dataframe
2023-07-06 16:45:27,472:INFO:Uploading results into container
2023-07-06 16:45:27,473:INFO:Uploading model into container now
2023-07-06 16:45:27,474:INFO:_master_model_container: 16
2023-07-06 16:45:27,474:INFO:_display_container: 2
2023-07-06 16:45:27,475:INFO:GradientBoostingRegressor(random_state=5852)
2023-07-06 16:45:27,475:INFO:create_model() successfully completed......................................
2023-07-06 16:45:27,697:INFO:SubProcess create_model() end ==================================
2023-07-06 16:45:27,697:INFO:Creating metrics dataframe
2023-07-06 16:45:27,708:INFO:Initializing Light Gradient Boosting Machine
2023-07-06 16:45:27,708:INFO:Total runtime is 0.1301503380139669 minutes
2023-07-06 16:45:27,711:INFO:SubProcess create_model() called ==================================
2023-07-06 16:45:27,711:INFO:Initializing create_model()
2023-07-06 16:45:27,711:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c0935b80>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb88340>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:45:27,711:INFO:Checking exceptions
2023-07-06 16:45:27,711:INFO:Importing libraries
2023-07-06 16:45:27,711:INFO:Copying training dataset
2023-07-06 16:45:27,715:INFO:Defining folds
2023-07-06 16:45:27,715:INFO:Declaring metric variables
2023-07-06 16:45:27,718:INFO:Importing untrained model
2023-07-06 16:45:27,721:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-06 16:45:27,726:INFO:Starting cross validation
2023-07-06 16:45:27,727:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:45:28,167:INFO:Calculating mean and std
2023-07-06 16:45:28,169:INFO:Creating metrics dataframe
2023-07-06 16:45:28,204:INFO:Uploading results into container
2023-07-06 16:45:28,205:INFO:Uploading model into container now
2023-07-06 16:45:28,206:INFO:_master_model_container: 17
2023-07-06 16:45:28,206:INFO:_display_container: 2
2023-07-06 16:45:28,206:INFO:LGBMRegressor(random_state=5852)
2023-07-06 16:45:28,206:INFO:create_model() successfully completed......................................
2023-07-06 16:45:28,385:INFO:SubProcess create_model() end ==================================
2023-07-06 16:45:28,385:INFO:Creating metrics dataframe
2023-07-06 16:45:28,396:INFO:Initializing Dummy Regressor
2023-07-06 16:45:28,396:INFO:Total runtime is 0.14161092440287273 minutes
2023-07-06 16:45:28,399:INFO:SubProcess create_model() called ==================================
2023-07-06 16:45:28,399:INFO:Initializing create_model()
2023-07-06 16:45:28,399:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c0935b80>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb88340>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:45:28,399:INFO:Checking exceptions
2023-07-06 16:45:28,399:INFO:Importing libraries
2023-07-06 16:45:28,399:INFO:Copying training dataset
2023-07-06 16:45:28,403:INFO:Defining folds
2023-07-06 16:45:28,403:INFO:Declaring metric variables
2023-07-06 16:45:28,406:INFO:Importing untrained model
2023-07-06 16:45:28,409:INFO:Dummy Regressor Imported successfully
2023-07-06 16:45:28,414:INFO:Starting cross validation
2023-07-06 16:45:28,414:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:45:28,576:INFO:Calculating mean and std
2023-07-06 16:45:28,579:INFO:Creating metrics dataframe
2023-07-06 16:45:28,613:INFO:Uploading results into container
2023-07-06 16:45:28,614:INFO:Uploading model into container now
2023-07-06 16:45:28,614:INFO:_master_model_container: 18
2023-07-06 16:45:28,615:INFO:_display_container: 2
2023-07-06 16:45:28,615:INFO:DummyRegressor()
2023-07-06 16:45:28,615:INFO:create_model() successfully completed......................................
2023-07-06 16:45:28,801:INFO:SubProcess create_model() end ==================================
2023-07-06 16:45:28,801:INFO:Creating metrics dataframe
2023-07-06 16:45:28,819:INFO:Initializing create_model()
2023-07-06 16:45:28,819:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c0935b80>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=5852), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:45:28,819:INFO:Checking exceptions
2023-07-06 16:45:28,821:INFO:Importing libraries
2023-07-06 16:45:28,821:INFO:Copying training dataset
2023-07-06 16:45:28,824:INFO:Defining folds
2023-07-06 16:45:28,824:INFO:Declaring metric variables
2023-07-06 16:45:28,824:INFO:Importing untrained model
2023-07-06 16:45:28,824:INFO:Declaring custom model
2023-07-06 16:45:28,825:INFO:Extra Trees Regressor Imported successfully
2023-07-06 16:45:28,825:INFO:Cross validation set to False
2023-07-06 16:45:28,825:INFO:Fitting Model
2023-07-06 16:45:29,137:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5852)
2023-07-06 16:45:29,137:INFO:create_model() successfully completed......................................
2023-07-06 16:45:29,360:INFO:_master_model_container: 18
2023-07-06 16:45:29,360:INFO:_display_container: 2
2023-07-06 16:45:29,360:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5852)
2023-07-06 16:45:29,360:INFO:compare_models() successfully completed......................................
2023-07-06 16:46:00,255:INFO:PyCaret RegressionExperiment
2023-07-06 16:46:00,255:INFO:Logging name: reg-default-name
2023-07-06 16:46:00,255:INFO:ML Usecase: MLUsecase.REGRESSION
2023-07-06 16:46:00,255:INFO:version 3.0.4
2023-07-06 16:46:00,255:INFO:Initializing setup()
2023-07-06 16:46:00,255:INFO:self.USI: 0782
2023-07-06 16:46:00,255:INFO:self._variable_keys: {'pipeline', 'fold_groups_param', 'log_plots_param', '_ml_usecase', 'memory', 'transform_target_param', 'logging_param', 'y', 'USI', 'data', 'target_param', 'html_param', 'fold_generator', 'X', 'n_jobs_param', 'X_test', 'y_test', 'exp_id', 'X_train', 'exp_name_log', 'gpu_n_jobs_param', 'seed', 'idx', 'gpu_param', 'y_train', '_available_plots', 'fold_shuffle_param'}
2023-07-06 16:46:00,255:INFO:Checking environment
2023-07-06 16:46:00,255:INFO:python_version: 3.9.16
2023-07-06 16:46:00,256:INFO:python_build: ('main', 'Feb  1 2023 21:39:03')
2023-07-06 16:46:00,256:INFO:machine: x86_64
2023-07-06 16:46:00,256:INFO:platform: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 16:46:00,256:INFO:Memory: svmem(total=540878073856, available=523099123712, percent=3.3, used=14262927360, free=2691571712, active=32380604416, inactive=489189011456, buffers=2725953536, cached=521197621248, shared=22061056, slab=14546792448)
2023-07-06 16:46:00,259:INFO:Physical Core: 64
2023-07-06 16:46:00,259:INFO:Logical Core: 64
2023-07-06 16:46:00,259:INFO:Checking libraries
2023-07-06 16:46:00,259:INFO:System:
2023-07-06 16:46:00,259:INFO:    python: 3.9.16 | packaged by conda-forge | (main, Feb  1 2023, 21:39:03)  [GCC 11.3.0]
2023-07-06 16:46:00,259:INFO:executable: /home/mirlab/anaconda3/envs/misc/bin/python
2023-07-06 16:46:00,259:INFO:   machine: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 16:46:00,259:INFO:PyCaret required dependencies:
2023-07-06 16:46:00,260:INFO:                 pip: 23.1.2
2023-07-06 16:46:00,260:INFO:          setuptools: 67.7.2
2023-07-06 16:46:00,260:INFO:             pycaret: 3.0.4
2023-07-06 16:46:00,260:INFO:             IPython: 8.14.0
2023-07-06 16:46:00,260:INFO:          ipywidgets: 8.0.7
2023-07-06 16:46:00,260:INFO:                tqdm: 4.64.1
2023-07-06 16:46:00,260:INFO:               numpy: 1.23.5
2023-07-06 16:46:00,260:INFO:              pandas: 1.5.3
2023-07-06 16:46:00,260:INFO:              jinja2: 3.1.2
2023-07-06 16:46:00,260:INFO:               scipy: 1.10.1
2023-07-06 16:46:00,260:INFO:              joblib: 1.2.0
2023-07-06 16:46:00,260:INFO:             sklearn: 1.2.2
2023-07-06 16:46:00,260:INFO:                pyod: 1.1.0
2023-07-06 16:46:00,260:INFO:            imblearn: 0.10.1
2023-07-06 16:46:00,260:INFO:   category_encoders: 2.6.1
2023-07-06 16:46:00,260:INFO:            lightgbm: 3.3.5
2023-07-06 16:46:00,260:INFO:               numba: 0.57.0
2023-07-06 16:46:00,260:INFO:            requests: 2.28.1
2023-07-06 16:46:00,260:INFO:          matplotlib: 3.7.1
2023-07-06 16:46:00,260:INFO:          scikitplot: 0.3.7
2023-07-06 16:46:00,260:INFO:         yellowbrick: 1.5
2023-07-06 16:46:00,260:INFO:              plotly: 5.15.0
2023-07-06 16:46:00,260:INFO:    plotly-resampler: Not installed
2023-07-06 16:46:00,261:INFO:             kaleido: 0.2.1
2023-07-06 16:46:00,261:INFO:           schemdraw: 0.15
2023-07-06 16:46:00,261:INFO:         statsmodels: 0.14.0
2023-07-06 16:46:00,261:INFO:              sktime: 0.20.0
2023-07-06 16:46:00,261:INFO:               tbats: 1.1.3
2023-07-06 16:46:00,261:INFO:            pmdarima: 2.0.3
2023-07-06 16:46:00,261:INFO:              psutil: 5.9.5
2023-07-06 16:46:00,261:INFO:          markupsafe: 2.1.2
2023-07-06 16:46:00,261:INFO:             pickle5: Not installed
2023-07-06 16:46:00,261:INFO:         cloudpickle: 2.2.1
2023-07-06 16:46:00,261:INFO:         deprecation: 2.1.0
2023-07-06 16:46:00,261:INFO:              xxhash: 3.2.0
2023-07-06 16:46:00,261:INFO:           wurlitzer: 3.0.3
2023-07-06 16:46:00,261:INFO:PyCaret optional dependencies:
2023-07-06 16:46:00,261:INFO:                shap: Not installed
2023-07-06 16:46:00,261:INFO:           interpret: Not installed
2023-07-06 16:46:00,261:INFO:                umap: Not installed
2023-07-06 16:46:00,261:INFO:    pandas_profiling: 3.6.6
2023-07-06 16:46:00,261:INFO:  explainerdashboard: Not installed
2023-07-06 16:46:00,261:INFO:             autoviz: Not installed
2023-07-06 16:46:00,261:INFO:           fairlearn: Not installed
2023-07-06 16:46:00,261:INFO:          deepchecks: Not installed
2023-07-06 16:46:00,262:INFO:             xgboost: Not installed
2023-07-06 16:46:00,262:INFO:            catboost: Not installed
2023-07-06 16:46:00,262:INFO:              kmodes: Not installed
2023-07-06 16:46:00,262:INFO:             mlxtend: Not installed
2023-07-06 16:46:00,262:INFO:       statsforecast: Not installed
2023-07-06 16:46:00,262:INFO:        tune_sklearn: Not installed
2023-07-06 16:46:00,262:INFO:                 ray: Not installed
2023-07-06 16:46:00,262:INFO:            hyperopt: Not installed
2023-07-06 16:46:00,262:INFO:              optuna: 3.1.1
2023-07-06 16:46:00,262:INFO:               skopt: Not installed
2023-07-06 16:46:00,262:INFO:              mlflow: Not installed
2023-07-06 16:46:00,262:INFO:              gradio: Not installed
2023-07-06 16:46:00,262:INFO:             fastapi: Not installed
2023-07-06 16:46:00,262:INFO:             uvicorn: Not installed
2023-07-06 16:46:00,262:INFO:              m2cgen: Not installed
2023-07-06 16:46:00,262:INFO:           evidently: Not installed
2023-07-06 16:46:00,262:INFO:               fugue: Not installed
2023-07-06 16:46:00,262:INFO:           streamlit: 1.24.0
2023-07-06 16:46:00,262:INFO:             prophet: Not installed
2023-07-06 16:46:00,262:INFO:None
2023-07-06 16:46:00,262:INFO:Set up data.
2023-07-06 16:46:00,271:INFO:Set up train/test split.
2023-07-06 16:46:00,275:INFO:Set up index.
2023-07-06 16:46:00,275:INFO:Set up folding strategy.
2023-07-06 16:46:00,276:INFO:Assigning column types.
2023-07-06 16:46:00,280:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-06 16:46:00,280:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 16:46:00,290:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:46:00,298:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:46:00,363:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:00,411:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:00,412:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:00,412:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:00,412:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 16:46:00,417:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:46:00,422:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:46:00,482:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:00,530:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:00,530:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:00,530:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:00,530:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-07-06 16:46:00,535:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:46:00,540:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:46:00,600:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:00,648:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:00,648:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:00,648:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:00,653:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:46:00,658:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:46:00,718:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:00,765:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:00,765:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:00,765:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:00,765:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-07-06 16:46:00,775:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:46:00,835:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:00,882:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:00,883:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:00,883:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:00,893:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:46:00,952:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:01,000:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:01,001:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:01,001:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:01,001:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-07-06 16:46:01,070:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:01,118:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:01,118:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:01,118:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:01,187:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:01,235:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:01,236:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:01,236:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:01,236:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-06 16:46:01,305:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:01,357:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:01,358:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:01,428:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:01,476:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:01,476:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:01,477:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-07-06 16:46:01,594:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:01,594:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:01,711:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:01,711:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:01,712:INFO:Preparing preprocessing pipeline...
2023-07-06 16:46:01,712:INFO:Set up simple imputation.
2023-07-06 16:46:01,713:INFO:Set up column name cleaning.
2023-07-06 16:46:01,727:INFO:Finished creating preprocessing pipeline.
2023-07-06 16:46:01,731:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['PTemp_C_Max', 'AirTC_Avg', 'RH',
                                             'WS_ms_Avg', 'TPM1', 'TPM2.5',
                                             'TPM10', 'GeffRef', 'TempRef',
                                             'Daylight'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-07-06 16:46:01,731:INFO:Creating final display dataframe.
2023-07-06 16:46:01,782:INFO:Setup _display_container:                     Description             Value
0                    Session id              1529
1                        Target       FT_Voltage2
2                   Target type        Regression
3           Original data shape        (2400, 11)
4        Transformed data shape        (2400, 11)
5   Transformed train set shape        (1680, 11)
6    Transformed test set shape         (720, 11)
7              Numeric features                10
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              0782
2023-07-06 16:46:01,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:01,911:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:02,027:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:02,027:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:02,028:INFO:setup() successfully completed in 1.78s...............
2023-07-06 16:46:02,028:INFO:Initializing compare_models()
2023-07-06 16:46:02,028:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeb66880>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f25aeb66880>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-07-06 16:46:02,028:INFO:Checking exceptions
2023-07-06 16:46:02,029:INFO:Preparing display monitor
2023-07-06 16:46:02,048:INFO:Initializing Linear Regression
2023-07-06 16:46:02,048:INFO:Total runtime is 4.887580871582031e-06 minutes
2023-07-06 16:46:02,050:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:02,051:INFO:Initializing create_model()
2023-07-06 16:46:02,051:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeb66880>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae898e20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:02,051:INFO:Checking exceptions
2023-07-06 16:46:02,051:INFO:Importing libraries
2023-07-06 16:46:02,051:INFO:Copying training dataset
2023-07-06 16:46:02,053:INFO:Defining folds
2023-07-06 16:46:02,054:INFO:Declaring metric variables
2023-07-06 16:46:02,056:INFO:Importing untrained model
2023-07-06 16:46:02,058:INFO:Linear Regression Imported successfully
2023-07-06 16:46:02,063:INFO:Starting cross validation
2023-07-06 16:46:02,064:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:02,256:INFO:Calculating mean and std
2023-07-06 16:46:02,257:INFO:Creating metrics dataframe
2023-07-06 16:46:02,291:INFO:Uploading results into container
2023-07-06 16:46:02,291:INFO:Uploading model into container now
2023-07-06 16:46:02,292:INFO:_master_model_container: 1
2023-07-06 16:46:02,292:INFO:_display_container: 2
2023-07-06 16:46:02,292:INFO:LinearRegression(n_jobs=-1)
2023-07-06 16:46:02,293:INFO:create_model() successfully completed......................................
2023-07-06 16:46:02,535:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:02,535:INFO:Creating metrics dataframe
2023-07-06 16:46:02,543:INFO:Initializing Lasso Regression
2023-07-06 16:46:02,543:INFO:Total runtime is 0.00825433333714803 minutes
2023-07-06 16:46:02,545:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:02,546:INFO:Initializing create_model()
2023-07-06 16:46:02,546:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeb66880>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae898e20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:02,546:INFO:Checking exceptions
2023-07-06 16:46:02,546:INFO:Importing libraries
2023-07-06 16:46:02,546:INFO:Copying training dataset
2023-07-06 16:46:02,549:INFO:Defining folds
2023-07-06 16:46:02,549:INFO:Declaring metric variables
2023-07-06 16:46:02,552:INFO:Importing untrained model
2023-07-06 16:46:02,554:INFO:Lasso Regression Imported successfully
2023-07-06 16:46:02,559:INFO:Starting cross validation
2023-07-06 16:46:02,560:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:02,707:INFO:Calculating mean and std
2023-07-06 16:46:02,707:INFO:Creating metrics dataframe
2023-07-06 16:46:02,744:INFO:Uploading results into container
2023-07-06 16:46:02,745:INFO:Uploading model into container now
2023-07-06 16:46:02,746:INFO:_master_model_container: 2
2023-07-06 16:46:02,746:INFO:_display_container: 2
2023-07-06 16:46:02,746:INFO:Lasso(random_state=1529)
2023-07-06 16:46:02,746:INFO:create_model() successfully completed......................................
2023-07-06 16:46:02,948:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:02,948:INFO:Creating metrics dataframe
2023-07-06 16:46:02,956:INFO:Initializing Ridge Regression
2023-07-06 16:46:02,957:INFO:Total runtime is 0.015149990717569988 minutes
2023-07-06 16:46:02,959:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:02,960:INFO:Initializing create_model()
2023-07-06 16:46:02,960:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeb66880>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae898e20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:02,960:INFO:Checking exceptions
2023-07-06 16:46:02,960:INFO:Importing libraries
2023-07-06 16:46:02,960:INFO:Copying training dataset
2023-07-06 16:46:02,963:INFO:Defining folds
2023-07-06 16:46:02,963:INFO:Declaring metric variables
2023-07-06 16:46:02,965:INFO:Importing untrained model
2023-07-06 16:46:02,968:INFO:Ridge Regression Imported successfully
2023-07-06 16:46:02,973:INFO:Starting cross validation
2023-07-06 16:46:02,974:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:03,111:INFO:Calculating mean and std
2023-07-06 16:46:03,113:INFO:Creating metrics dataframe
2023-07-06 16:46:03,143:INFO:Uploading results into container
2023-07-06 16:46:03,144:INFO:Uploading model into container now
2023-07-06 16:46:03,145:INFO:_master_model_container: 3
2023-07-06 16:46:03,145:INFO:_display_container: 2
2023-07-06 16:46:03,145:INFO:Ridge(random_state=1529)
2023-07-06 16:46:03,145:INFO:create_model() successfully completed......................................
2023-07-06 16:46:03,345:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:03,345:INFO:Creating metrics dataframe
2023-07-06 16:46:03,354:INFO:Initializing Elastic Net
2023-07-06 16:46:03,354:INFO:Total runtime is 0.021769154071807864 minutes
2023-07-06 16:46:03,356:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:03,357:INFO:Initializing create_model()
2023-07-06 16:46:03,357:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeb66880>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae898e20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:03,357:INFO:Checking exceptions
2023-07-06 16:46:03,357:INFO:Importing libraries
2023-07-06 16:46:03,357:INFO:Copying training dataset
2023-07-06 16:46:03,361:INFO:Defining folds
2023-07-06 16:46:03,361:INFO:Declaring metric variables
2023-07-06 16:46:03,363:INFO:Importing untrained model
2023-07-06 16:46:03,366:INFO:Elastic Net Imported successfully
2023-07-06 16:46:03,371:INFO:Starting cross validation
2023-07-06 16:46:03,372:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:03,548:INFO:Calculating mean and std
2023-07-06 16:46:03,549:INFO:Creating metrics dataframe
2023-07-06 16:46:03,579:INFO:Uploading results into container
2023-07-06 16:46:03,580:INFO:Uploading model into container now
2023-07-06 16:46:03,580:INFO:_master_model_container: 4
2023-07-06 16:46:03,581:INFO:_display_container: 2
2023-07-06 16:46:03,581:INFO:ElasticNet(random_state=1529)
2023-07-06 16:46:03,581:INFO:create_model() successfully completed......................................
2023-07-06 16:46:03,775:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:03,775:INFO:Creating metrics dataframe
2023-07-06 16:46:03,783:INFO:Initializing Least Angle Regression
2023-07-06 16:46:03,783:INFO:Total runtime is 0.02893190383911133 minutes
2023-07-06 16:46:03,787:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:03,787:INFO:Initializing create_model()
2023-07-06 16:46:03,787:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeb66880>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae898e20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:03,787:INFO:Checking exceptions
2023-07-06 16:46:03,787:INFO:Importing libraries
2023-07-06 16:46:03,788:INFO:Copying training dataset
2023-07-06 16:46:03,791:INFO:Defining folds
2023-07-06 16:46:03,791:INFO:Declaring metric variables
2023-07-06 16:46:03,794:INFO:Importing untrained model
2023-07-06 16:46:03,796:INFO:Least Angle Regression Imported successfully
2023-07-06 16:46:03,801:INFO:Starting cross validation
2023-07-06 16:46:03,802:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:03,981:INFO:Calculating mean and std
2023-07-06 16:46:03,983:INFO:Creating metrics dataframe
2023-07-06 16:46:04,010:INFO:Uploading results into container
2023-07-06 16:46:04,010:INFO:Uploading model into container now
2023-07-06 16:46:04,011:INFO:_master_model_container: 5
2023-07-06 16:46:04,011:INFO:_display_container: 2
2023-07-06 16:46:04,012:INFO:Lars(random_state=1529)
2023-07-06 16:46:04,012:INFO:create_model() successfully completed......................................
2023-07-06 16:46:04,217:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:04,217:INFO:Creating metrics dataframe
2023-07-06 16:46:04,225:INFO:Initializing Lasso Least Angle Regression
2023-07-06 16:46:04,226:INFO:Total runtime is 0.036302904287974044 minutes
2023-07-06 16:46:04,228:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:04,229:INFO:Initializing create_model()
2023-07-06 16:46:04,229:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeb66880>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae898e20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:04,229:INFO:Checking exceptions
2023-07-06 16:46:04,229:INFO:Importing libraries
2023-07-06 16:46:04,229:INFO:Copying training dataset
2023-07-06 16:46:04,232:INFO:Defining folds
2023-07-06 16:46:04,233:INFO:Declaring metric variables
2023-07-06 16:46:04,235:INFO:Importing untrained model
2023-07-06 16:46:04,238:INFO:Lasso Least Angle Regression Imported successfully
2023-07-06 16:46:04,243:INFO:Starting cross validation
2023-07-06 16:46:04,244:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:04,405:INFO:Calculating mean and std
2023-07-06 16:46:04,407:INFO:Creating metrics dataframe
2023-07-06 16:46:04,437:INFO:Uploading results into container
2023-07-06 16:46:04,438:INFO:Uploading model into container now
2023-07-06 16:46:04,438:INFO:_master_model_container: 6
2023-07-06 16:46:04,438:INFO:_display_container: 2
2023-07-06 16:46:04,439:INFO:LassoLars(random_state=1529)
2023-07-06 16:46:04,439:INFO:create_model() successfully completed......................................
2023-07-06 16:46:04,623:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:04,624:INFO:Creating metrics dataframe
2023-07-06 16:46:04,632:INFO:Initializing Orthogonal Matching Pursuit
2023-07-06 16:46:04,633:INFO:Total runtime is 0.04308746258417766 minutes
2023-07-06 16:46:04,635:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:04,636:INFO:Initializing create_model()
2023-07-06 16:46:04,636:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeb66880>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae898e20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:04,636:INFO:Checking exceptions
2023-07-06 16:46:04,636:INFO:Importing libraries
2023-07-06 16:46:04,636:INFO:Copying training dataset
2023-07-06 16:46:04,639:INFO:Defining folds
2023-07-06 16:46:04,640:INFO:Declaring metric variables
2023-07-06 16:46:04,642:INFO:Importing untrained model
2023-07-06 16:46:04,645:INFO:Orthogonal Matching Pursuit Imported successfully
2023-07-06 16:46:04,650:INFO:Starting cross validation
2023-07-06 16:46:04,650:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:04,813:INFO:Calculating mean and std
2023-07-06 16:46:04,816:INFO:Creating metrics dataframe
2023-07-06 16:46:04,843:INFO:Uploading results into container
2023-07-06 16:46:04,844:INFO:Uploading model into container now
2023-07-06 16:46:04,845:INFO:_master_model_container: 7
2023-07-06 16:46:04,845:INFO:_display_container: 2
2023-07-06 16:46:04,845:INFO:OrthogonalMatchingPursuit()
2023-07-06 16:46:04,845:INFO:create_model() successfully completed......................................
2023-07-06 16:46:05,043:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:05,044:INFO:Creating metrics dataframe
2023-07-06 16:46:05,053:INFO:Initializing Bayesian Ridge
2023-07-06 16:46:05,053:INFO:Total runtime is 0.05009035269419353 minutes
2023-07-06 16:46:05,056:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:05,056:INFO:Initializing create_model()
2023-07-06 16:46:05,056:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeb66880>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae898e20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:05,056:INFO:Checking exceptions
2023-07-06 16:46:05,056:INFO:Importing libraries
2023-07-06 16:46:05,056:INFO:Copying training dataset
2023-07-06 16:46:05,060:INFO:Defining folds
2023-07-06 16:46:05,060:INFO:Declaring metric variables
2023-07-06 16:46:05,063:INFO:Importing untrained model
2023-07-06 16:46:05,066:INFO:Bayesian Ridge Imported successfully
2023-07-06 16:46:05,073:INFO:Starting cross validation
2023-07-06 16:46:05,074:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:05,268:INFO:Calculating mean and std
2023-07-06 16:46:05,270:INFO:Creating metrics dataframe
2023-07-06 16:46:05,308:INFO:Uploading results into container
2023-07-06 16:46:05,309:INFO:Uploading model into container now
2023-07-06 16:46:05,310:INFO:_master_model_container: 8
2023-07-06 16:46:05,310:INFO:_display_container: 2
2023-07-06 16:46:05,310:INFO:BayesianRidge()
2023-07-06 16:46:05,310:INFO:create_model() successfully completed......................................
2023-07-06 16:46:05,492:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:05,492:INFO:Creating metrics dataframe
2023-07-06 16:46:05,501:INFO:Initializing Passive Aggressive Regressor
2023-07-06 16:46:05,501:INFO:Total runtime is 0.05756565729777019 minutes
2023-07-06 16:46:05,505:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:05,505:INFO:Initializing create_model()
2023-07-06 16:46:05,505:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeb66880>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae898e20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:05,505:INFO:Checking exceptions
2023-07-06 16:46:05,505:INFO:Importing libraries
2023-07-06 16:46:05,505:INFO:Copying training dataset
2023-07-06 16:46:05,509:INFO:Defining folds
2023-07-06 16:46:05,509:INFO:Declaring metric variables
2023-07-06 16:46:05,512:INFO:Importing untrained model
2023-07-06 16:46:05,515:INFO:Passive Aggressive Regressor Imported successfully
2023-07-06 16:46:05,520:INFO:Starting cross validation
2023-07-06 16:46:05,520:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:05,683:INFO:Calculating mean and std
2023-07-06 16:46:05,685:INFO:Creating metrics dataframe
2023-07-06 16:46:05,710:INFO:Uploading results into container
2023-07-06 16:46:05,711:INFO:Uploading model into container now
2023-07-06 16:46:05,712:INFO:_master_model_container: 9
2023-07-06 16:46:05,712:INFO:_display_container: 2
2023-07-06 16:46:05,712:INFO:PassiveAggressiveRegressor(random_state=1529)
2023-07-06 16:46:05,712:INFO:create_model() successfully completed......................................
2023-07-06 16:46:05,895:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:05,896:INFO:Creating metrics dataframe
2023-07-06 16:46:05,905:INFO:Initializing Huber Regressor
2023-07-06 16:46:05,905:INFO:Total runtime is 0.06429565350214642 minutes
2023-07-06 16:46:05,908:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:05,908:INFO:Initializing create_model()
2023-07-06 16:46:05,908:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeb66880>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae898e20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:05,909:INFO:Checking exceptions
2023-07-06 16:46:05,909:INFO:Importing libraries
2023-07-06 16:46:05,909:INFO:Copying training dataset
2023-07-06 16:46:05,912:INFO:Defining folds
2023-07-06 16:46:05,912:INFO:Declaring metric variables
2023-07-06 16:46:05,915:INFO:Importing untrained model
2023-07-06 16:46:05,918:INFO:Huber Regressor Imported successfully
2023-07-06 16:46:05,923:INFO:Starting cross validation
2023-07-06 16:46:05,923:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:06,010:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:06,020:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:06,041:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:06,043:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:06,053:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:06,064:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:06,064:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:06,079:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:06,083:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:06,085:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:06,115:INFO:Calculating mean and std
2023-07-06 16:46:06,117:INFO:Creating metrics dataframe
2023-07-06 16:46:06,149:INFO:Uploading results into container
2023-07-06 16:46:06,150:INFO:Uploading model into container now
2023-07-06 16:46:06,150:INFO:_master_model_container: 10
2023-07-06 16:46:06,151:INFO:_display_container: 2
2023-07-06 16:46:06,151:INFO:HuberRegressor()
2023-07-06 16:46:06,151:INFO:create_model() successfully completed......................................
2023-07-06 16:46:06,333:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:06,333:INFO:Creating metrics dataframe
2023-07-06 16:46:06,342:INFO:Initializing K Neighbors Regressor
2023-07-06 16:46:06,343:INFO:Total runtime is 0.07158443530400595 minutes
2023-07-06 16:46:06,345:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:06,346:INFO:Initializing create_model()
2023-07-06 16:46:06,346:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeb66880>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae898e20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:06,346:INFO:Checking exceptions
2023-07-06 16:46:06,346:INFO:Importing libraries
2023-07-06 16:46:06,346:INFO:Copying training dataset
2023-07-06 16:46:06,349:INFO:Defining folds
2023-07-06 16:46:06,349:INFO:Declaring metric variables
2023-07-06 16:46:06,352:INFO:Importing untrained model
2023-07-06 16:46:06,355:INFO:K Neighbors Regressor Imported successfully
2023-07-06 16:46:06,360:INFO:Starting cross validation
2023-07-06 16:46:06,361:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:06,512:INFO:Calculating mean and std
2023-07-06 16:46:06,513:INFO:Creating metrics dataframe
2023-07-06 16:46:06,525:INFO:Uploading results into container
2023-07-06 16:46:06,526:INFO:Uploading model into container now
2023-07-06 16:46:06,526:INFO:_master_model_container: 11
2023-07-06 16:46:06,526:INFO:_display_container: 2
2023-07-06 16:46:06,527:INFO:KNeighborsRegressor(n_jobs=-1)
2023-07-06 16:46:06,527:INFO:create_model() successfully completed......................................
2023-07-06 16:46:06,698:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:06,698:INFO:Creating metrics dataframe
2023-07-06 16:46:06,708:INFO:Initializing Decision Tree Regressor
2023-07-06 16:46:06,708:INFO:Total runtime is 0.07767375707626344 minutes
2023-07-06 16:46:06,711:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:06,711:INFO:Initializing create_model()
2023-07-06 16:46:06,711:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeb66880>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae898e20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:06,711:INFO:Checking exceptions
2023-07-06 16:46:06,711:INFO:Importing libraries
2023-07-06 16:46:06,711:INFO:Copying training dataset
2023-07-06 16:46:06,715:INFO:Defining folds
2023-07-06 16:46:06,715:INFO:Declaring metric variables
2023-07-06 16:46:06,718:INFO:Importing untrained model
2023-07-06 16:46:06,721:INFO:Decision Tree Regressor Imported successfully
2023-07-06 16:46:06,726:INFO:Starting cross validation
2023-07-06 16:46:06,727:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:06,891:INFO:Calculating mean and std
2023-07-06 16:46:06,894:INFO:Creating metrics dataframe
2023-07-06 16:46:06,926:INFO:Uploading results into container
2023-07-06 16:46:06,927:INFO:Uploading model into container now
2023-07-06 16:46:06,928:INFO:_master_model_container: 12
2023-07-06 16:46:06,928:INFO:_display_container: 2
2023-07-06 16:46:06,928:INFO:DecisionTreeRegressor(random_state=1529)
2023-07-06 16:46:06,928:INFO:create_model() successfully completed......................................
2023-07-06 16:46:07,108:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:07,109:INFO:Creating metrics dataframe
2023-07-06 16:46:07,118:INFO:Initializing Random Forest Regressor
2023-07-06 16:46:07,119:INFO:Total runtime is 0.08451675176620484 minutes
2023-07-06 16:46:07,121:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:07,122:INFO:Initializing create_model()
2023-07-06 16:46:07,122:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeb66880>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae898e20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:07,122:INFO:Checking exceptions
2023-07-06 16:46:07,122:INFO:Importing libraries
2023-07-06 16:46:07,122:INFO:Copying training dataset
2023-07-06 16:46:07,125:INFO:Defining folds
2023-07-06 16:46:07,126:INFO:Declaring metric variables
2023-07-06 16:46:07,128:INFO:Importing untrained model
2023-07-06 16:46:07,131:INFO:Random Forest Regressor Imported successfully
2023-07-06 16:46:07,136:INFO:Starting cross validation
2023-07-06 16:46:07,137:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:07,640:INFO:Calculating mean and std
2023-07-06 16:46:07,641:INFO:Creating metrics dataframe
2023-07-06 16:46:07,668:INFO:Uploading results into container
2023-07-06 16:46:07,668:INFO:Uploading model into container now
2023-07-06 16:46:07,669:INFO:_master_model_container: 13
2023-07-06 16:46:07,669:INFO:_display_container: 2
2023-07-06 16:46:07,669:INFO:RandomForestRegressor(n_jobs=-1, random_state=1529)
2023-07-06 16:46:07,669:INFO:create_model() successfully completed......................................
2023-07-06 16:46:07,827:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:07,827:INFO:Creating metrics dataframe
2023-07-06 16:46:07,837:INFO:Initializing Extra Trees Regressor
2023-07-06 16:46:07,837:INFO:Total runtime is 0.09649088780085247 minutes
2023-07-06 16:46:07,839:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:07,840:INFO:Initializing create_model()
2023-07-06 16:46:07,840:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeb66880>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae898e20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:07,840:INFO:Checking exceptions
2023-07-06 16:46:07,840:INFO:Importing libraries
2023-07-06 16:46:07,840:INFO:Copying training dataset
2023-07-06 16:46:07,843:INFO:Defining folds
2023-07-06 16:46:07,843:INFO:Declaring metric variables
2023-07-06 16:46:07,846:INFO:Importing untrained model
2023-07-06 16:46:07,848:INFO:Extra Trees Regressor Imported successfully
2023-07-06 16:46:07,852:INFO:Starting cross validation
2023-07-06 16:46:07,853:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:08,321:INFO:Calculating mean and std
2023-07-06 16:46:08,323:INFO:Creating metrics dataframe
2023-07-06 16:46:08,359:INFO:Uploading results into container
2023-07-06 16:46:08,359:INFO:Uploading model into container now
2023-07-06 16:46:08,360:INFO:_master_model_container: 14
2023-07-06 16:46:08,360:INFO:_display_container: 2
2023-07-06 16:46:08,361:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1529)
2023-07-06 16:46:08,361:INFO:create_model() successfully completed......................................
2023-07-06 16:46:08,515:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:08,515:INFO:Creating metrics dataframe
2023-07-06 16:46:08,525:INFO:Initializing AdaBoost Regressor
2023-07-06 16:46:08,525:INFO:Total runtime is 0.10795737504959108 minutes
2023-07-06 16:46:08,527:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:08,528:INFO:Initializing create_model()
2023-07-06 16:46:08,528:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeb66880>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae898e20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:08,528:INFO:Checking exceptions
2023-07-06 16:46:08,528:INFO:Importing libraries
2023-07-06 16:46:08,528:INFO:Copying training dataset
2023-07-06 16:46:08,531:INFO:Defining folds
2023-07-06 16:46:08,531:INFO:Declaring metric variables
2023-07-06 16:46:08,534:INFO:Importing untrained model
2023-07-06 16:46:08,536:INFO:AdaBoost Regressor Imported successfully
2023-07-06 16:46:08,540:INFO:Starting cross validation
2023-07-06 16:46:08,541:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:08,917:INFO:Calculating mean and std
2023-07-06 16:46:08,919:INFO:Creating metrics dataframe
2023-07-06 16:46:08,949:INFO:Uploading results into container
2023-07-06 16:46:08,949:INFO:Uploading model into container now
2023-07-06 16:46:08,950:INFO:_master_model_container: 15
2023-07-06 16:46:08,950:INFO:_display_container: 2
2023-07-06 16:46:08,950:INFO:AdaBoostRegressor(random_state=1529)
2023-07-06 16:46:08,950:INFO:create_model() successfully completed......................................
2023-07-06 16:46:09,109:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:09,109:INFO:Creating metrics dataframe
2023-07-06 16:46:09,119:INFO:Initializing Gradient Boosting Regressor
2023-07-06 16:46:09,119:INFO:Total runtime is 0.11785696347554525 minutes
2023-07-06 16:46:09,121:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:09,122:INFO:Initializing create_model()
2023-07-06 16:46:09,122:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeb66880>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae898e20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:09,122:INFO:Checking exceptions
2023-07-06 16:46:09,122:INFO:Importing libraries
2023-07-06 16:46:09,122:INFO:Copying training dataset
2023-07-06 16:46:09,127:INFO:Defining folds
2023-07-06 16:46:09,127:INFO:Declaring metric variables
2023-07-06 16:46:09,130:INFO:Importing untrained model
2023-07-06 16:46:09,132:INFO:Gradient Boosting Regressor Imported successfully
2023-07-06 16:46:09,136:INFO:Starting cross validation
2023-07-06 16:46:09,137:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:09,801:INFO:Calculating mean and std
2023-07-06 16:46:09,803:INFO:Creating metrics dataframe
2023-07-06 16:46:09,849:INFO:Uploading results into container
2023-07-06 16:46:09,850:INFO:Uploading model into container now
2023-07-06 16:46:09,851:INFO:_master_model_container: 16
2023-07-06 16:46:09,851:INFO:_display_container: 2
2023-07-06 16:46:09,851:INFO:GradientBoostingRegressor(random_state=1529)
2023-07-06 16:46:09,851:INFO:create_model() successfully completed......................................
2023-07-06 16:46:10,025:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:10,025:INFO:Creating metrics dataframe
2023-07-06 16:46:10,036:INFO:Initializing Light Gradient Boosting Machine
2023-07-06 16:46:10,036:INFO:Total runtime is 0.13314017454783122 minutes
2023-07-06 16:46:10,039:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:10,039:INFO:Initializing create_model()
2023-07-06 16:46:10,039:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeb66880>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae898e20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:10,039:INFO:Checking exceptions
2023-07-06 16:46:10,039:INFO:Importing libraries
2023-07-06 16:46:10,039:INFO:Copying training dataset
2023-07-06 16:46:10,043:INFO:Defining folds
2023-07-06 16:46:10,043:INFO:Declaring metric variables
2023-07-06 16:46:10,045:INFO:Importing untrained model
2023-07-06 16:46:10,048:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-06 16:46:10,053:INFO:Starting cross validation
2023-07-06 16:46:10,054:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:10,504:INFO:Calculating mean and std
2023-07-06 16:46:10,506:INFO:Creating metrics dataframe
2023-07-06 16:46:10,540:INFO:Uploading results into container
2023-07-06 16:46:10,541:INFO:Uploading model into container now
2023-07-06 16:46:10,542:INFO:_master_model_container: 17
2023-07-06 16:46:10,542:INFO:_display_container: 2
2023-07-06 16:46:10,542:INFO:LGBMRegressor(random_state=1529)
2023-07-06 16:46:10,543:INFO:create_model() successfully completed......................................
2023-07-06 16:46:10,703:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:10,703:INFO:Creating metrics dataframe
2023-07-06 16:46:10,713:INFO:Initializing Dummy Regressor
2023-07-06 16:46:10,713:INFO:Total runtime is 0.14443185329437255 minutes
2023-07-06 16:46:10,717:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:10,718:INFO:Initializing create_model()
2023-07-06 16:46:10,718:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeb66880>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae898e20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:10,718:INFO:Checking exceptions
2023-07-06 16:46:10,718:INFO:Importing libraries
2023-07-06 16:46:10,718:INFO:Copying training dataset
2023-07-06 16:46:10,721:INFO:Defining folds
2023-07-06 16:46:10,722:INFO:Declaring metric variables
2023-07-06 16:46:10,724:INFO:Importing untrained model
2023-07-06 16:46:10,727:INFO:Dummy Regressor Imported successfully
2023-07-06 16:46:10,732:INFO:Starting cross validation
2023-07-06 16:46:10,732:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:10,916:INFO:Calculating mean and std
2023-07-06 16:46:10,918:INFO:Creating metrics dataframe
2023-07-06 16:46:10,967:INFO:Uploading results into container
2023-07-06 16:46:10,968:INFO:Uploading model into container now
2023-07-06 16:46:10,968:INFO:_master_model_container: 18
2023-07-06 16:46:10,968:INFO:_display_container: 2
2023-07-06 16:46:10,969:INFO:DummyRegressor()
2023-07-06 16:46:10,969:INFO:create_model() successfully completed......................................
2023-07-06 16:46:11,144:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:11,144:INFO:Creating metrics dataframe
2023-07-06 16:46:11,162:INFO:Initializing create_model()
2023-07-06 16:46:11,162:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeb66880>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=1529), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:11,163:INFO:Checking exceptions
2023-07-06 16:46:11,164:INFO:Importing libraries
2023-07-06 16:46:11,164:INFO:Copying training dataset
2023-07-06 16:46:11,167:INFO:Defining folds
2023-07-06 16:46:11,167:INFO:Declaring metric variables
2023-07-06 16:46:11,167:INFO:Importing untrained model
2023-07-06 16:46:11,167:INFO:Declaring custom model
2023-07-06 16:46:11,167:INFO:Extra Trees Regressor Imported successfully
2023-07-06 16:46:11,168:INFO:Cross validation set to False
2023-07-06 16:46:11,168:INFO:Fitting Model
2023-07-06 16:46:11,477:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1529)
2023-07-06 16:46:11,477:INFO:create_model() successfully completed......................................
2023-07-06 16:46:11,659:INFO:_master_model_container: 18
2023-07-06 16:46:11,659:INFO:_display_container: 2
2023-07-06 16:46:11,659:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1529)
2023-07-06 16:46:11,659:INFO:compare_models() successfully completed......................................
2023-07-06 16:46:11,722:INFO:PyCaret RegressionExperiment
2023-07-06 16:46:11,722:INFO:Logging name: reg-default-name
2023-07-06 16:46:11,722:INFO:ML Usecase: MLUsecase.REGRESSION
2023-07-06 16:46:11,722:INFO:version 3.0.4
2023-07-06 16:46:11,722:INFO:Initializing setup()
2023-07-06 16:46:11,722:INFO:self.USI: 51e0
2023-07-06 16:46:11,722:INFO:self._variable_keys: {'pipeline', 'fold_groups_param', 'log_plots_param', '_ml_usecase', 'memory', 'transform_target_param', 'logging_param', 'y', 'USI', 'data', 'target_param', 'html_param', 'fold_generator', 'X', 'n_jobs_param', 'X_test', 'y_test', 'exp_id', 'X_train', 'exp_name_log', 'gpu_n_jobs_param', 'seed', 'idx', 'gpu_param', 'y_train', '_available_plots', 'fold_shuffle_param'}
2023-07-06 16:46:11,722:INFO:Checking environment
2023-07-06 16:46:11,722:INFO:python_version: 3.9.16
2023-07-06 16:46:11,722:INFO:python_build: ('main', 'Feb  1 2023 21:39:03')
2023-07-06 16:46:11,722:INFO:machine: x86_64
2023-07-06 16:46:11,722:INFO:platform: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 16:46:11,723:INFO:Memory: svmem(total=540878073856, available=522816999424, percent=3.3, used=14545059840, free=2936954880, active=32299642880, inactive=489044295680, buffers=2725081088, cached=520670978048, shared=22065152, slab=14543372288)
2023-07-06 16:46:11,724:INFO:Physical Core: 64
2023-07-06 16:46:11,724:INFO:Logical Core: 64
2023-07-06 16:46:11,724:INFO:Checking libraries
2023-07-06 16:46:11,724:INFO:System:
2023-07-06 16:46:11,724:INFO:    python: 3.9.16 | packaged by conda-forge | (main, Feb  1 2023, 21:39:03)  [GCC 11.3.0]
2023-07-06 16:46:11,724:INFO:executable: /home/mirlab/anaconda3/envs/misc/bin/python
2023-07-06 16:46:11,724:INFO:   machine: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 16:46:11,724:INFO:PyCaret required dependencies:
2023-07-06 16:46:11,724:INFO:                 pip: 23.1.2
2023-07-06 16:46:11,724:INFO:          setuptools: 67.7.2
2023-07-06 16:46:11,724:INFO:             pycaret: 3.0.4
2023-07-06 16:46:11,724:INFO:             IPython: 8.14.0
2023-07-06 16:46:11,724:INFO:          ipywidgets: 8.0.7
2023-07-06 16:46:11,724:INFO:                tqdm: 4.64.1
2023-07-06 16:46:11,725:INFO:               numpy: 1.23.5
2023-07-06 16:46:11,725:INFO:              pandas: 1.5.3
2023-07-06 16:46:11,725:INFO:              jinja2: 3.1.2
2023-07-06 16:46:11,725:INFO:               scipy: 1.10.1
2023-07-06 16:46:11,725:INFO:              joblib: 1.2.0
2023-07-06 16:46:11,725:INFO:             sklearn: 1.2.2
2023-07-06 16:46:11,725:INFO:                pyod: 1.1.0
2023-07-06 16:46:11,725:INFO:            imblearn: 0.10.1
2023-07-06 16:46:11,725:INFO:   category_encoders: 2.6.1
2023-07-06 16:46:11,725:INFO:            lightgbm: 3.3.5
2023-07-06 16:46:11,725:INFO:               numba: 0.57.0
2023-07-06 16:46:11,725:INFO:            requests: 2.28.1
2023-07-06 16:46:11,725:INFO:          matplotlib: 3.7.1
2023-07-06 16:46:11,725:INFO:          scikitplot: 0.3.7
2023-07-06 16:46:11,725:INFO:         yellowbrick: 1.5
2023-07-06 16:46:11,725:INFO:              plotly: 5.15.0
2023-07-06 16:46:11,725:INFO:    plotly-resampler: Not installed
2023-07-06 16:46:11,725:INFO:             kaleido: 0.2.1
2023-07-06 16:46:11,725:INFO:           schemdraw: 0.15
2023-07-06 16:46:11,725:INFO:         statsmodels: 0.14.0
2023-07-06 16:46:11,725:INFO:              sktime: 0.20.0
2023-07-06 16:46:11,725:INFO:               tbats: 1.1.3
2023-07-06 16:46:11,725:INFO:            pmdarima: 2.0.3
2023-07-06 16:46:11,725:INFO:              psutil: 5.9.5
2023-07-06 16:46:11,725:INFO:          markupsafe: 2.1.2
2023-07-06 16:46:11,725:INFO:             pickle5: Not installed
2023-07-06 16:46:11,725:INFO:         cloudpickle: 2.2.1
2023-07-06 16:46:11,725:INFO:         deprecation: 2.1.0
2023-07-06 16:46:11,725:INFO:              xxhash: 3.2.0
2023-07-06 16:46:11,725:INFO:           wurlitzer: 3.0.3
2023-07-06 16:46:11,725:INFO:PyCaret optional dependencies:
2023-07-06 16:46:11,725:INFO:                shap: Not installed
2023-07-06 16:46:11,725:INFO:           interpret: Not installed
2023-07-06 16:46:11,725:INFO:                umap: Not installed
2023-07-06 16:46:11,725:INFO:    pandas_profiling: 3.6.6
2023-07-06 16:46:11,725:INFO:  explainerdashboard: Not installed
2023-07-06 16:46:11,725:INFO:             autoviz: Not installed
2023-07-06 16:46:11,725:INFO:           fairlearn: Not installed
2023-07-06 16:46:11,725:INFO:          deepchecks: Not installed
2023-07-06 16:46:11,725:INFO:             xgboost: Not installed
2023-07-06 16:46:11,725:INFO:            catboost: Not installed
2023-07-06 16:46:11,725:INFO:              kmodes: Not installed
2023-07-06 16:46:11,725:INFO:             mlxtend: Not installed
2023-07-06 16:46:11,725:INFO:       statsforecast: Not installed
2023-07-06 16:46:11,725:INFO:        tune_sklearn: Not installed
2023-07-06 16:46:11,725:INFO:                 ray: Not installed
2023-07-06 16:46:11,725:INFO:            hyperopt: Not installed
2023-07-06 16:46:11,725:INFO:              optuna: 3.1.1
2023-07-06 16:46:11,725:INFO:               skopt: Not installed
2023-07-06 16:46:11,725:INFO:              mlflow: Not installed
2023-07-06 16:46:11,725:INFO:              gradio: Not installed
2023-07-06 16:46:11,726:INFO:             fastapi: Not installed
2023-07-06 16:46:11,726:INFO:             uvicorn: Not installed
2023-07-06 16:46:11,726:INFO:              m2cgen: Not installed
2023-07-06 16:46:11,726:INFO:           evidently: Not installed
2023-07-06 16:46:11,726:INFO:               fugue: Not installed
2023-07-06 16:46:11,726:INFO:           streamlit: 1.24.0
2023-07-06 16:46:11,726:INFO:             prophet: Not installed
2023-07-06 16:46:11,726:INFO:None
2023-07-06 16:46:11,726:INFO:Set up data.
2023-07-06 16:46:11,730:INFO:Set up train/test split.
2023-07-06 16:46:11,732:INFO:Set up index.
2023-07-06 16:46:11,732:INFO:Set up folding strategy.
2023-07-06 16:46:11,732:INFO:Assigning column types.
2023-07-06 16:46:11,734:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-06 16:46:11,734:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 16:46:11,739:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:46:11,744:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:46:11,803:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:11,850:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:11,851:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:11,851:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:11,851:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 16:46:11,856:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:46:11,861:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:46:11,920:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:11,966:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:11,967:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:11,967:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:11,967:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-07-06 16:46:11,972:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:46:11,977:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:46:12,036:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:12,082:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:12,083:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:12,083:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:12,088:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:46:12,093:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:46:12,151:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:12,198:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:12,199:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:12,199:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:12,199:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-07-06 16:46:12,209:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:46:12,268:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:12,315:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:12,315:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:12,315:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:12,325:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:46:12,385:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:12,432:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:12,432:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:12,433:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:12,433:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-07-06 16:46:12,502:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:12,549:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:12,550:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:12,550:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:12,618:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:12,665:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:12,665:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:12,666:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:12,666:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-06 16:46:12,735:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:12,782:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:12,782:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:12,852:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:12,899:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:12,899:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:12,900:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-07-06 16:46:13,016:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:13,017:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:13,133:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:13,133:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:13,134:INFO:Preparing preprocessing pipeline...
2023-07-06 16:46:13,134:INFO:Set up simple imputation.
2023-07-06 16:46:13,135:INFO:Set up column name cleaning.
2023-07-06 16:46:13,148:INFO:Finished creating preprocessing pipeline.
2023-07-06 16:46:13,152:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['PTemp_C_Max', 'AirTC_Avg', 'RH',
                                             'WS_ms_Avg', 'TPM1', 'TPM2.5',
                                             'TPM10', 'GeffRef', 'TempRef',
                                             'Daylight'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-07-06 16:46:13,152:INFO:Creating final display dataframe.
2023-07-06 16:46:13,202:INFO:Setup _display_container:                     Description             Value
0                    Session id              8828
1                        Target       DN_Voltage1
2                   Target type        Regression
3           Original data shape        (2400, 11)
4        Transformed data shape        (2400, 11)
5   Transformed train set shape        (1680, 11)
6    Transformed test set shape         (720, 11)
7              Numeric features                10
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              51e0
2023-07-06 16:46:13,330:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:13,330:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:13,447:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:13,447:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:13,447:INFO:setup() successfully completed in 1.73s...............
2023-07-06 16:46:13,448:INFO:Initializing compare_models()
2023-07-06 16:46:13,448:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c299bdf0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f25c299bdf0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-07-06 16:46:13,448:INFO:Checking exceptions
2023-07-06 16:46:13,449:INFO:Preparing display monitor
2023-07-06 16:46:13,466:INFO:Initializing Linear Regression
2023-07-06 16:46:13,466:INFO:Total runtime is 3.6756197611490884e-06 minutes
2023-07-06 16:46:13,469:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:13,469:INFO:Initializing create_model()
2023-07-06 16:46:13,469:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c299bdf0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198a2cd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:13,469:INFO:Checking exceptions
2023-07-06 16:46:13,469:INFO:Importing libraries
2023-07-06 16:46:13,469:INFO:Copying training dataset
2023-07-06 16:46:13,472:INFO:Defining folds
2023-07-06 16:46:13,472:INFO:Declaring metric variables
2023-07-06 16:46:13,474:INFO:Importing untrained model
2023-07-06 16:46:13,477:INFO:Linear Regression Imported successfully
2023-07-06 16:46:13,482:INFO:Starting cross validation
2023-07-06 16:46:13,483:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:13,693:INFO:Calculating mean and std
2023-07-06 16:46:13,694:INFO:Creating metrics dataframe
2023-07-06 16:46:13,740:INFO:Uploading results into container
2023-07-06 16:46:13,741:INFO:Uploading model into container now
2023-07-06 16:46:13,742:INFO:_master_model_container: 1
2023-07-06 16:46:13,742:INFO:_display_container: 2
2023-07-06 16:46:13,742:INFO:LinearRegression(n_jobs=-1)
2023-07-06 16:46:13,742:INFO:create_model() successfully completed......................................
2023-07-06 16:46:13,968:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:13,968:INFO:Creating metrics dataframe
2023-07-06 16:46:13,976:INFO:Initializing Lasso Regression
2023-07-06 16:46:13,976:INFO:Total runtime is 0.008496280511220295 minutes
2023-07-06 16:46:13,979:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:13,979:INFO:Initializing create_model()
2023-07-06 16:46:13,979:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c299bdf0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198a2cd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:13,979:INFO:Checking exceptions
2023-07-06 16:46:13,979:INFO:Importing libraries
2023-07-06 16:46:13,979:INFO:Copying training dataset
2023-07-06 16:46:13,982:INFO:Defining folds
2023-07-06 16:46:13,982:INFO:Declaring metric variables
2023-07-06 16:46:13,985:INFO:Importing untrained model
2023-07-06 16:46:13,987:INFO:Lasso Regression Imported successfully
2023-07-06 16:46:13,992:INFO:Starting cross validation
2023-07-06 16:46:13,993:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:14,197:INFO:Calculating mean and std
2023-07-06 16:46:14,197:INFO:Creating metrics dataframe
2023-07-06 16:46:14,231:INFO:Uploading results into container
2023-07-06 16:46:14,232:INFO:Uploading model into container now
2023-07-06 16:46:14,232:INFO:_master_model_container: 2
2023-07-06 16:46:14,232:INFO:_display_container: 2
2023-07-06 16:46:14,233:INFO:Lasso(random_state=8828)
2023-07-06 16:46:14,233:INFO:create_model() successfully completed......................................
2023-07-06 16:46:14,420:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:14,420:INFO:Creating metrics dataframe
2023-07-06 16:46:14,429:INFO:Initializing Ridge Regression
2023-07-06 16:46:14,429:INFO:Total runtime is 0.016047378381093342 minutes
2023-07-06 16:46:14,432:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:14,432:INFO:Initializing create_model()
2023-07-06 16:46:14,432:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c299bdf0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198a2cd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:14,432:INFO:Checking exceptions
2023-07-06 16:46:14,432:INFO:Importing libraries
2023-07-06 16:46:14,432:INFO:Copying training dataset
2023-07-06 16:46:14,436:INFO:Defining folds
2023-07-06 16:46:14,437:INFO:Declaring metric variables
2023-07-06 16:46:14,440:INFO:Importing untrained model
2023-07-06 16:46:14,442:INFO:Ridge Regression Imported successfully
2023-07-06 16:46:14,449:INFO:Starting cross validation
2023-07-06 16:46:14,451:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:14,606:INFO:Calculating mean and std
2023-07-06 16:46:14,608:INFO:Creating metrics dataframe
2023-07-06 16:46:14,644:INFO:Uploading results into container
2023-07-06 16:46:14,645:INFO:Uploading model into container now
2023-07-06 16:46:14,645:INFO:_master_model_container: 3
2023-07-06 16:46:14,645:INFO:_display_container: 2
2023-07-06 16:46:14,646:INFO:Ridge(random_state=8828)
2023-07-06 16:46:14,646:INFO:create_model() successfully completed......................................
2023-07-06 16:46:14,825:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:14,826:INFO:Creating metrics dataframe
2023-07-06 16:46:14,834:INFO:Initializing Elastic Net
2023-07-06 16:46:14,834:INFO:Total runtime is 0.022806274890899658 minutes
2023-07-06 16:46:14,837:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:14,838:INFO:Initializing create_model()
2023-07-06 16:46:14,838:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c299bdf0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198a2cd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:14,838:INFO:Checking exceptions
2023-07-06 16:46:14,838:INFO:Importing libraries
2023-07-06 16:46:14,838:INFO:Copying training dataset
2023-07-06 16:46:14,843:INFO:Defining folds
2023-07-06 16:46:14,843:INFO:Declaring metric variables
2023-07-06 16:46:14,846:INFO:Importing untrained model
2023-07-06 16:46:14,849:INFO:Elastic Net Imported successfully
2023-07-06 16:46:14,853:INFO:Starting cross validation
2023-07-06 16:46:14,854:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:15,040:INFO:Calculating mean and std
2023-07-06 16:46:15,042:INFO:Creating metrics dataframe
2023-07-06 16:46:15,081:INFO:Uploading results into container
2023-07-06 16:46:15,082:INFO:Uploading model into container now
2023-07-06 16:46:15,082:INFO:_master_model_container: 4
2023-07-06 16:46:15,082:INFO:_display_container: 2
2023-07-06 16:46:15,083:INFO:ElasticNet(random_state=8828)
2023-07-06 16:46:15,083:INFO:create_model() successfully completed......................................
2023-07-06 16:46:15,283:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:15,284:INFO:Creating metrics dataframe
2023-07-06 16:46:15,292:INFO:Initializing Least Angle Regression
2023-07-06 16:46:15,292:INFO:Total runtime is 0.030438629786173503 minutes
2023-07-06 16:46:15,295:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:15,295:INFO:Initializing create_model()
2023-07-06 16:46:15,295:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c299bdf0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198a2cd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:15,295:INFO:Checking exceptions
2023-07-06 16:46:15,296:INFO:Importing libraries
2023-07-06 16:46:15,296:INFO:Copying training dataset
2023-07-06 16:46:15,299:INFO:Defining folds
2023-07-06 16:46:15,299:INFO:Declaring metric variables
2023-07-06 16:46:15,302:INFO:Importing untrained model
2023-07-06 16:46:15,305:INFO:Least Angle Regression Imported successfully
2023-07-06 16:46:15,309:INFO:Starting cross validation
2023-07-06 16:46:15,310:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:15,468:INFO:Calculating mean and std
2023-07-06 16:46:15,470:INFO:Creating metrics dataframe
2023-07-06 16:46:15,496:INFO:Uploading results into container
2023-07-06 16:46:15,497:INFO:Uploading model into container now
2023-07-06 16:46:15,497:INFO:_master_model_container: 5
2023-07-06 16:46:15,498:INFO:_display_container: 2
2023-07-06 16:46:15,498:INFO:Lars(random_state=8828)
2023-07-06 16:46:15,498:INFO:create_model() successfully completed......................................
2023-07-06 16:46:15,675:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:15,676:INFO:Creating metrics dataframe
2023-07-06 16:46:15,684:INFO:Initializing Lasso Least Angle Regression
2023-07-06 16:46:15,685:INFO:Total runtime is 0.03697516918182373 minutes
2023-07-06 16:46:15,687:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:15,688:INFO:Initializing create_model()
2023-07-06 16:46:15,688:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c299bdf0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198a2cd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:15,688:INFO:Checking exceptions
2023-07-06 16:46:15,688:INFO:Importing libraries
2023-07-06 16:46:15,688:INFO:Copying training dataset
2023-07-06 16:46:15,691:INFO:Defining folds
2023-07-06 16:46:15,692:INFO:Declaring metric variables
2023-07-06 16:46:15,694:INFO:Importing untrained model
2023-07-06 16:46:15,697:INFO:Lasso Least Angle Regression Imported successfully
2023-07-06 16:46:15,702:INFO:Starting cross validation
2023-07-06 16:46:15,703:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:15,869:INFO:Calculating mean and std
2023-07-06 16:46:15,871:INFO:Creating metrics dataframe
2023-07-06 16:46:15,906:INFO:Uploading results into container
2023-07-06 16:46:15,906:INFO:Uploading model into container now
2023-07-06 16:46:15,907:INFO:_master_model_container: 6
2023-07-06 16:46:15,907:INFO:_display_container: 2
2023-07-06 16:46:15,907:INFO:LassoLars(random_state=8828)
2023-07-06 16:46:15,907:INFO:create_model() successfully completed......................................
2023-07-06 16:46:16,085:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:16,085:INFO:Creating metrics dataframe
2023-07-06 16:46:16,094:INFO:Initializing Orthogonal Matching Pursuit
2023-07-06 16:46:16,094:INFO:Total runtime is 0.04380642573038737 minutes
2023-07-06 16:46:16,097:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:16,098:INFO:Initializing create_model()
2023-07-06 16:46:16,098:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c299bdf0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198a2cd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:16,098:INFO:Checking exceptions
2023-07-06 16:46:16,098:INFO:Importing libraries
2023-07-06 16:46:16,098:INFO:Copying training dataset
2023-07-06 16:46:16,101:INFO:Defining folds
2023-07-06 16:46:16,101:INFO:Declaring metric variables
2023-07-06 16:46:16,104:INFO:Importing untrained model
2023-07-06 16:46:16,107:INFO:Orthogonal Matching Pursuit Imported successfully
2023-07-06 16:46:16,112:INFO:Starting cross validation
2023-07-06 16:46:16,113:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:16,296:INFO:Calculating mean and std
2023-07-06 16:46:16,298:INFO:Creating metrics dataframe
2023-07-06 16:46:16,325:INFO:Uploading results into container
2023-07-06 16:46:16,325:INFO:Uploading model into container now
2023-07-06 16:46:16,326:INFO:_master_model_container: 7
2023-07-06 16:46:16,326:INFO:_display_container: 2
2023-07-06 16:46:16,326:INFO:OrthogonalMatchingPursuit()
2023-07-06 16:46:16,326:INFO:create_model() successfully completed......................................
2023-07-06 16:46:16,501:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:16,501:INFO:Creating metrics dataframe
2023-07-06 16:46:16,510:INFO:Initializing Bayesian Ridge
2023-07-06 16:46:16,510:INFO:Total runtime is 0.05073472261428833 minutes
2023-07-06 16:46:16,513:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:16,513:INFO:Initializing create_model()
2023-07-06 16:46:16,513:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c299bdf0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198a2cd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:16,513:INFO:Checking exceptions
2023-07-06 16:46:16,513:INFO:Importing libraries
2023-07-06 16:46:16,513:INFO:Copying training dataset
2023-07-06 16:46:16,517:INFO:Defining folds
2023-07-06 16:46:16,517:INFO:Declaring metric variables
2023-07-06 16:46:16,520:INFO:Importing untrained model
2023-07-06 16:46:16,522:INFO:Bayesian Ridge Imported successfully
2023-07-06 16:46:16,528:INFO:Starting cross validation
2023-07-06 16:46:16,528:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:16,733:INFO:Calculating mean and std
2023-07-06 16:46:16,735:INFO:Creating metrics dataframe
2023-07-06 16:46:16,770:INFO:Uploading results into container
2023-07-06 16:46:16,771:INFO:Uploading model into container now
2023-07-06 16:46:16,771:INFO:_master_model_container: 8
2023-07-06 16:46:16,771:INFO:_display_container: 2
2023-07-06 16:46:16,772:INFO:BayesianRidge()
2023-07-06 16:46:16,772:INFO:create_model() successfully completed......................................
2023-07-06 16:46:16,948:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:16,948:INFO:Creating metrics dataframe
2023-07-06 16:46:16,957:INFO:Initializing Passive Aggressive Regressor
2023-07-06 16:46:16,957:INFO:Total runtime is 0.05818679730097453 minutes
2023-07-06 16:46:16,960:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:16,960:INFO:Initializing create_model()
2023-07-06 16:46:16,961:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c299bdf0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198a2cd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:16,961:INFO:Checking exceptions
2023-07-06 16:46:16,961:INFO:Importing libraries
2023-07-06 16:46:16,961:INFO:Copying training dataset
2023-07-06 16:46:16,964:INFO:Defining folds
2023-07-06 16:46:16,964:INFO:Declaring metric variables
2023-07-06 16:46:16,967:INFO:Importing untrained model
2023-07-06 16:46:16,970:INFO:Passive Aggressive Regressor Imported successfully
2023-07-06 16:46:16,975:INFO:Starting cross validation
2023-07-06 16:46:16,975:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:17,156:INFO:Calculating mean and std
2023-07-06 16:46:17,157:INFO:Creating metrics dataframe
2023-07-06 16:46:17,201:INFO:Uploading results into container
2023-07-06 16:46:17,202:INFO:Uploading model into container now
2023-07-06 16:46:17,202:INFO:_master_model_container: 9
2023-07-06 16:46:17,202:INFO:_display_container: 2
2023-07-06 16:46:17,203:INFO:PassiveAggressiveRegressor(random_state=8828)
2023-07-06 16:46:17,203:INFO:create_model() successfully completed......................................
2023-07-06 16:46:17,381:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:17,382:INFO:Creating metrics dataframe
2023-07-06 16:46:17,391:INFO:Initializing Huber Regressor
2023-07-06 16:46:17,391:INFO:Total runtime is 0.06541928052902221 minutes
2023-07-06 16:46:17,395:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:17,395:INFO:Initializing create_model()
2023-07-06 16:46:17,395:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c299bdf0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198a2cd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:17,396:INFO:Checking exceptions
2023-07-06 16:46:17,396:INFO:Importing libraries
2023-07-06 16:46:17,396:INFO:Copying training dataset
2023-07-06 16:46:17,399:INFO:Defining folds
2023-07-06 16:46:17,399:INFO:Declaring metric variables
2023-07-06 16:46:17,402:INFO:Importing untrained model
2023-07-06 16:46:17,405:INFO:Huber Regressor Imported successfully
2023-07-06 16:46:17,410:INFO:Starting cross validation
2023-07-06 16:46:17,410:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:17,505:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:17,511:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:17,511:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:17,519:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:17,523:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:17,526:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:17,530:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:17,561:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:17,572:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:17,575:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:17,635:INFO:Calculating mean and std
2023-07-06 16:46:17,637:INFO:Creating metrics dataframe
2023-07-06 16:46:17,671:INFO:Uploading results into container
2023-07-06 16:46:17,672:INFO:Uploading model into container now
2023-07-06 16:46:17,672:INFO:_master_model_container: 10
2023-07-06 16:46:17,673:INFO:_display_container: 2
2023-07-06 16:46:17,673:INFO:HuberRegressor()
2023-07-06 16:46:17,673:INFO:create_model() successfully completed......................................
2023-07-06 16:46:17,848:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:17,849:INFO:Creating metrics dataframe
2023-07-06 16:46:17,858:INFO:Initializing K Neighbors Regressor
2023-07-06 16:46:17,859:INFO:Total runtime is 0.07321120500564575 minutes
2023-07-06 16:46:17,862:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:17,863:INFO:Initializing create_model()
2023-07-06 16:46:17,863:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c299bdf0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198a2cd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:17,863:INFO:Checking exceptions
2023-07-06 16:46:17,863:INFO:Importing libraries
2023-07-06 16:46:17,863:INFO:Copying training dataset
2023-07-06 16:46:17,866:INFO:Defining folds
2023-07-06 16:46:17,867:INFO:Declaring metric variables
2023-07-06 16:46:17,869:INFO:Importing untrained model
2023-07-06 16:46:17,872:INFO:K Neighbors Regressor Imported successfully
2023-07-06 16:46:17,877:INFO:Starting cross validation
2023-07-06 16:46:17,878:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:18,072:INFO:Calculating mean and std
2023-07-06 16:46:18,073:INFO:Creating metrics dataframe
2023-07-06 16:46:18,103:INFO:Uploading results into container
2023-07-06 16:46:18,103:INFO:Uploading model into container now
2023-07-06 16:46:18,104:INFO:_master_model_container: 11
2023-07-06 16:46:18,104:INFO:_display_container: 2
2023-07-06 16:46:18,104:INFO:KNeighborsRegressor(n_jobs=-1)
2023-07-06 16:46:18,104:INFO:create_model() successfully completed......................................
2023-07-06 16:46:18,292:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:18,293:INFO:Creating metrics dataframe
2023-07-06 16:46:18,303:INFO:Initializing Decision Tree Regressor
2023-07-06 16:46:18,303:INFO:Total runtime is 0.08061581452687581 minutes
2023-07-06 16:46:18,306:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:18,306:INFO:Initializing create_model()
2023-07-06 16:46:18,306:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c299bdf0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198a2cd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:18,306:INFO:Checking exceptions
2023-07-06 16:46:18,306:INFO:Importing libraries
2023-07-06 16:46:18,306:INFO:Copying training dataset
2023-07-06 16:46:18,310:INFO:Defining folds
2023-07-06 16:46:18,310:INFO:Declaring metric variables
2023-07-06 16:46:18,313:INFO:Importing untrained model
2023-07-06 16:46:18,315:INFO:Decision Tree Regressor Imported successfully
2023-07-06 16:46:18,320:INFO:Starting cross validation
2023-07-06 16:46:18,321:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:18,525:INFO:Calculating mean and std
2023-07-06 16:46:18,527:INFO:Creating metrics dataframe
2023-07-06 16:46:18,564:INFO:Uploading results into container
2023-07-06 16:46:18,565:INFO:Uploading model into container now
2023-07-06 16:46:18,566:INFO:_master_model_container: 12
2023-07-06 16:46:18,566:INFO:_display_container: 2
2023-07-06 16:46:18,567:INFO:DecisionTreeRegressor(random_state=8828)
2023-07-06 16:46:18,567:INFO:create_model() successfully completed......................................
2023-07-06 16:46:18,758:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:18,758:INFO:Creating metrics dataframe
2023-07-06 16:46:18,769:INFO:Initializing Random Forest Regressor
2023-07-06 16:46:18,769:INFO:Total runtime is 0.08837850093841552 minutes
2023-07-06 16:46:18,771:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:18,772:INFO:Initializing create_model()
2023-07-06 16:46:18,772:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c299bdf0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198a2cd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:18,772:INFO:Checking exceptions
2023-07-06 16:46:18,772:INFO:Importing libraries
2023-07-06 16:46:18,772:INFO:Copying training dataset
2023-07-06 16:46:18,776:INFO:Defining folds
2023-07-06 16:46:18,776:INFO:Declaring metric variables
2023-07-06 16:46:18,779:INFO:Importing untrained model
2023-07-06 16:46:18,781:INFO:Random Forest Regressor Imported successfully
2023-07-06 16:46:18,786:INFO:Starting cross validation
2023-07-06 16:46:18,787:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:19,306:INFO:Calculating mean and std
2023-07-06 16:46:19,307:INFO:Creating metrics dataframe
2023-07-06 16:46:19,337:INFO:Uploading results into container
2023-07-06 16:46:19,338:INFO:Uploading model into container now
2023-07-06 16:46:19,338:INFO:_master_model_container: 13
2023-07-06 16:46:19,338:INFO:_display_container: 2
2023-07-06 16:46:19,338:INFO:RandomForestRegressor(n_jobs=-1, random_state=8828)
2023-07-06 16:46:19,339:INFO:create_model() successfully completed......................................
2023-07-06 16:46:19,490:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:19,490:INFO:Creating metrics dataframe
2023-07-06 16:46:19,500:INFO:Initializing Extra Trees Regressor
2023-07-06 16:46:19,500:INFO:Total runtime is 0.10056782563527425 minutes
2023-07-06 16:46:19,503:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:19,503:INFO:Initializing create_model()
2023-07-06 16:46:19,503:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c299bdf0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198a2cd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:19,503:INFO:Checking exceptions
2023-07-06 16:46:19,503:INFO:Importing libraries
2023-07-06 16:46:19,503:INFO:Copying training dataset
2023-07-06 16:46:19,507:INFO:Defining folds
2023-07-06 16:46:19,507:INFO:Declaring metric variables
2023-07-06 16:46:19,509:INFO:Importing untrained model
2023-07-06 16:46:19,512:INFO:Extra Trees Regressor Imported successfully
2023-07-06 16:46:19,517:INFO:Starting cross validation
2023-07-06 16:46:19,518:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:19,993:INFO:Calculating mean and std
2023-07-06 16:46:19,996:INFO:Creating metrics dataframe
2023-07-06 16:46:20,036:INFO:Uploading results into container
2023-07-06 16:46:20,037:INFO:Uploading model into container now
2023-07-06 16:46:20,037:INFO:_master_model_container: 14
2023-07-06 16:46:20,037:INFO:_display_container: 2
2023-07-06 16:46:20,038:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8828)
2023-07-06 16:46:20,038:INFO:create_model() successfully completed......................................
2023-07-06 16:46:20,200:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:20,200:INFO:Creating metrics dataframe
2023-07-06 16:46:20,210:INFO:Initializing AdaBoost Regressor
2023-07-06 16:46:20,211:INFO:Total runtime is 0.11240913073221842 minutes
2023-07-06 16:46:20,213:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:20,214:INFO:Initializing create_model()
2023-07-06 16:46:20,214:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c299bdf0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198a2cd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:20,214:INFO:Checking exceptions
2023-07-06 16:46:20,214:INFO:Importing libraries
2023-07-06 16:46:20,214:INFO:Copying training dataset
2023-07-06 16:46:20,217:INFO:Defining folds
2023-07-06 16:46:20,217:INFO:Declaring metric variables
2023-07-06 16:46:20,220:INFO:Importing untrained model
2023-07-06 16:46:20,223:INFO:AdaBoost Regressor Imported successfully
2023-07-06 16:46:20,228:INFO:Starting cross validation
2023-07-06 16:46:20,229:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:20,626:INFO:Calculating mean and std
2023-07-06 16:46:20,627:INFO:Creating metrics dataframe
2023-07-06 16:46:20,673:INFO:Uploading results into container
2023-07-06 16:46:20,673:INFO:Uploading model into container now
2023-07-06 16:46:20,674:INFO:_master_model_container: 15
2023-07-06 16:46:20,674:INFO:_display_container: 2
2023-07-06 16:46:20,674:INFO:AdaBoostRegressor(random_state=8828)
2023-07-06 16:46:20,674:INFO:create_model() successfully completed......................................
2023-07-06 16:46:20,841:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:20,841:INFO:Creating metrics dataframe
2023-07-06 16:46:20,851:INFO:Initializing Gradient Boosting Regressor
2023-07-06 16:46:20,852:INFO:Total runtime is 0.12309340635935465 minutes
2023-07-06 16:46:20,854:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:20,855:INFO:Initializing create_model()
2023-07-06 16:46:20,855:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c299bdf0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198a2cd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:20,855:INFO:Checking exceptions
2023-07-06 16:46:20,855:INFO:Importing libraries
2023-07-06 16:46:20,855:INFO:Copying training dataset
2023-07-06 16:46:20,859:INFO:Defining folds
2023-07-06 16:46:20,859:INFO:Declaring metric variables
2023-07-06 16:46:20,862:INFO:Importing untrained model
2023-07-06 16:46:20,865:INFO:Gradient Boosting Regressor Imported successfully
2023-07-06 16:46:20,869:INFO:Starting cross validation
2023-07-06 16:46:20,870:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:21,527:INFO:Calculating mean and std
2023-07-06 16:46:21,529:INFO:Creating metrics dataframe
2023-07-06 16:46:21,572:INFO:Uploading results into container
2023-07-06 16:46:21,573:INFO:Uploading model into container now
2023-07-06 16:46:21,574:INFO:_master_model_container: 16
2023-07-06 16:46:21,574:INFO:_display_container: 2
2023-07-06 16:46:21,574:INFO:GradientBoostingRegressor(random_state=8828)
2023-07-06 16:46:21,574:INFO:create_model() successfully completed......................................
2023-07-06 16:46:21,740:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:21,740:INFO:Creating metrics dataframe
2023-07-06 16:46:21,751:INFO:Initializing Light Gradient Boosting Machine
2023-07-06 16:46:21,751:INFO:Total runtime is 0.13808968861897786 minutes
2023-07-06 16:46:21,754:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:21,754:INFO:Initializing create_model()
2023-07-06 16:46:21,755:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c299bdf0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198a2cd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:21,755:INFO:Checking exceptions
2023-07-06 16:46:21,755:INFO:Importing libraries
2023-07-06 16:46:21,755:INFO:Copying training dataset
2023-07-06 16:46:21,758:INFO:Defining folds
2023-07-06 16:46:21,758:INFO:Declaring metric variables
2023-07-06 16:46:21,761:INFO:Importing untrained model
2023-07-06 16:46:21,764:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-06 16:46:21,769:INFO:Starting cross validation
2023-07-06 16:46:21,770:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:22,211:INFO:Calculating mean and std
2023-07-06 16:46:22,213:INFO:Creating metrics dataframe
2023-07-06 16:46:22,259:INFO:Uploading results into container
2023-07-06 16:46:22,260:INFO:Uploading model into container now
2023-07-06 16:46:22,260:INFO:_master_model_container: 17
2023-07-06 16:46:22,260:INFO:_display_container: 2
2023-07-06 16:46:22,261:INFO:LGBMRegressor(random_state=8828)
2023-07-06 16:46:22,261:INFO:create_model() successfully completed......................................
2023-07-06 16:46:22,429:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:22,429:INFO:Creating metrics dataframe
2023-07-06 16:46:22,439:INFO:Initializing Dummy Regressor
2023-07-06 16:46:22,440:INFO:Total runtime is 0.14956002235412597 minutes
2023-07-06 16:46:22,443:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:22,443:INFO:Initializing create_model()
2023-07-06 16:46:22,443:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c299bdf0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198a2cd0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:22,443:INFO:Checking exceptions
2023-07-06 16:46:22,444:INFO:Importing libraries
2023-07-06 16:46:22,444:INFO:Copying training dataset
2023-07-06 16:46:22,447:INFO:Defining folds
2023-07-06 16:46:22,447:INFO:Declaring metric variables
2023-07-06 16:46:22,450:INFO:Importing untrained model
2023-07-06 16:46:22,452:INFO:Dummy Regressor Imported successfully
2023-07-06 16:46:22,457:INFO:Starting cross validation
2023-07-06 16:46:22,458:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:22,699:INFO:Calculating mean and std
2023-07-06 16:46:22,701:INFO:Creating metrics dataframe
2023-07-06 16:46:22,734:INFO:Uploading results into container
2023-07-06 16:46:22,735:INFO:Uploading model into container now
2023-07-06 16:46:22,736:INFO:_master_model_container: 18
2023-07-06 16:46:22,736:INFO:_display_container: 2
2023-07-06 16:46:22,736:INFO:DummyRegressor()
2023-07-06 16:46:22,736:INFO:create_model() successfully completed......................................
2023-07-06 16:46:22,922:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:22,922:INFO:Creating metrics dataframe
2023-07-06 16:46:22,941:INFO:Initializing create_model()
2023-07-06 16:46:22,941:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c299bdf0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=8828), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:22,941:INFO:Checking exceptions
2023-07-06 16:46:22,942:INFO:Importing libraries
2023-07-06 16:46:22,942:INFO:Copying training dataset
2023-07-06 16:46:22,945:INFO:Defining folds
2023-07-06 16:46:22,945:INFO:Declaring metric variables
2023-07-06 16:46:22,945:INFO:Importing untrained model
2023-07-06 16:46:22,946:INFO:Declaring custom model
2023-07-06 16:46:22,946:INFO:Extra Trees Regressor Imported successfully
2023-07-06 16:46:22,947:INFO:Cross validation set to False
2023-07-06 16:46:22,947:INFO:Fitting Model
2023-07-06 16:46:23,259:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8828)
2023-07-06 16:46:23,259:INFO:create_model() successfully completed......................................
2023-07-06 16:46:23,470:INFO:_master_model_container: 18
2023-07-06 16:46:23,470:INFO:_display_container: 2
2023-07-06 16:46:23,471:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8828)
2023-07-06 16:46:23,471:INFO:compare_models() successfully completed......................................
2023-07-06 16:46:23,532:INFO:PyCaret RegressionExperiment
2023-07-06 16:46:23,532:INFO:Logging name: reg-default-name
2023-07-06 16:46:23,532:INFO:ML Usecase: MLUsecase.REGRESSION
2023-07-06 16:46:23,532:INFO:version 3.0.4
2023-07-06 16:46:23,532:INFO:Initializing setup()
2023-07-06 16:46:23,532:INFO:self.USI: c7d3
2023-07-06 16:46:23,532:INFO:self._variable_keys: {'pipeline', 'fold_groups_param', 'log_plots_param', '_ml_usecase', 'memory', 'transform_target_param', 'logging_param', 'y', 'USI', 'data', 'target_param', 'html_param', 'fold_generator', 'X', 'n_jobs_param', 'X_test', 'y_test', 'exp_id', 'X_train', 'exp_name_log', 'gpu_n_jobs_param', 'seed', 'idx', 'gpu_param', 'y_train', '_available_plots', 'fold_shuffle_param'}
2023-07-06 16:46:23,532:INFO:Checking environment
2023-07-06 16:46:23,532:INFO:python_version: 3.9.16
2023-07-06 16:46:23,532:INFO:python_build: ('main', 'Feb  1 2023 21:39:03')
2023-07-06 16:46:23,532:INFO:machine: x86_64
2023-07-06 16:46:23,532:INFO:platform: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 16:46:23,533:INFO:Memory: svmem(total=540878073856, available=522426871808, percent=3.4, used=14935031808, free=2556436480, active=32300498944, inactive=489344684032, buffers=2724298752, cached=520662306816, shared=22061056, slab=14542999552)
2023-07-06 16:46:23,534:INFO:Physical Core: 64
2023-07-06 16:46:23,534:INFO:Logical Core: 64
2023-07-06 16:46:23,534:INFO:Checking libraries
2023-07-06 16:46:23,534:INFO:System:
2023-07-06 16:46:23,534:INFO:    python: 3.9.16 | packaged by conda-forge | (main, Feb  1 2023, 21:39:03)  [GCC 11.3.0]
2023-07-06 16:46:23,534:INFO:executable: /home/mirlab/anaconda3/envs/misc/bin/python
2023-07-06 16:46:23,534:INFO:   machine: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 16:46:23,534:INFO:PyCaret required dependencies:
2023-07-06 16:46:23,534:INFO:                 pip: 23.1.2
2023-07-06 16:46:23,534:INFO:          setuptools: 67.7.2
2023-07-06 16:46:23,534:INFO:             pycaret: 3.0.4
2023-07-06 16:46:23,534:INFO:             IPython: 8.14.0
2023-07-06 16:46:23,535:INFO:          ipywidgets: 8.0.7
2023-07-06 16:46:23,535:INFO:                tqdm: 4.64.1
2023-07-06 16:46:23,535:INFO:               numpy: 1.23.5
2023-07-06 16:46:23,535:INFO:              pandas: 1.5.3
2023-07-06 16:46:23,535:INFO:              jinja2: 3.1.2
2023-07-06 16:46:23,535:INFO:               scipy: 1.10.1
2023-07-06 16:46:23,535:INFO:              joblib: 1.2.0
2023-07-06 16:46:23,535:INFO:             sklearn: 1.2.2
2023-07-06 16:46:23,535:INFO:                pyod: 1.1.0
2023-07-06 16:46:23,535:INFO:            imblearn: 0.10.1
2023-07-06 16:46:23,535:INFO:   category_encoders: 2.6.1
2023-07-06 16:46:23,535:INFO:            lightgbm: 3.3.5
2023-07-06 16:46:23,535:INFO:               numba: 0.57.0
2023-07-06 16:46:23,535:INFO:            requests: 2.28.1
2023-07-06 16:46:23,535:INFO:          matplotlib: 3.7.1
2023-07-06 16:46:23,535:INFO:          scikitplot: 0.3.7
2023-07-06 16:46:23,535:INFO:         yellowbrick: 1.5
2023-07-06 16:46:23,535:INFO:              plotly: 5.15.0
2023-07-06 16:46:23,535:INFO:    plotly-resampler: Not installed
2023-07-06 16:46:23,535:INFO:             kaleido: 0.2.1
2023-07-06 16:46:23,535:INFO:           schemdraw: 0.15
2023-07-06 16:46:23,535:INFO:         statsmodels: 0.14.0
2023-07-06 16:46:23,535:INFO:              sktime: 0.20.0
2023-07-06 16:46:23,535:INFO:               tbats: 1.1.3
2023-07-06 16:46:23,535:INFO:            pmdarima: 2.0.3
2023-07-06 16:46:23,535:INFO:              psutil: 5.9.5
2023-07-06 16:46:23,535:INFO:          markupsafe: 2.1.2
2023-07-06 16:46:23,535:INFO:             pickle5: Not installed
2023-07-06 16:46:23,535:INFO:         cloudpickle: 2.2.1
2023-07-06 16:46:23,535:INFO:         deprecation: 2.1.0
2023-07-06 16:46:23,535:INFO:              xxhash: 3.2.0
2023-07-06 16:46:23,535:INFO:           wurlitzer: 3.0.3
2023-07-06 16:46:23,535:INFO:PyCaret optional dependencies:
2023-07-06 16:46:23,535:INFO:                shap: Not installed
2023-07-06 16:46:23,535:INFO:           interpret: Not installed
2023-07-06 16:46:23,535:INFO:                umap: Not installed
2023-07-06 16:46:23,535:INFO:    pandas_profiling: 3.6.6
2023-07-06 16:46:23,535:INFO:  explainerdashboard: Not installed
2023-07-06 16:46:23,535:INFO:             autoviz: Not installed
2023-07-06 16:46:23,535:INFO:           fairlearn: Not installed
2023-07-06 16:46:23,535:INFO:          deepchecks: Not installed
2023-07-06 16:46:23,535:INFO:             xgboost: Not installed
2023-07-06 16:46:23,535:INFO:            catboost: Not installed
2023-07-06 16:46:23,535:INFO:              kmodes: Not installed
2023-07-06 16:46:23,535:INFO:             mlxtend: Not installed
2023-07-06 16:46:23,535:INFO:       statsforecast: Not installed
2023-07-06 16:46:23,535:INFO:        tune_sklearn: Not installed
2023-07-06 16:46:23,535:INFO:                 ray: Not installed
2023-07-06 16:46:23,535:INFO:            hyperopt: Not installed
2023-07-06 16:46:23,536:INFO:              optuna: 3.1.1
2023-07-06 16:46:23,536:INFO:               skopt: Not installed
2023-07-06 16:46:23,536:INFO:              mlflow: Not installed
2023-07-06 16:46:23,536:INFO:              gradio: Not installed
2023-07-06 16:46:23,536:INFO:             fastapi: Not installed
2023-07-06 16:46:23,536:INFO:             uvicorn: Not installed
2023-07-06 16:46:23,536:INFO:              m2cgen: Not installed
2023-07-06 16:46:23,536:INFO:           evidently: Not installed
2023-07-06 16:46:23,536:INFO:               fugue: Not installed
2023-07-06 16:46:23,536:INFO:           streamlit: 1.24.0
2023-07-06 16:46:23,536:INFO:             prophet: Not installed
2023-07-06 16:46:23,536:INFO:None
2023-07-06 16:46:23,536:INFO:Set up data.
2023-07-06 16:46:23,540:INFO:Set up train/test split.
2023-07-06 16:46:23,542:INFO:Set up index.
2023-07-06 16:46:23,542:INFO:Set up folding strategy.
2023-07-06 16:46:23,542:INFO:Assigning column types.
2023-07-06 16:46:23,544:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-06 16:46:23,545:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 16:46:23,549:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:46:23,554:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:46:23,614:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:23,661:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:23,661:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:23,661:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:23,662:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 16:46:23,666:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:46:23,671:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:46:23,731:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:23,778:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:23,778:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:23,779:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:23,779:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-07-06 16:46:23,784:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:46:23,788:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:46:23,848:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:23,895:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:23,896:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:23,896:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:23,901:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:46:23,906:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:46:23,965:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:24,012:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:24,012:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:24,012:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:24,013:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-07-06 16:46:24,022:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:46:24,082:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:24,129:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:24,129:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:24,130:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:24,139:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:46:24,198:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:24,245:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:24,246:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:24,246:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:24,246:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-07-06 16:46:24,315:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:24,362:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:24,362:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:24,362:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:24,431:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:24,479:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:24,479:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:24,479:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:24,479:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-06 16:46:24,549:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:24,596:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:24,597:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:24,666:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:24,714:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:24,714:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:24,714:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-07-06 16:46:24,831:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:24,831:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:24,947:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:24,947:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:24,948:INFO:Preparing preprocessing pipeline...
2023-07-06 16:46:24,948:INFO:Set up simple imputation.
2023-07-06 16:46:24,949:INFO:Set up column name cleaning.
2023-07-06 16:46:24,962:INFO:Finished creating preprocessing pipeline.
2023-07-06 16:46:24,966:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['PTemp_C_Max', 'AirTC_Avg', 'RH',
                                             'WS_ms_Avg', 'TPM1', 'TPM2.5',
                                             'TPM10', 'GeffRef', 'TempRef',
                                             'Daylight'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-07-06 16:46:24,966:INFO:Creating final display dataframe.
2023-07-06 16:46:25,017:INFO:Setup _display_container:                     Description             Value
0                    Session id              8270
1                        Target       DN_Voltage2
2                   Target type        Regression
3           Original data shape        (2400, 11)
4        Transformed data shape        (2400, 11)
5   Transformed train set shape        (1680, 11)
6    Transformed test set shape         (720, 11)
7              Numeric features                10
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              c7d3
2023-07-06 16:46:25,145:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:25,145:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:25,262:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:25,263:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:25,263:INFO:setup() successfully completed in 1.74s...............
2023-07-06 16:46:25,263:INFO:Initializing compare_models()
2023-07-06 16:46:25,263:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6c9a30>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6c9a30>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-07-06 16:46:25,263:INFO:Checking exceptions
2023-07-06 16:46:25,264:INFO:Preparing display monitor
2023-07-06 16:46:25,282:INFO:Initializing Linear Regression
2023-07-06 16:46:25,283:INFO:Total runtime is 4.740556081136068e-06 minutes
2023-07-06 16:46:25,285:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:25,285:INFO:Initializing create_model()
2023-07-06 16:46:25,285:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6c9a30>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:25,286:INFO:Checking exceptions
2023-07-06 16:46:25,286:INFO:Importing libraries
2023-07-06 16:46:25,286:INFO:Copying training dataset
2023-07-06 16:46:25,288:INFO:Defining folds
2023-07-06 16:46:25,288:INFO:Declaring metric variables
2023-07-06 16:46:25,291:INFO:Importing untrained model
2023-07-06 16:46:25,293:INFO:Linear Regression Imported successfully
2023-07-06 16:46:25,298:INFO:Starting cross validation
2023-07-06 16:46:25,299:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:25,540:INFO:Calculating mean and std
2023-07-06 16:46:25,541:INFO:Creating metrics dataframe
2023-07-06 16:46:25,582:INFO:Uploading results into container
2023-07-06 16:46:25,582:INFO:Uploading model into container now
2023-07-06 16:46:25,583:INFO:_master_model_container: 1
2023-07-06 16:46:25,583:INFO:_display_container: 2
2023-07-06 16:46:25,583:INFO:LinearRegression(n_jobs=-1)
2023-07-06 16:46:25,584:INFO:create_model() successfully completed......................................
2023-07-06 16:46:25,779:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:25,779:INFO:Creating metrics dataframe
2023-07-06 16:46:25,787:INFO:Initializing Lasso Regression
2023-07-06 16:46:25,787:INFO:Total runtime is 0.008408272266387939 minutes
2023-07-06 16:46:25,789:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:25,790:INFO:Initializing create_model()
2023-07-06 16:46:25,790:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6c9a30>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:25,790:INFO:Checking exceptions
2023-07-06 16:46:25,790:INFO:Importing libraries
2023-07-06 16:46:25,790:INFO:Copying training dataset
2023-07-06 16:46:25,793:INFO:Defining folds
2023-07-06 16:46:25,793:INFO:Declaring metric variables
2023-07-06 16:46:25,795:INFO:Importing untrained model
2023-07-06 16:46:25,798:INFO:Lasso Regression Imported successfully
2023-07-06 16:46:25,803:INFO:Starting cross validation
2023-07-06 16:46:25,804:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:26,057:INFO:Calculating mean and std
2023-07-06 16:46:26,058:INFO:Creating metrics dataframe
2023-07-06 16:46:26,108:INFO:Uploading results into container
2023-07-06 16:46:26,109:INFO:Uploading model into container now
2023-07-06 16:46:26,110:INFO:_master_model_container: 2
2023-07-06 16:46:26,110:INFO:_display_container: 2
2023-07-06 16:46:26,110:INFO:Lasso(random_state=8270)
2023-07-06 16:46:26,110:INFO:create_model() successfully completed......................................
2023-07-06 16:46:26,327:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:26,328:INFO:Creating metrics dataframe
2023-07-06 16:46:26,336:INFO:Initializing Ridge Regression
2023-07-06 16:46:26,336:INFO:Total runtime is 0.01756721337636312 minutes
2023-07-06 16:46:26,339:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:26,339:INFO:Initializing create_model()
2023-07-06 16:46:26,339:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6c9a30>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:26,340:INFO:Checking exceptions
2023-07-06 16:46:26,340:INFO:Importing libraries
2023-07-06 16:46:26,340:INFO:Copying training dataset
2023-07-06 16:46:26,343:INFO:Defining folds
2023-07-06 16:46:26,344:INFO:Declaring metric variables
2023-07-06 16:46:26,346:INFO:Importing untrained model
2023-07-06 16:46:26,349:INFO:Ridge Regression Imported successfully
2023-07-06 16:46:26,354:INFO:Starting cross validation
2023-07-06 16:46:26,355:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:26,585:INFO:Calculating mean and std
2023-07-06 16:46:26,587:INFO:Creating metrics dataframe
2023-07-06 16:46:26,643:INFO:Uploading results into container
2023-07-06 16:46:26,644:INFO:Uploading model into container now
2023-07-06 16:46:26,645:INFO:_master_model_container: 3
2023-07-06 16:46:26,645:INFO:_display_container: 2
2023-07-06 16:46:26,645:INFO:Ridge(random_state=8270)
2023-07-06 16:46:26,645:INFO:create_model() successfully completed......................................
2023-07-06 16:46:26,841:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:26,842:INFO:Creating metrics dataframe
2023-07-06 16:46:26,850:INFO:Initializing Elastic Net
2023-07-06 16:46:26,850:INFO:Total runtime is 0.02612860997517904 minutes
2023-07-06 16:46:26,853:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:26,853:INFO:Initializing create_model()
2023-07-06 16:46:26,853:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6c9a30>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:26,853:INFO:Checking exceptions
2023-07-06 16:46:26,853:INFO:Importing libraries
2023-07-06 16:46:26,853:INFO:Copying training dataset
2023-07-06 16:46:26,857:INFO:Defining folds
2023-07-06 16:46:26,857:INFO:Declaring metric variables
2023-07-06 16:46:26,860:INFO:Importing untrained model
2023-07-06 16:46:26,862:INFO:Elastic Net Imported successfully
2023-07-06 16:46:26,867:INFO:Starting cross validation
2023-07-06 16:46:26,868:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:27,093:INFO:Calculating mean and std
2023-07-06 16:46:27,094:INFO:Creating metrics dataframe
2023-07-06 16:46:27,128:INFO:Uploading results into container
2023-07-06 16:46:27,128:INFO:Uploading model into container now
2023-07-06 16:46:27,129:INFO:_master_model_container: 4
2023-07-06 16:46:27,129:INFO:_display_container: 2
2023-07-06 16:46:27,129:INFO:ElasticNet(random_state=8270)
2023-07-06 16:46:27,130:INFO:create_model() successfully completed......................................
2023-07-06 16:46:27,321:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:27,321:INFO:Creating metrics dataframe
2023-07-06 16:46:27,330:INFO:Initializing Least Angle Regression
2023-07-06 16:46:27,330:INFO:Total runtime is 0.034124243259429934 minutes
2023-07-06 16:46:27,332:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:27,333:INFO:Initializing create_model()
2023-07-06 16:46:27,333:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6c9a30>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:27,333:INFO:Checking exceptions
2023-07-06 16:46:27,333:INFO:Importing libraries
2023-07-06 16:46:27,333:INFO:Copying training dataset
2023-07-06 16:46:27,336:INFO:Defining folds
2023-07-06 16:46:27,337:INFO:Declaring metric variables
2023-07-06 16:46:27,339:INFO:Importing untrained model
2023-07-06 16:46:27,342:INFO:Least Angle Regression Imported successfully
2023-07-06 16:46:27,347:INFO:Starting cross validation
2023-07-06 16:46:27,348:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:27,585:INFO:Calculating mean and std
2023-07-06 16:46:27,587:INFO:Creating metrics dataframe
2023-07-06 16:46:27,622:INFO:Uploading results into container
2023-07-06 16:46:27,623:INFO:Uploading model into container now
2023-07-06 16:46:27,623:INFO:_master_model_container: 5
2023-07-06 16:46:27,623:INFO:_display_container: 2
2023-07-06 16:46:27,624:INFO:Lars(random_state=8270)
2023-07-06 16:46:27,624:INFO:create_model() successfully completed......................................
2023-07-06 16:46:27,832:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:27,833:INFO:Creating metrics dataframe
2023-07-06 16:46:27,841:INFO:Initializing Lasso Least Angle Regression
2023-07-06 16:46:27,842:INFO:Total runtime is 0.042658813794453944 minutes
2023-07-06 16:46:27,845:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:27,845:INFO:Initializing create_model()
2023-07-06 16:46:27,845:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6c9a30>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:27,845:INFO:Checking exceptions
2023-07-06 16:46:27,845:INFO:Importing libraries
2023-07-06 16:46:27,845:INFO:Copying training dataset
2023-07-06 16:46:27,849:INFO:Defining folds
2023-07-06 16:46:27,849:INFO:Declaring metric variables
2023-07-06 16:46:27,852:INFO:Importing untrained model
2023-07-06 16:46:27,854:INFO:Lasso Least Angle Regression Imported successfully
2023-07-06 16:46:27,859:INFO:Starting cross validation
2023-07-06 16:46:27,860:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:28,060:INFO:Calculating mean and std
2023-07-06 16:46:28,062:INFO:Creating metrics dataframe
2023-07-06 16:46:28,109:INFO:Uploading results into container
2023-07-06 16:46:28,110:INFO:Uploading model into container now
2023-07-06 16:46:28,110:INFO:_master_model_container: 6
2023-07-06 16:46:28,110:INFO:_display_container: 2
2023-07-06 16:46:28,111:INFO:LassoLars(random_state=8270)
2023-07-06 16:46:28,111:INFO:create_model() successfully completed......................................
2023-07-06 16:46:28,310:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:28,311:INFO:Creating metrics dataframe
2023-07-06 16:46:28,320:INFO:Initializing Orthogonal Matching Pursuit
2023-07-06 16:46:28,320:INFO:Total runtime is 0.0506234884262085 minutes
2023-07-06 16:46:28,322:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:28,323:INFO:Initializing create_model()
2023-07-06 16:46:28,323:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6c9a30>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:28,323:INFO:Checking exceptions
2023-07-06 16:46:28,323:INFO:Importing libraries
2023-07-06 16:46:28,323:INFO:Copying training dataset
2023-07-06 16:46:28,327:INFO:Defining folds
2023-07-06 16:46:28,327:INFO:Declaring metric variables
2023-07-06 16:46:28,329:INFO:Importing untrained model
2023-07-06 16:46:28,332:INFO:Orthogonal Matching Pursuit Imported successfully
2023-07-06 16:46:28,337:INFO:Starting cross validation
2023-07-06 16:46:28,338:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:28,558:INFO:Calculating mean and std
2023-07-06 16:46:28,560:INFO:Creating metrics dataframe
2023-07-06 16:46:28,593:INFO:Uploading results into container
2023-07-06 16:46:28,594:INFO:Uploading model into container now
2023-07-06 16:46:28,594:INFO:_master_model_container: 7
2023-07-06 16:46:28,594:INFO:_display_container: 2
2023-07-06 16:46:28,594:INFO:OrthogonalMatchingPursuit()
2023-07-06 16:46:28,595:INFO:create_model() successfully completed......................................
2023-07-06 16:46:28,788:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:28,788:INFO:Creating metrics dataframe
2023-07-06 16:46:28,797:INFO:Initializing Bayesian Ridge
2023-07-06 16:46:28,798:INFO:Total runtime is 0.05859116713205974 minutes
2023-07-06 16:46:28,800:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:28,801:INFO:Initializing create_model()
2023-07-06 16:46:28,801:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6c9a30>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:28,801:INFO:Checking exceptions
2023-07-06 16:46:28,801:INFO:Importing libraries
2023-07-06 16:46:28,801:INFO:Copying training dataset
2023-07-06 16:46:28,804:INFO:Defining folds
2023-07-06 16:46:28,805:INFO:Declaring metric variables
2023-07-06 16:46:28,807:INFO:Importing untrained model
2023-07-06 16:46:28,810:INFO:Bayesian Ridge Imported successfully
2023-07-06 16:46:28,815:INFO:Starting cross validation
2023-07-06 16:46:28,816:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:29,025:INFO:Calculating mean and std
2023-07-06 16:46:29,027:INFO:Creating metrics dataframe
2023-07-06 16:46:29,084:INFO:Uploading results into container
2023-07-06 16:46:29,084:INFO:Uploading model into container now
2023-07-06 16:46:29,085:INFO:_master_model_container: 8
2023-07-06 16:46:29,085:INFO:_display_container: 2
2023-07-06 16:46:29,085:INFO:BayesianRidge()
2023-07-06 16:46:29,085:INFO:create_model() successfully completed......................................
2023-07-06 16:46:29,279:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:29,279:INFO:Creating metrics dataframe
2023-07-06 16:46:29,288:INFO:Initializing Passive Aggressive Regressor
2023-07-06 16:46:29,288:INFO:Total runtime is 0.06677012443542481 minutes
2023-07-06 16:46:29,291:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:29,292:INFO:Initializing create_model()
2023-07-06 16:46:29,292:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6c9a30>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:29,292:INFO:Checking exceptions
2023-07-06 16:46:29,292:INFO:Importing libraries
2023-07-06 16:46:29,292:INFO:Copying training dataset
2023-07-06 16:46:29,295:INFO:Defining folds
2023-07-06 16:46:29,295:INFO:Declaring metric variables
2023-07-06 16:46:29,298:INFO:Importing untrained model
2023-07-06 16:46:29,301:INFO:Passive Aggressive Regressor Imported successfully
2023-07-06 16:46:29,306:INFO:Starting cross validation
2023-07-06 16:46:29,307:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:29,477:INFO:Calculating mean and std
2023-07-06 16:46:29,479:INFO:Creating metrics dataframe
2023-07-06 16:46:29,535:INFO:Uploading results into container
2023-07-06 16:46:29,535:INFO:Uploading model into container now
2023-07-06 16:46:29,536:INFO:_master_model_container: 9
2023-07-06 16:46:29,536:INFO:_display_container: 2
2023-07-06 16:46:29,536:INFO:PassiveAggressiveRegressor(random_state=8270)
2023-07-06 16:46:29,537:INFO:create_model() successfully completed......................................
2023-07-06 16:46:29,749:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:29,749:INFO:Creating metrics dataframe
2023-07-06 16:46:29,759:INFO:Initializing Huber Regressor
2023-07-06 16:46:29,759:INFO:Total runtime is 0.0746107260386149 minutes
2023-07-06 16:46:29,761:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:29,762:INFO:Initializing create_model()
2023-07-06 16:46:29,762:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6c9a30>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:29,762:INFO:Checking exceptions
2023-07-06 16:46:29,762:INFO:Importing libraries
2023-07-06 16:46:29,762:INFO:Copying training dataset
2023-07-06 16:46:29,765:INFO:Defining folds
2023-07-06 16:46:29,766:INFO:Declaring metric variables
2023-07-06 16:46:29,768:INFO:Importing untrained model
2023-07-06 16:46:29,771:INFO:Huber Regressor Imported successfully
2023-07-06 16:46:29,776:INFO:Starting cross validation
2023-07-06 16:46:29,777:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:29,867:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:29,880:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:29,885:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:29,887:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:29,888:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:29,929:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:29,930:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:29,933:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:29,942:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:29,952:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:46:30,012:INFO:Calculating mean and std
2023-07-06 16:46:30,014:INFO:Creating metrics dataframe
2023-07-06 16:46:30,048:INFO:Uploading results into container
2023-07-06 16:46:30,048:INFO:Uploading model into container now
2023-07-06 16:46:30,049:INFO:_master_model_container: 10
2023-07-06 16:46:30,049:INFO:_display_container: 2
2023-07-06 16:46:30,049:INFO:HuberRegressor()
2023-07-06 16:46:30,049:INFO:create_model() successfully completed......................................
2023-07-06 16:46:30,260:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:30,260:INFO:Creating metrics dataframe
2023-07-06 16:46:30,270:INFO:Initializing K Neighbors Regressor
2023-07-06 16:46:30,270:INFO:Total runtime is 0.08312397003173827 minutes
2023-07-06 16:46:30,272:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:30,273:INFO:Initializing create_model()
2023-07-06 16:46:30,273:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6c9a30>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:30,273:INFO:Checking exceptions
2023-07-06 16:46:30,273:INFO:Importing libraries
2023-07-06 16:46:30,273:INFO:Copying training dataset
2023-07-06 16:46:30,276:INFO:Defining folds
2023-07-06 16:46:30,277:INFO:Declaring metric variables
2023-07-06 16:46:30,279:INFO:Importing untrained model
2023-07-06 16:46:30,282:INFO:K Neighbors Regressor Imported successfully
2023-07-06 16:46:30,287:INFO:Starting cross validation
2023-07-06 16:46:30,288:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:30,473:INFO:Calculating mean and std
2023-07-06 16:46:30,474:INFO:Creating metrics dataframe
2023-07-06 16:46:30,509:INFO:Uploading results into container
2023-07-06 16:46:30,509:INFO:Uploading model into container now
2023-07-06 16:46:30,510:INFO:_master_model_container: 11
2023-07-06 16:46:30,510:INFO:_display_container: 2
2023-07-06 16:46:30,510:INFO:KNeighborsRegressor(n_jobs=-1)
2023-07-06 16:46:30,510:INFO:create_model() successfully completed......................................
2023-07-06 16:46:30,711:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:30,712:INFO:Creating metrics dataframe
2023-07-06 16:46:30,722:INFO:Initializing Decision Tree Regressor
2023-07-06 16:46:30,722:INFO:Total runtime is 0.09066239198048909 minutes
2023-07-06 16:46:30,725:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:30,725:INFO:Initializing create_model()
2023-07-06 16:46:30,725:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6c9a30>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:30,725:INFO:Checking exceptions
2023-07-06 16:46:30,725:INFO:Importing libraries
2023-07-06 16:46:30,725:INFO:Copying training dataset
2023-07-06 16:46:30,729:INFO:Defining folds
2023-07-06 16:46:30,729:INFO:Declaring metric variables
2023-07-06 16:46:30,732:INFO:Importing untrained model
2023-07-06 16:46:30,735:INFO:Decision Tree Regressor Imported successfully
2023-07-06 16:46:30,740:INFO:Starting cross validation
2023-07-06 16:46:30,741:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:30,940:INFO:Calculating mean and std
2023-07-06 16:46:30,942:INFO:Creating metrics dataframe
2023-07-06 16:46:30,999:INFO:Uploading results into container
2023-07-06 16:46:31,000:INFO:Uploading model into container now
2023-07-06 16:46:31,001:INFO:_master_model_container: 12
2023-07-06 16:46:31,001:INFO:_display_container: 2
2023-07-06 16:46:31,001:INFO:DecisionTreeRegressor(random_state=8270)
2023-07-06 16:46:31,001:INFO:create_model() successfully completed......................................
2023-07-06 16:46:31,206:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:31,207:INFO:Creating metrics dataframe
2023-07-06 16:46:31,217:INFO:Initializing Random Forest Regressor
2023-07-06 16:46:31,217:INFO:Total runtime is 0.09891056617101032 minutes
2023-07-06 16:46:31,219:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:31,220:INFO:Initializing create_model()
2023-07-06 16:46:31,220:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6c9a30>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:31,220:INFO:Checking exceptions
2023-07-06 16:46:31,220:INFO:Importing libraries
2023-07-06 16:46:31,220:INFO:Copying training dataset
2023-07-06 16:46:31,224:INFO:Defining folds
2023-07-06 16:46:31,224:INFO:Declaring metric variables
2023-07-06 16:46:31,227:INFO:Importing untrained model
2023-07-06 16:46:31,230:INFO:Random Forest Regressor Imported successfully
2023-07-06 16:46:31,234:INFO:Starting cross validation
2023-07-06 16:46:31,235:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:31,800:INFO:Calculating mean and std
2023-07-06 16:46:31,801:INFO:Creating metrics dataframe
2023-07-06 16:46:31,851:INFO:Uploading results into container
2023-07-06 16:46:31,852:INFO:Uploading model into container now
2023-07-06 16:46:31,852:INFO:_master_model_container: 13
2023-07-06 16:46:31,852:INFO:_display_container: 2
2023-07-06 16:46:31,853:INFO:RandomForestRegressor(n_jobs=-1, random_state=8270)
2023-07-06 16:46:31,853:INFO:create_model() successfully completed......................................
2023-07-06 16:46:32,012:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:32,012:INFO:Creating metrics dataframe
2023-07-06 16:46:32,022:INFO:Initializing Extra Trees Regressor
2023-07-06 16:46:32,022:INFO:Total runtime is 0.11233168045679727 minutes
2023-07-06 16:46:32,025:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:32,025:INFO:Initializing create_model()
2023-07-06 16:46:32,025:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6c9a30>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:32,025:INFO:Checking exceptions
2023-07-06 16:46:32,025:INFO:Importing libraries
2023-07-06 16:46:32,025:INFO:Copying training dataset
2023-07-06 16:46:32,031:INFO:Defining folds
2023-07-06 16:46:32,031:INFO:Declaring metric variables
2023-07-06 16:46:32,034:INFO:Importing untrained model
2023-07-06 16:46:32,036:INFO:Extra Trees Regressor Imported successfully
2023-07-06 16:46:32,041:INFO:Starting cross validation
2023-07-06 16:46:32,042:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:32,557:INFO:Calculating mean and std
2023-07-06 16:46:32,559:INFO:Creating metrics dataframe
2023-07-06 16:46:32,625:INFO:Uploading results into container
2023-07-06 16:46:32,625:INFO:Uploading model into container now
2023-07-06 16:46:32,626:INFO:_master_model_container: 14
2023-07-06 16:46:32,626:INFO:_display_container: 2
2023-07-06 16:46:32,627:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8270)
2023-07-06 16:46:32,627:INFO:create_model() successfully completed......................................
2023-07-06 16:46:32,790:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:32,790:INFO:Creating metrics dataframe
2023-07-06 16:46:32,800:INFO:Initializing AdaBoost Regressor
2023-07-06 16:46:32,800:INFO:Total runtime is 0.12530277172724405 minutes
2023-07-06 16:46:32,803:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:32,804:INFO:Initializing create_model()
2023-07-06 16:46:32,804:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6c9a30>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:32,804:INFO:Checking exceptions
2023-07-06 16:46:32,804:INFO:Importing libraries
2023-07-06 16:46:32,804:INFO:Copying training dataset
2023-07-06 16:46:32,807:INFO:Defining folds
2023-07-06 16:46:32,807:INFO:Declaring metric variables
2023-07-06 16:46:32,810:INFO:Importing untrained model
2023-07-06 16:46:32,813:INFO:AdaBoost Regressor Imported successfully
2023-07-06 16:46:32,818:INFO:Starting cross validation
2023-07-06 16:46:32,818:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:33,243:INFO:Calculating mean and std
2023-07-06 16:46:33,244:INFO:Creating metrics dataframe
2023-07-06 16:46:33,300:INFO:Uploading results into container
2023-07-06 16:46:33,301:INFO:Uploading model into container now
2023-07-06 16:46:33,301:INFO:_master_model_container: 15
2023-07-06 16:46:33,301:INFO:_display_container: 2
2023-07-06 16:46:33,302:INFO:AdaBoostRegressor(random_state=8270)
2023-07-06 16:46:33,302:INFO:create_model() successfully completed......................................
2023-07-06 16:46:33,468:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:33,468:INFO:Creating metrics dataframe
2023-07-06 16:46:33,479:INFO:Initializing Gradient Boosting Regressor
2023-07-06 16:46:33,479:INFO:Total runtime is 0.13660932779312132 minutes
2023-07-06 16:46:33,481:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:33,482:INFO:Initializing create_model()
2023-07-06 16:46:33,482:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6c9a30>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:33,482:INFO:Checking exceptions
2023-07-06 16:46:33,482:INFO:Importing libraries
2023-07-06 16:46:33,482:INFO:Copying training dataset
2023-07-06 16:46:33,485:INFO:Defining folds
2023-07-06 16:46:33,486:INFO:Declaring metric variables
2023-07-06 16:46:33,488:INFO:Importing untrained model
2023-07-06 16:46:33,491:INFO:Gradient Boosting Regressor Imported successfully
2023-07-06 16:46:33,496:INFO:Starting cross validation
2023-07-06 16:46:33,497:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:34,173:INFO:Calculating mean and std
2023-07-06 16:46:34,174:INFO:Creating metrics dataframe
2023-07-06 16:46:34,235:INFO:Uploading results into container
2023-07-06 16:46:34,236:INFO:Uploading model into container now
2023-07-06 16:46:34,236:INFO:_master_model_container: 16
2023-07-06 16:46:34,236:INFO:_display_container: 2
2023-07-06 16:46:34,237:INFO:GradientBoostingRegressor(random_state=8270)
2023-07-06 16:46:34,237:INFO:create_model() successfully completed......................................
2023-07-06 16:46:34,404:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:34,404:INFO:Creating metrics dataframe
2023-07-06 16:46:34,415:INFO:Initializing Light Gradient Boosting Machine
2023-07-06 16:46:34,415:INFO:Total runtime is 0.1522092580795288 minutes
2023-07-06 16:46:34,417:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:34,418:INFO:Initializing create_model()
2023-07-06 16:46:34,418:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6c9a30>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:34,418:INFO:Checking exceptions
2023-07-06 16:46:34,418:INFO:Importing libraries
2023-07-06 16:46:34,418:INFO:Copying training dataset
2023-07-06 16:46:34,421:INFO:Defining folds
2023-07-06 16:46:34,422:INFO:Declaring metric variables
2023-07-06 16:46:34,424:INFO:Importing untrained model
2023-07-06 16:46:34,427:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-06 16:46:34,432:INFO:Starting cross validation
2023-07-06 16:46:34,433:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:34,915:INFO:Calculating mean and std
2023-07-06 16:46:34,917:INFO:Creating metrics dataframe
2023-07-06 16:46:34,957:INFO:Uploading results into container
2023-07-06 16:46:34,958:INFO:Uploading model into container now
2023-07-06 16:46:34,958:INFO:_master_model_container: 17
2023-07-06 16:46:34,958:INFO:_display_container: 2
2023-07-06 16:46:34,959:INFO:LGBMRegressor(random_state=8270)
2023-07-06 16:46:34,959:INFO:create_model() successfully completed......................................
2023-07-06 16:46:35,123:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:35,123:INFO:Creating metrics dataframe
2023-07-06 16:46:35,134:INFO:Initializing Dummy Regressor
2023-07-06 16:46:35,134:INFO:Total runtime is 0.16419721047083535 minutes
2023-07-06 16:46:35,137:INFO:SubProcess create_model() called ==================================
2023-07-06 16:46:35,137:INFO:Initializing create_model()
2023-07-06 16:46:35,137:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6c9a30>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:35,137:INFO:Checking exceptions
2023-07-06 16:46:35,137:INFO:Importing libraries
2023-07-06 16:46:35,137:INFO:Copying training dataset
2023-07-06 16:46:35,140:INFO:Defining folds
2023-07-06 16:46:35,141:INFO:Declaring metric variables
2023-07-06 16:46:35,143:INFO:Importing untrained model
2023-07-06 16:46:35,146:INFO:Dummy Regressor Imported successfully
2023-07-06 16:46:35,151:INFO:Starting cross validation
2023-07-06 16:46:35,152:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:46:35,365:INFO:Calculating mean and std
2023-07-06 16:46:35,367:INFO:Creating metrics dataframe
2023-07-06 16:46:35,435:INFO:Uploading results into container
2023-07-06 16:46:35,436:INFO:Uploading model into container now
2023-07-06 16:46:35,437:INFO:_master_model_container: 18
2023-07-06 16:46:35,437:INFO:_display_container: 2
2023-07-06 16:46:35,437:INFO:DummyRegressor()
2023-07-06 16:46:35,437:INFO:create_model() successfully completed......................................
2023-07-06 16:46:35,621:INFO:SubProcess create_model() end ==================================
2023-07-06 16:46:35,621:INFO:Creating metrics dataframe
2023-07-06 16:46:35,639:INFO:Initializing create_model()
2023-07-06 16:46:35,639:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6c9a30>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=8270), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:46:35,639:INFO:Checking exceptions
2023-07-06 16:46:35,641:INFO:Importing libraries
2023-07-06 16:46:35,641:INFO:Copying training dataset
2023-07-06 16:46:35,644:INFO:Defining folds
2023-07-06 16:46:35,644:INFO:Declaring metric variables
2023-07-06 16:46:35,644:INFO:Importing untrained model
2023-07-06 16:46:35,644:INFO:Declaring custom model
2023-07-06 16:46:35,644:INFO:Extra Trees Regressor Imported successfully
2023-07-06 16:46:35,645:INFO:Cross validation set to False
2023-07-06 16:46:35,645:INFO:Fitting Model
2023-07-06 16:46:35,959:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8270)
2023-07-06 16:46:35,959:INFO:create_model() successfully completed......................................
2023-07-06 16:46:36,165:INFO:_master_model_container: 18
2023-07-06 16:46:36,165:INFO:_display_container: 2
2023-07-06 16:46:36,166:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8270)
2023-07-06 16:46:36,166:INFO:compare_models() successfully completed......................................
2023-07-06 16:46:58,015:INFO:PyCaret RegressionExperiment
2023-07-06 16:46:58,015:INFO:Logging name: reg-default-name
2023-07-06 16:46:58,015:INFO:ML Usecase: MLUsecase.REGRESSION
2023-07-06 16:46:58,015:INFO:version 3.0.4
2023-07-06 16:46:58,015:INFO:Initializing setup()
2023-07-06 16:46:58,015:INFO:self.USI: 0c1b
2023-07-06 16:46:58,015:INFO:self._variable_keys: {'pipeline', 'fold_groups_param', 'log_plots_param', '_ml_usecase', 'memory', 'transform_target_param', 'logging_param', 'y', 'USI', 'data', 'target_param', 'html_param', 'fold_generator', 'X', 'n_jobs_param', 'X_test', 'y_test', 'exp_id', 'X_train', 'exp_name_log', 'gpu_n_jobs_param', 'seed', 'idx', 'gpu_param', 'y_train', '_available_plots', 'fold_shuffle_param'}
2023-07-06 16:46:58,015:INFO:Checking environment
2023-07-06 16:46:58,015:INFO:python_version: 3.9.16
2023-07-06 16:46:58,015:INFO:python_build: ('main', 'Feb  1 2023 21:39:03')
2023-07-06 16:46:58,015:INFO:machine: x86_64
2023-07-06 16:46:58,015:INFO:platform: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 16:46:58,015:INFO:Memory: svmem(total=540878073856, available=522333556736, percent=3.4, used=15025258496, free=2841677824, active=32354275328, inactive=489220489216, buffers=2722115584, cached=520289021952, shared=22061056, slab=14543122432)
2023-07-06 16:46:58,017:INFO:Physical Core: 64
2023-07-06 16:46:58,017:INFO:Logical Core: 64
2023-07-06 16:46:58,017:INFO:Checking libraries
2023-07-06 16:46:58,017:INFO:System:
2023-07-06 16:46:58,017:INFO:    python: 3.9.16 | packaged by conda-forge | (main, Feb  1 2023, 21:39:03)  [GCC 11.3.0]
2023-07-06 16:46:58,017:INFO:executable: /home/mirlab/anaconda3/envs/misc/bin/python
2023-07-06 16:46:58,017:INFO:   machine: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 16:46:58,017:INFO:PyCaret required dependencies:
2023-07-06 16:46:58,017:INFO:                 pip: 23.1.2
2023-07-06 16:46:58,017:INFO:          setuptools: 67.7.2
2023-07-06 16:46:58,017:INFO:             pycaret: 3.0.4
2023-07-06 16:46:58,017:INFO:             IPython: 8.14.0
2023-07-06 16:46:58,017:INFO:          ipywidgets: 8.0.7
2023-07-06 16:46:58,017:INFO:                tqdm: 4.64.1
2023-07-06 16:46:58,017:INFO:               numpy: 1.23.5
2023-07-06 16:46:58,017:INFO:              pandas: 1.5.3
2023-07-06 16:46:58,017:INFO:              jinja2: 3.1.2
2023-07-06 16:46:58,017:INFO:               scipy: 1.10.1
2023-07-06 16:46:58,017:INFO:              joblib: 1.2.0
2023-07-06 16:46:58,017:INFO:             sklearn: 1.2.2
2023-07-06 16:46:58,017:INFO:                pyod: 1.1.0
2023-07-06 16:46:58,017:INFO:            imblearn: 0.10.1
2023-07-06 16:46:58,017:INFO:   category_encoders: 2.6.1
2023-07-06 16:46:58,017:INFO:            lightgbm: 3.3.5
2023-07-06 16:46:58,017:INFO:               numba: 0.57.0
2023-07-06 16:46:58,017:INFO:            requests: 2.28.1
2023-07-06 16:46:58,017:INFO:          matplotlib: 3.7.1
2023-07-06 16:46:58,018:INFO:          scikitplot: 0.3.7
2023-07-06 16:46:58,018:INFO:         yellowbrick: 1.5
2023-07-06 16:46:58,018:INFO:              plotly: 5.15.0
2023-07-06 16:46:58,018:INFO:    plotly-resampler: Not installed
2023-07-06 16:46:58,018:INFO:             kaleido: 0.2.1
2023-07-06 16:46:58,018:INFO:           schemdraw: 0.15
2023-07-06 16:46:58,018:INFO:         statsmodels: 0.14.0
2023-07-06 16:46:58,018:INFO:              sktime: 0.20.0
2023-07-06 16:46:58,018:INFO:               tbats: 1.1.3
2023-07-06 16:46:58,018:INFO:            pmdarima: 2.0.3
2023-07-06 16:46:58,018:INFO:              psutil: 5.9.5
2023-07-06 16:46:58,018:INFO:          markupsafe: 2.1.2
2023-07-06 16:46:58,018:INFO:             pickle5: Not installed
2023-07-06 16:46:58,018:INFO:         cloudpickle: 2.2.1
2023-07-06 16:46:58,018:INFO:         deprecation: 2.1.0
2023-07-06 16:46:58,018:INFO:              xxhash: 3.2.0
2023-07-06 16:46:58,018:INFO:           wurlitzer: 3.0.3
2023-07-06 16:46:58,018:INFO:PyCaret optional dependencies:
2023-07-06 16:46:58,018:INFO:                shap: Not installed
2023-07-06 16:46:58,018:INFO:           interpret: Not installed
2023-07-06 16:46:58,018:INFO:                umap: Not installed
2023-07-06 16:46:58,018:INFO:    pandas_profiling: 3.6.6
2023-07-06 16:46:58,018:INFO:  explainerdashboard: Not installed
2023-07-06 16:46:58,018:INFO:             autoviz: Not installed
2023-07-06 16:46:58,018:INFO:           fairlearn: Not installed
2023-07-06 16:46:58,018:INFO:          deepchecks: Not installed
2023-07-06 16:46:58,018:INFO:             xgboost: Not installed
2023-07-06 16:46:58,018:INFO:            catboost: Not installed
2023-07-06 16:46:58,018:INFO:              kmodes: Not installed
2023-07-06 16:46:58,018:INFO:             mlxtend: Not installed
2023-07-06 16:46:58,018:INFO:       statsforecast: Not installed
2023-07-06 16:46:58,018:INFO:        tune_sklearn: Not installed
2023-07-06 16:46:58,018:INFO:                 ray: Not installed
2023-07-06 16:46:58,018:INFO:            hyperopt: Not installed
2023-07-06 16:46:58,018:INFO:              optuna: 3.1.1
2023-07-06 16:46:58,018:INFO:               skopt: Not installed
2023-07-06 16:46:58,018:INFO:              mlflow: Not installed
2023-07-06 16:46:58,018:INFO:              gradio: Not installed
2023-07-06 16:46:58,018:INFO:             fastapi: Not installed
2023-07-06 16:46:58,018:INFO:             uvicorn: Not installed
2023-07-06 16:46:58,018:INFO:              m2cgen: Not installed
2023-07-06 16:46:58,018:INFO:           evidently: Not installed
2023-07-06 16:46:58,018:INFO:               fugue: Not installed
2023-07-06 16:46:58,018:INFO:           streamlit: 1.24.0
2023-07-06 16:46:58,018:INFO:             prophet: Not installed
2023-07-06 16:46:58,018:INFO:None
2023-07-06 16:46:58,018:INFO:Set up data.
2023-07-06 16:46:58,101:INFO:Set up train/test split.
2023-07-06 16:46:58,118:INFO:Set up index.
2023-07-06 16:46:58,121:INFO:Set up folding strategy.
2023-07-06 16:46:58,121:INFO:Assigning column types.
2023-07-06 16:46:58,131:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-06 16:46:58,132:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 16:46:58,137:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:46:58,141:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:46:58,216:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:58,264:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:58,264:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:58,264:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:58,265:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 16:46:58,269:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:46:58,275:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:46:58,349:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:58,396:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:58,397:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:58,397:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:58,397:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-07-06 16:46:58,402:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:46:58,407:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:46:58,481:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:58,529:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:58,530:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:58,530:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:58,535:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:46:58,540:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:46:58,614:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:58,662:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:58,662:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:58,662:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:58,663:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-07-06 16:46:58,672:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:46:58,747:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:58,794:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:58,795:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:58,795:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:58,805:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:46:58,879:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:58,932:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:58,933:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:58,933:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:58,933:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-07-06 16:46:59,018:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:59,066:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:59,066:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:59,066:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:59,151:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:59,198:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:46:59,198:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:59,198:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:59,199:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-06 16:46:59,283:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:59,330:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:59,331:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:59,415:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:46:59,463:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:59,463:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:59,464:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-07-06 16:46:59,596:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:59,596:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:59,729:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:59,729:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:46:59,731:INFO:Preparing preprocessing pipeline...
2023-07-06 16:46:59,731:INFO:Set up simple imputation.
2023-07-06 16:46:59,732:INFO:Set up column name cleaning.
2023-07-06 16:46:59,776:INFO:Finished creating preprocessing pipeline.
2023-07-06 16:46:59,780:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['PTemp_C_Max', 'AirTC_Avg', 'RH',
                                             'WS_ms_Avg', 'WindDir', 'TPM1',
                                             'TPM2.5', 'TPM10', 'GeffRef',
                                             'TempRef', 'Daylight'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-07-06 16:46:59,780:INFO:Creating final display dataframe.
2023-07-06 16:46:59,922:INFO:Setup _display_container:                     Description             Value
0                    Session id              3078
1                        Target       FT_Voltage1
2                   Target type        Regression
3           Original data shape      (144000, 12)
4        Transformed data shape      (144000, 12)
5   Transformed train set shape      (100800, 12)
6    Transformed test set shape       (43200, 12)
7              Numeric features                11
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              0c1b
2023-07-06 16:47:00,068:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:47:00,069:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:47:00,201:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:47:00,201:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:47:00,202:INFO:setup() successfully completed in 2.2s...............
2023-07-06 16:47:00,202:INFO:Initializing compare_models()
2023-07-06 16:47:00,202:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeadde50>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f25aeadde50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-07-06 16:47:00,202:INFO:Checking exceptions
2023-07-06 16:47:00,211:INFO:Preparing display monitor
2023-07-06 16:47:00,230:INFO:Initializing Linear Regression
2023-07-06 16:47:00,230:INFO:Total runtime is 1.720587412516276e-06 minutes
2023-07-06 16:47:00,233:INFO:SubProcess create_model() called ==================================
2023-07-06 16:47:00,233:INFO:Initializing create_model()
2023-07-06 16:47:00,233:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeadde50>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27199235e0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:47:00,233:INFO:Checking exceptions
2023-07-06 16:47:00,233:INFO:Importing libraries
2023-07-06 16:47:00,233:INFO:Copying training dataset
2023-07-06 16:47:00,257:INFO:Defining folds
2023-07-06 16:47:00,258:INFO:Declaring metric variables
2023-07-06 16:47:00,261:INFO:Importing untrained model
2023-07-06 16:47:00,264:INFO:Linear Regression Imported successfully
2023-07-06 16:47:00,269:INFO:Starting cross validation
2023-07-06 16:47:00,270:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:47:00,565:INFO:Calculating mean and std
2023-07-06 16:47:00,566:INFO:Creating metrics dataframe
2023-07-06 16:47:00,625:INFO:Uploading results into container
2023-07-06 16:47:00,626:INFO:Uploading model into container now
2023-07-06 16:47:00,627:INFO:_master_model_container: 1
2023-07-06 16:47:00,627:INFO:_display_container: 2
2023-07-06 16:47:00,627:INFO:LinearRegression(n_jobs=-1)
2023-07-06 16:47:00,627:INFO:create_model() successfully completed......................................
2023-07-06 16:47:00,841:INFO:SubProcess create_model() end ==================================
2023-07-06 16:47:00,841:INFO:Creating metrics dataframe
2023-07-06 16:47:00,849:INFO:Initializing Lasso Regression
2023-07-06 16:47:00,849:INFO:Total runtime is 0.010317766666412353 minutes
2023-07-06 16:47:00,852:INFO:SubProcess create_model() called ==================================
2023-07-06 16:47:00,852:INFO:Initializing create_model()
2023-07-06 16:47:00,852:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeadde50>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27199235e0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:47:00,852:INFO:Checking exceptions
2023-07-06 16:47:00,853:INFO:Importing libraries
2023-07-06 16:47:00,853:INFO:Copying training dataset
2023-07-06 16:47:00,877:INFO:Defining folds
2023-07-06 16:47:00,877:INFO:Declaring metric variables
2023-07-06 16:47:00,881:INFO:Importing untrained model
2023-07-06 16:47:00,883:INFO:Lasso Regression Imported successfully
2023-07-06 16:47:00,888:INFO:Starting cross validation
2023-07-06 16:47:00,890:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:47:01,289:INFO:Calculating mean and std
2023-07-06 16:47:01,291:INFO:Creating metrics dataframe
2023-07-06 16:47:01,320:INFO:Uploading results into container
2023-07-06 16:47:01,321:INFO:Uploading model into container now
2023-07-06 16:47:01,321:INFO:_master_model_container: 2
2023-07-06 16:47:01,322:INFO:_display_container: 2
2023-07-06 16:47:01,322:INFO:Lasso(random_state=3078)
2023-07-06 16:47:01,322:INFO:create_model() successfully completed......................................
2023-07-06 16:47:01,496:INFO:SubProcess create_model() end ==================================
2023-07-06 16:47:01,496:INFO:Creating metrics dataframe
2023-07-06 16:47:01,504:INFO:Initializing Ridge Regression
2023-07-06 16:47:01,505:INFO:Total runtime is 0.021241684754689533 minutes
2023-07-06 16:47:01,507:INFO:SubProcess create_model() called ==================================
2023-07-06 16:47:01,508:INFO:Initializing create_model()
2023-07-06 16:47:01,508:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeadde50>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27199235e0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:47:01,508:INFO:Checking exceptions
2023-07-06 16:47:01,508:INFO:Importing libraries
2023-07-06 16:47:01,508:INFO:Copying training dataset
2023-07-06 16:47:01,533:INFO:Defining folds
2023-07-06 16:47:01,534:INFO:Declaring metric variables
2023-07-06 16:47:01,537:INFO:Importing untrained model
2023-07-06 16:47:01,540:INFO:Ridge Regression Imported successfully
2023-07-06 16:47:01,545:INFO:Starting cross validation
2023-07-06 16:47:01,546:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:47:01,838:INFO:Calculating mean and std
2023-07-06 16:47:01,841:INFO:Creating metrics dataframe
2023-07-06 16:47:01,899:INFO:Uploading results into container
2023-07-06 16:47:01,900:INFO:Uploading model into container now
2023-07-06 16:47:01,901:INFO:_master_model_container: 3
2023-07-06 16:47:01,901:INFO:_display_container: 2
2023-07-06 16:47:01,901:INFO:Ridge(random_state=3078)
2023-07-06 16:47:01,901:INFO:create_model() successfully completed......................................
2023-07-06 16:47:02,106:INFO:SubProcess create_model() end ==================================
2023-07-06 16:47:02,107:INFO:Creating metrics dataframe
2023-07-06 16:47:02,115:INFO:Initializing Elastic Net
2023-07-06 16:47:02,115:INFO:Total runtime is 0.03142237663269043 minutes
2023-07-06 16:47:02,118:INFO:SubProcess create_model() called ==================================
2023-07-06 16:47:02,118:INFO:Initializing create_model()
2023-07-06 16:47:02,119:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeadde50>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27199235e0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:47:02,119:INFO:Checking exceptions
2023-07-06 16:47:02,119:INFO:Importing libraries
2023-07-06 16:47:02,119:INFO:Copying training dataset
2023-07-06 16:47:02,145:INFO:Defining folds
2023-07-06 16:47:02,146:INFO:Declaring metric variables
2023-07-06 16:47:02,149:INFO:Importing untrained model
2023-07-06 16:47:02,152:INFO:Elastic Net Imported successfully
2023-07-06 16:47:02,157:INFO:Starting cross validation
2023-07-06 16:47:02,158:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:47:02,536:INFO:Calculating mean and std
2023-07-06 16:47:02,538:INFO:Creating metrics dataframe
2023-07-06 16:47:02,565:INFO:Uploading results into container
2023-07-06 16:47:02,566:INFO:Uploading model into container now
2023-07-06 16:47:02,567:INFO:_master_model_container: 4
2023-07-06 16:47:02,567:INFO:_display_container: 2
2023-07-06 16:47:02,567:INFO:ElasticNet(random_state=3078)
2023-07-06 16:47:02,567:INFO:create_model() successfully completed......................................
2023-07-06 16:47:02,733:INFO:SubProcess create_model() end ==================================
2023-07-06 16:47:02,733:INFO:Creating metrics dataframe
2023-07-06 16:47:02,741:INFO:Initializing Least Angle Regression
2023-07-06 16:47:02,742:INFO:Total runtime is 0.04185941219329834 minutes
2023-07-06 16:47:02,744:INFO:SubProcess create_model() called ==================================
2023-07-06 16:47:02,745:INFO:Initializing create_model()
2023-07-06 16:47:02,745:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeadde50>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27199235e0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:47:02,745:INFO:Checking exceptions
2023-07-06 16:47:02,745:INFO:Importing libraries
2023-07-06 16:47:02,745:INFO:Copying training dataset
2023-07-06 16:47:02,769:INFO:Defining folds
2023-07-06 16:47:02,770:INFO:Declaring metric variables
2023-07-06 16:47:02,773:INFO:Importing untrained model
2023-07-06 16:47:02,776:INFO:Least Angle Regression Imported successfully
2023-07-06 16:47:02,781:INFO:Starting cross validation
2023-07-06 16:47:02,782:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:47:03,144:INFO:Calculating mean and std
2023-07-06 16:47:03,145:INFO:Creating metrics dataframe
2023-07-06 16:47:03,172:INFO:Uploading results into container
2023-07-06 16:47:03,173:INFO:Uploading model into container now
2023-07-06 16:47:03,173:INFO:_master_model_container: 5
2023-07-06 16:47:03,173:INFO:_display_container: 2
2023-07-06 16:47:03,174:INFO:Lars(random_state=3078)
2023-07-06 16:47:03,174:INFO:create_model() successfully completed......................................
2023-07-06 16:47:03,333:INFO:SubProcess create_model() end ==================================
2023-07-06 16:47:03,333:INFO:Creating metrics dataframe
2023-07-06 16:47:03,342:INFO:Initializing Lasso Least Angle Regression
2023-07-06 16:47:03,342:INFO:Total runtime is 0.05186547835667928 minutes
2023-07-06 16:47:03,345:INFO:SubProcess create_model() called ==================================
2023-07-06 16:47:03,345:INFO:Initializing create_model()
2023-07-06 16:47:03,345:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeadde50>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27199235e0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:47:03,345:INFO:Checking exceptions
2023-07-06 16:47:03,345:INFO:Importing libraries
2023-07-06 16:47:03,345:INFO:Copying training dataset
2023-07-06 16:47:03,369:INFO:Defining folds
2023-07-06 16:47:03,370:INFO:Declaring metric variables
2023-07-06 16:47:03,373:INFO:Importing untrained model
2023-07-06 16:47:03,376:INFO:Lasso Least Angle Regression Imported successfully
2023-07-06 16:47:03,381:INFO:Starting cross validation
2023-07-06 16:47:03,382:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:47:03,650:INFO:Calculating mean and std
2023-07-06 16:47:03,652:INFO:Creating metrics dataframe
2023-07-06 16:47:03,712:INFO:Uploading results into container
2023-07-06 16:47:03,713:INFO:Uploading model into container now
2023-07-06 16:47:03,713:INFO:_master_model_container: 6
2023-07-06 16:47:03,713:INFO:_display_container: 2
2023-07-06 16:47:03,714:INFO:LassoLars(random_state=3078)
2023-07-06 16:47:03,714:INFO:create_model() successfully completed......................................
2023-07-06 16:47:03,872:INFO:SubProcess create_model() end ==================================
2023-07-06 16:47:03,872:INFO:Creating metrics dataframe
2023-07-06 16:47:03,881:INFO:Initializing Orthogonal Matching Pursuit
2023-07-06 16:47:03,881:INFO:Total runtime is 0.06085573434829712 minutes
2023-07-06 16:47:03,884:INFO:SubProcess create_model() called ==================================
2023-07-06 16:47:03,884:INFO:Initializing create_model()
2023-07-06 16:47:03,885:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeadde50>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27199235e0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:47:03,885:INFO:Checking exceptions
2023-07-06 16:47:03,885:INFO:Importing libraries
2023-07-06 16:47:03,885:INFO:Copying training dataset
2023-07-06 16:47:03,909:INFO:Defining folds
2023-07-06 16:47:03,910:INFO:Declaring metric variables
2023-07-06 16:47:03,913:INFO:Importing untrained model
2023-07-06 16:47:03,916:INFO:Orthogonal Matching Pursuit Imported successfully
2023-07-06 16:47:03,921:INFO:Starting cross validation
2023-07-06 16:47:03,922:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:47:04,283:INFO:Calculating mean and std
2023-07-06 16:47:04,285:INFO:Creating metrics dataframe
2023-07-06 16:47:04,313:INFO:Uploading results into container
2023-07-06 16:47:04,314:INFO:Uploading model into container now
2023-07-06 16:47:04,315:INFO:_master_model_container: 7
2023-07-06 16:47:04,315:INFO:_display_container: 2
2023-07-06 16:47:04,315:INFO:OrthogonalMatchingPursuit()
2023-07-06 16:47:04,315:INFO:create_model() successfully completed......................................
2023-07-06 16:47:04,489:INFO:SubProcess create_model() end ==================================
2023-07-06 16:47:04,489:INFO:Creating metrics dataframe
2023-07-06 16:47:04,498:INFO:Initializing Bayesian Ridge
2023-07-06 16:47:04,498:INFO:Total runtime is 0.0711344043413798 minutes
2023-07-06 16:47:04,501:INFO:SubProcess create_model() called ==================================
2023-07-06 16:47:04,501:INFO:Initializing create_model()
2023-07-06 16:47:04,501:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeadde50>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27199235e0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:47:04,501:INFO:Checking exceptions
2023-07-06 16:47:04,501:INFO:Importing libraries
2023-07-06 16:47:04,501:INFO:Copying training dataset
2023-07-06 16:47:04,528:INFO:Defining folds
2023-07-06 16:47:04,528:INFO:Declaring metric variables
2023-07-06 16:47:04,532:INFO:Importing untrained model
2023-07-06 16:47:04,534:INFO:Bayesian Ridge Imported successfully
2023-07-06 16:47:04,539:INFO:Starting cross validation
2023-07-06 16:47:04,540:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:47:04,815:INFO:Calculating mean and std
2023-07-06 16:47:04,817:INFO:Creating metrics dataframe
2023-07-06 16:47:04,888:INFO:Uploading results into container
2023-07-06 16:47:04,889:INFO:Uploading model into container now
2023-07-06 16:47:04,890:INFO:_master_model_container: 8
2023-07-06 16:47:04,890:INFO:_display_container: 2
2023-07-06 16:47:04,890:INFO:BayesianRidge()
2023-07-06 16:47:04,890:INFO:create_model() successfully completed......................................
2023-07-06 16:47:05,052:INFO:SubProcess create_model() end ==================================
2023-07-06 16:47:05,052:INFO:Creating metrics dataframe
2023-07-06 16:47:05,061:INFO:Initializing Passive Aggressive Regressor
2023-07-06 16:47:05,061:INFO:Total runtime is 0.08052376508712768 minutes
2023-07-06 16:47:05,064:INFO:SubProcess create_model() called ==================================
2023-07-06 16:47:05,064:INFO:Initializing create_model()
2023-07-06 16:47:05,065:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeadde50>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27199235e0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:47:05,065:INFO:Checking exceptions
2023-07-06 16:47:05,065:INFO:Importing libraries
2023-07-06 16:47:05,065:INFO:Copying training dataset
2023-07-06 16:47:05,090:INFO:Defining folds
2023-07-06 16:47:05,090:INFO:Declaring metric variables
2023-07-06 16:47:05,093:INFO:Importing untrained model
2023-07-06 16:47:05,096:INFO:Passive Aggressive Regressor Imported successfully
2023-07-06 16:47:05,101:INFO:Starting cross validation
2023-07-06 16:47:05,102:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:47:05,583:INFO:Calculating mean and std
2023-07-06 16:47:05,584:INFO:Creating metrics dataframe
2023-07-06 16:47:05,612:INFO:Uploading results into container
2023-07-06 16:47:05,612:INFO:Uploading model into container now
2023-07-06 16:47:05,613:INFO:_master_model_container: 9
2023-07-06 16:47:05,613:INFO:_display_container: 2
2023-07-06 16:47:05,613:INFO:PassiveAggressiveRegressor(random_state=3078)
2023-07-06 16:47:05,613:INFO:create_model() successfully completed......................................
2023-07-06 16:47:05,776:INFO:SubProcess create_model() end ==================================
2023-07-06 16:47:05,776:INFO:Creating metrics dataframe
2023-07-06 16:47:05,786:INFO:Initializing Huber Regressor
2023-07-06 16:47:05,786:INFO:Total runtime is 0.09259958267211914 minutes
2023-07-06 16:47:05,789:INFO:SubProcess create_model() called ==================================
2023-07-06 16:47:05,789:INFO:Initializing create_model()
2023-07-06 16:47:05,789:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeadde50>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27199235e0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:47:05,789:INFO:Checking exceptions
2023-07-06 16:47:05,789:INFO:Importing libraries
2023-07-06 16:47:05,789:INFO:Copying training dataset
2023-07-06 16:47:05,814:INFO:Defining folds
2023-07-06 16:47:05,815:INFO:Declaring metric variables
2023-07-06 16:47:05,818:INFO:Importing untrained model
2023-07-06 16:47:05,821:INFO:Huber Regressor Imported successfully
2023-07-06 16:47:05,826:INFO:Starting cross validation
2023-07-06 16:47:05,827:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:47:06,845:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:47:06,858:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:47:06,861:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:47:06,905:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:47:06,933:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:47:06,939:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:47:06,951:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:47:06,953:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:47:06,960:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:47:06,981:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:47:07,034:INFO:Calculating mean and std
2023-07-06 16:47:07,036:INFO:Creating metrics dataframe
2023-07-06 16:47:07,100:INFO:Uploading results into container
2023-07-06 16:47:07,101:INFO:Uploading model into container now
2023-07-06 16:47:07,102:INFO:_master_model_container: 10
2023-07-06 16:47:07,102:INFO:_display_container: 2
2023-07-06 16:47:07,102:INFO:HuberRegressor()
2023-07-06 16:47:07,102:INFO:create_model() successfully completed......................................
2023-07-06 16:47:07,262:INFO:SubProcess create_model() end ==================================
2023-07-06 16:47:07,262:INFO:Creating metrics dataframe
2023-07-06 16:47:07,272:INFO:Initializing K Neighbors Regressor
2023-07-06 16:47:07,272:INFO:Total runtime is 0.11736333767573039 minutes
2023-07-06 16:47:07,274:INFO:SubProcess create_model() called ==================================
2023-07-06 16:47:07,275:INFO:Initializing create_model()
2023-07-06 16:47:07,275:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeadde50>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27199235e0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:47:07,275:INFO:Checking exceptions
2023-07-06 16:47:07,275:INFO:Importing libraries
2023-07-06 16:47:07,275:INFO:Copying training dataset
2023-07-06 16:47:07,300:INFO:Defining folds
2023-07-06 16:47:07,300:INFO:Declaring metric variables
2023-07-06 16:47:07,304:INFO:Importing untrained model
2023-07-06 16:47:07,306:INFO:K Neighbors Regressor Imported successfully
2023-07-06 16:47:07,311:INFO:Starting cross validation
2023-07-06 16:47:07,312:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:47:08,040:INFO:Calculating mean and std
2023-07-06 16:47:08,041:INFO:Creating metrics dataframe
2023-07-06 16:47:08,100:INFO:Uploading results into container
2023-07-06 16:47:08,101:INFO:Uploading model into container now
2023-07-06 16:47:08,102:INFO:_master_model_container: 11
2023-07-06 16:47:08,102:INFO:_display_container: 2
2023-07-06 16:47:08,102:INFO:KNeighborsRegressor(n_jobs=-1)
2023-07-06 16:47:08,102:INFO:create_model() successfully completed......................................
2023-07-06 16:47:08,291:INFO:SubProcess create_model() end ==================================
2023-07-06 16:47:08,291:INFO:Creating metrics dataframe
2023-07-06 16:47:08,302:INFO:Initializing Decision Tree Regressor
2023-07-06 16:47:08,302:INFO:Total runtime is 0.13453152577082317 minutes
2023-07-06 16:47:08,305:INFO:SubProcess create_model() called ==================================
2023-07-06 16:47:08,306:INFO:Initializing create_model()
2023-07-06 16:47:08,306:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeadde50>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27199235e0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:47:08,306:INFO:Checking exceptions
2023-07-06 16:47:08,306:INFO:Importing libraries
2023-07-06 16:47:08,306:INFO:Copying training dataset
2023-07-06 16:47:08,332:INFO:Defining folds
2023-07-06 16:47:08,332:INFO:Declaring metric variables
2023-07-06 16:47:08,336:INFO:Importing untrained model
2023-07-06 16:47:08,338:INFO:Decision Tree Regressor Imported successfully
2023-07-06 16:47:08,343:INFO:Starting cross validation
2023-07-06 16:47:08,344:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:47:09,570:INFO:Calculating mean and std
2023-07-06 16:47:09,572:INFO:Creating metrics dataframe
2023-07-06 16:47:09,602:INFO:Uploading results into container
2023-07-06 16:47:09,603:INFO:Uploading model into container now
2023-07-06 16:47:09,603:INFO:_master_model_container: 12
2023-07-06 16:47:09,603:INFO:_display_container: 2
2023-07-06 16:47:09,604:INFO:DecisionTreeRegressor(random_state=3078)
2023-07-06 16:47:09,604:INFO:create_model() successfully completed......................................
2023-07-06 16:47:09,773:INFO:SubProcess create_model() end ==================================
2023-07-06 16:47:09,773:INFO:Creating metrics dataframe
2023-07-06 16:47:09,783:INFO:Initializing Random Forest Regressor
2023-07-06 16:47:09,783:INFO:Total runtime is 0.1592174768447876 minutes
2023-07-06 16:47:09,786:INFO:SubProcess create_model() called ==================================
2023-07-06 16:47:09,786:INFO:Initializing create_model()
2023-07-06 16:47:09,786:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeadde50>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27199235e0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:47:09,786:INFO:Checking exceptions
2023-07-06 16:47:09,786:INFO:Importing libraries
2023-07-06 16:47:09,786:INFO:Copying training dataset
2023-07-06 16:47:09,811:INFO:Defining folds
2023-07-06 16:47:09,812:INFO:Declaring metric variables
2023-07-06 16:47:09,815:INFO:Importing untrained model
2023-07-06 16:47:09,818:INFO:Random Forest Regressor Imported successfully
2023-07-06 16:47:09,823:INFO:Starting cross validation
2023-07-06 16:47:09,824:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:47:21,205:INFO:Calculating mean and std
2023-07-06 16:47:21,207:INFO:Creating metrics dataframe
2023-07-06 16:47:21,241:INFO:Uploading results into container
2023-07-06 16:47:21,241:INFO:Uploading model into container now
2023-07-06 16:47:21,242:INFO:_master_model_container: 13
2023-07-06 16:47:21,242:INFO:_display_container: 2
2023-07-06 16:47:21,243:INFO:RandomForestRegressor(n_jobs=-1, random_state=3078)
2023-07-06 16:47:21,243:INFO:create_model() successfully completed......................................
2023-07-06 16:47:21,687:INFO:SubProcess create_model() end ==================================
2023-07-06 16:47:21,688:INFO:Creating metrics dataframe
2023-07-06 16:47:21,701:INFO:Initializing Extra Trees Regressor
2023-07-06 16:47:21,701:INFO:Total runtime is 0.3578540762265523 minutes
2023-07-06 16:47:21,704:INFO:SubProcess create_model() called ==================================
2023-07-06 16:47:21,704:INFO:Initializing create_model()
2023-07-06 16:47:21,704:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeadde50>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27199235e0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:47:21,705:INFO:Checking exceptions
2023-07-06 16:47:21,705:INFO:Importing libraries
2023-07-06 16:47:21,705:INFO:Copying training dataset
2023-07-06 16:47:21,730:INFO:Defining folds
2023-07-06 16:47:21,731:INFO:Declaring metric variables
2023-07-06 16:47:21,734:INFO:Importing untrained model
2023-07-06 16:47:21,737:INFO:Extra Trees Regressor Imported successfully
2023-07-06 16:47:21,742:INFO:Starting cross validation
2023-07-06 16:47:21,743:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:47:26,814:INFO:Calculating mean and std
2023-07-06 16:47:26,815:INFO:Creating metrics dataframe
2023-07-06 16:47:26,831:INFO:Uploading results into container
2023-07-06 16:47:26,832:INFO:Uploading model into container now
2023-07-06 16:47:26,832:INFO:_master_model_container: 14
2023-07-06 16:47:26,832:INFO:_display_container: 2
2023-07-06 16:47:26,832:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3078)
2023-07-06 16:47:26,832:INFO:create_model() successfully completed......................................
2023-07-06 16:47:26,999:INFO:SubProcess create_model() end ==================================
2023-07-06 16:47:27,000:INFO:Creating metrics dataframe
2023-07-06 16:47:27,010:INFO:Initializing AdaBoost Regressor
2023-07-06 16:47:27,010:INFO:Total runtime is 0.446338935693105 minutes
2023-07-06 16:47:27,013:INFO:SubProcess create_model() called ==================================
2023-07-06 16:47:27,014:INFO:Initializing create_model()
2023-07-06 16:47:27,014:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeadde50>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27199235e0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:47:27,014:INFO:Checking exceptions
2023-07-06 16:47:27,014:INFO:Importing libraries
2023-07-06 16:47:27,014:INFO:Copying training dataset
2023-07-06 16:47:27,039:INFO:Defining folds
2023-07-06 16:47:27,039:INFO:Declaring metric variables
2023-07-06 16:47:27,043:INFO:Importing untrained model
2023-07-06 16:47:27,045:INFO:AdaBoost Regressor Imported successfully
2023-07-06 16:47:27,050:INFO:Starting cross validation
2023-07-06 16:47:27,051:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:47:35,219:INFO:Calculating mean and std
2023-07-06 16:47:35,222:INFO:Creating metrics dataframe
2023-07-06 16:47:35,260:INFO:Uploading results into container
2023-07-06 16:47:35,261:INFO:Uploading model into container now
2023-07-06 16:47:35,261:INFO:_master_model_container: 15
2023-07-06 16:47:35,262:INFO:_display_container: 2
2023-07-06 16:47:35,262:INFO:AdaBoostRegressor(random_state=3078)
2023-07-06 16:47:35,262:INFO:create_model() successfully completed......................................
2023-07-06 16:47:35,466:INFO:SubProcess create_model() end ==================================
2023-07-06 16:47:35,467:INFO:Creating metrics dataframe
2023-07-06 16:47:35,484:INFO:Initializing Gradient Boosting Regressor
2023-07-06 16:47:35,484:INFO:Total runtime is 0.5875704209009806 minutes
2023-07-06 16:47:35,487:INFO:SubProcess create_model() called ==================================
2023-07-06 16:47:35,488:INFO:Initializing create_model()
2023-07-06 16:47:35,488:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeadde50>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27199235e0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:47:35,488:INFO:Checking exceptions
2023-07-06 16:47:35,488:INFO:Importing libraries
2023-07-06 16:47:35,488:INFO:Copying training dataset
2023-07-06 16:47:35,513:INFO:Defining folds
2023-07-06 16:47:35,514:INFO:Declaring metric variables
2023-07-06 16:47:35,517:INFO:Importing untrained model
2023-07-06 16:47:35,520:INFO:Gradient Boosting Regressor Imported successfully
2023-07-06 16:47:35,525:INFO:Starting cross validation
2023-07-06 16:47:35,526:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:48:00,436:INFO:Calculating mean and std
2023-07-06 16:48:00,438:INFO:Creating metrics dataframe
2023-07-06 16:48:00,474:INFO:Uploading results into container
2023-07-06 16:48:00,475:INFO:Uploading model into container now
2023-07-06 16:48:00,475:INFO:_master_model_container: 16
2023-07-06 16:48:00,476:INFO:_display_container: 2
2023-07-06 16:48:00,476:INFO:GradientBoostingRegressor(random_state=3078)
2023-07-06 16:48:00,476:INFO:create_model() successfully completed......................................
2023-07-06 16:48:00,685:INFO:SubProcess create_model() end ==================================
2023-07-06 16:48:00,686:INFO:Creating metrics dataframe
2023-07-06 16:48:00,697:INFO:Initializing Light Gradient Boosting Machine
2023-07-06 16:48:00,697:INFO:Total runtime is 1.0077777624130249 minutes
2023-07-06 16:48:00,700:INFO:SubProcess create_model() called ==================================
2023-07-06 16:48:00,700:INFO:Initializing create_model()
2023-07-06 16:48:00,700:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeadde50>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27199235e0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:48:00,700:INFO:Checking exceptions
2023-07-06 16:48:00,700:INFO:Importing libraries
2023-07-06 16:48:00,700:INFO:Copying training dataset
2023-07-06 16:48:00,722:INFO:Defining folds
2023-07-06 16:48:00,723:INFO:Declaring metric variables
2023-07-06 16:48:00,726:INFO:Importing untrained model
2023-07-06 16:48:00,729:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-06 16:48:00,734:INFO:Starting cross validation
2023-07-06 16:48:00,735:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:48:01,843:INFO:Calculating mean and std
2023-07-06 16:48:01,847:INFO:Creating metrics dataframe
2023-07-06 16:48:01,937:INFO:Uploading results into container
2023-07-06 16:48:01,938:INFO:Uploading model into container now
2023-07-06 16:48:01,938:INFO:_master_model_container: 17
2023-07-06 16:48:01,938:INFO:_display_container: 2
2023-07-06 16:48:01,939:INFO:LGBMRegressor(random_state=3078)
2023-07-06 16:48:01,939:INFO:create_model() successfully completed......................................
2023-07-06 16:48:02,142:INFO:SubProcess create_model() end ==================================
2023-07-06 16:48:02,142:INFO:Creating metrics dataframe
2023-07-06 16:48:02,153:INFO:Initializing Dummy Regressor
2023-07-06 16:48:02,153:INFO:Total runtime is 1.0320482850074768 minutes
2023-07-06 16:48:02,155:INFO:SubProcess create_model() called ==================================
2023-07-06 16:48:02,156:INFO:Initializing create_model()
2023-07-06 16:48:02,156:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeadde50>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27199235e0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:48:02,156:INFO:Checking exceptions
2023-07-06 16:48:02,156:INFO:Importing libraries
2023-07-06 16:48:02,156:INFO:Copying training dataset
2023-07-06 16:48:02,178:INFO:Defining folds
2023-07-06 16:48:02,178:INFO:Declaring metric variables
2023-07-06 16:48:02,181:INFO:Importing untrained model
2023-07-06 16:48:02,184:INFO:Dummy Regressor Imported successfully
2023-07-06 16:48:02,188:INFO:Starting cross validation
2023-07-06 16:48:02,189:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:48:02,557:INFO:Calculating mean and std
2023-07-06 16:48:02,559:INFO:Creating metrics dataframe
2023-07-06 16:48:02,594:INFO:Uploading results into container
2023-07-06 16:48:02,595:INFO:Uploading model into container now
2023-07-06 16:48:02,595:INFO:_master_model_container: 18
2023-07-06 16:48:02,595:INFO:_display_container: 2
2023-07-06 16:48:02,596:INFO:DummyRegressor()
2023-07-06 16:48:02,596:INFO:create_model() successfully completed......................................
2023-07-06 16:48:02,788:INFO:SubProcess create_model() end ==================================
2023-07-06 16:48:02,788:INFO:Creating metrics dataframe
2023-07-06 16:48:02,806:INFO:Initializing create_model()
2023-07-06 16:48:02,806:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeadde50>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=3078), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:48:02,806:INFO:Checking exceptions
2023-07-06 16:48:02,807:INFO:Importing libraries
2023-07-06 16:48:02,807:INFO:Copying training dataset
2023-07-06 16:48:02,828:INFO:Defining folds
2023-07-06 16:48:02,829:INFO:Declaring metric variables
2023-07-06 16:48:02,829:INFO:Importing untrained model
2023-07-06 16:48:02,829:INFO:Declaring custom model
2023-07-06 16:48:02,829:INFO:Extra Trees Regressor Imported successfully
2023-07-06 16:48:02,830:INFO:Cross validation set to False
2023-07-06 16:48:02,830:INFO:Fitting Model
2023-07-06 16:48:04,182:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3078)
2023-07-06 16:48:04,182:INFO:create_model() successfully completed......................................
2023-07-06 16:48:04,388:INFO:_master_model_container: 18
2023-07-06 16:48:04,388:INFO:_display_container: 2
2023-07-06 16:48:04,388:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3078)
2023-07-06 16:48:04,388:INFO:compare_models() successfully completed......................................
2023-07-06 16:48:04,485:INFO:PyCaret RegressionExperiment
2023-07-06 16:48:04,486:INFO:Logging name: reg-default-name
2023-07-06 16:48:04,486:INFO:ML Usecase: MLUsecase.REGRESSION
2023-07-06 16:48:04,486:INFO:version 3.0.4
2023-07-06 16:48:04,486:INFO:Initializing setup()
2023-07-06 16:48:04,486:INFO:self.USI: 6958
2023-07-06 16:48:04,486:INFO:self._variable_keys: {'pipeline', 'fold_groups_param', 'log_plots_param', '_ml_usecase', 'memory', 'transform_target_param', 'logging_param', 'y', 'USI', 'data', 'target_param', 'html_param', 'fold_generator', 'X', 'n_jobs_param', 'X_test', 'y_test', 'exp_id', 'X_train', 'exp_name_log', 'gpu_n_jobs_param', 'seed', 'idx', 'gpu_param', 'y_train', '_available_plots', 'fold_shuffle_param'}
2023-07-06 16:48:04,486:INFO:Checking environment
2023-07-06 16:48:04,486:INFO:python_version: 3.9.16
2023-07-06 16:48:04,486:INFO:python_build: ('main', 'Feb  1 2023 21:39:03')
2023-07-06 16:48:04,486:INFO:machine: x86_64
2023-07-06 16:48:04,486:INFO:platform: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 16:48:04,486:INFO:Memory: svmem(total=540878073856, available=521426698240, percent=3.6, used=15729803264, free=10860032000, active=31108296704, inactive=482321432576, buffers=2697584640, cached=511590653952, shared=22044672, slab=14368043008)
2023-07-06 16:48:04,488:INFO:Physical Core: 64
2023-07-06 16:48:04,488:INFO:Logical Core: 64
2023-07-06 16:48:04,488:INFO:Checking libraries
2023-07-06 16:48:04,488:INFO:System:
2023-07-06 16:48:04,488:INFO:    python: 3.9.16 | packaged by conda-forge | (main, Feb  1 2023, 21:39:03)  [GCC 11.3.0]
2023-07-06 16:48:04,488:INFO:executable: /home/mirlab/anaconda3/envs/misc/bin/python
2023-07-06 16:48:04,488:INFO:   machine: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 16:48:04,488:INFO:PyCaret required dependencies:
2023-07-06 16:48:04,488:INFO:                 pip: 23.1.2
2023-07-06 16:48:04,488:INFO:          setuptools: 67.7.2
2023-07-06 16:48:04,488:INFO:             pycaret: 3.0.4
2023-07-06 16:48:04,488:INFO:             IPython: 8.14.0
2023-07-06 16:48:04,488:INFO:          ipywidgets: 8.0.7
2023-07-06 16:48:04,488:INFO:                tqdm: 4.64.1
2023-07-06 16:48:04,488:INFO:               numpy: 1.23.5
2023-07-06 16:48:04,488:INFO:              pandas: 1.5.3
2023-07-06 16:48:04,488:INFO:              jinja2: 3.1.2
2023-07-06 16:48:04,488:INFO:               scipy: 1.10.1
2023-07-06 16:48:04,488:INFO:              joblib: 1.2.0
2023-07-06 16:48:04,488:INFO:             sklearn: 1.2.2
2023-07-06 16:48:04,488:INFO:                pyod: 1.1.0
2023-07-06 16:48:04,488:INFO:            imblearn: 0.10.1
2023-07-06 16:48:04,488:INFO:   category_encoders: 2.6.1
2023-07-06 16:48:04,488:INFO:            lightgbm: 3.3.5
2023-07-06 16:48:04,488:INFO:               numba: 0.57.0
2023-07-06 16:48:04,488:INFO:            requests: 2.28.1
2023-07-06 16:48:04,488:INFO:          matplotlib: 3.7.1
2023-07-06 16:48:04,488:INFO:          scikitplot: 0.3.7
2023-07-06 16:48:04,488:INFO:         yellowbrick: 1.5
2023-07-06 16:48:04,488:INFO:              plotly: 5.15.0
2023-07-06 16:48:04,488:INFO:    plotly-resampler: Not installed
2023-07-06 16:48:04,488:INFO:             kaleido: 0.2.1
2023-07-06 16:48:04,488:INFO:           schemdraw: 0.15
2023-07-06 16:48:04,488:INFO:         statsmodels: 0.14.0
2023-07-06 16:48:04,488:INFO:              sktime: 0.20.0
2023-07-06 16:48:04,488:INFO:               tbats: 1.1.3
2023-07-06 16:48:04,488:INFO:            pmdarima: 2.0.3
2023-07-06 16:48:04,488:INFO:              psutil: 5.9.5
2023-07-06 16:48:04,488:INFO:          markupsafe: 2.1.2
2023-07-06 16:48:04,488:INFO:             pickle5: Not installed
2023-07-06 16:48:04,488:INFO:         cloudpickle: 2.2.1
2023-07-06 16:48:04,489:INFO:         deprecation: 2.1.0
2023-07-06 16:48:04,489:INFO:              xxhash: 3.2.0
2023-07-06 16:48:04,489:INFO:           wurlitzer: 3.0.3
2023-07-06 16:48:04,489:INFO:PyCaret optional dependencies:
2023-07-06 16:48:04,489:INFO:                shap: Not installed
2023-07-06 16:48:04,489:INFO:           interpret: Not installed
2023-07-06 16:48:04,489:INFO:                umap: Not installed
2023-07-06 16:48:04,489:INFO:    pandas_profiling: 3.6.6
2023-07-06 16:48:04,489:INFO:  explainerdashboard: Not installed
2023-07-06 16:48:04,489:INFO:             autoviz: Not installed
2023-07-06 16:48:04,489:INFO:           fairlearn: Not installed
2023-07-06 16:48:04,489:INFO:          deepchecks: Not installed
2023-07-06 16:48:04,489:INFO:             xgboost: Not installed
2023-07-06 16:48:04,489:INFO:            catboost: Not installed
2023-07-06 16:48:04,489:INFO:              kmodes: Not installed
2023-07-06 16:48:04,489:INFO:             mlxtend: Not installed
2023-07-06 16:48:04,489:INFO:       statsforecast: Not installed
2023-07-06 16:48:04,489:INFO:        tune_sklearn: Not installed
2023-07-06 16:48:04,489:INFO:                 ray: Not installed
2023-07-06 16:48:04,489:INFO:            hyperopt: Not installed
2023-07-06 16:48:04,489:INFO:              optuna: 3.1.1
2023-07-06 16:48:04,489:INFO:               skopt: Not installed
2023-07-06 16:48:04,489:INFO:              mlflow: Not installed
2023-07-06 16:48:04,489:INFO:              gradio: Not installed
2023-07-06 16:48:04,489:INFO:             fastapi: Not installed
2023-07-06 16:48:04,489:INFO:             uvicorn: Not installed
2023-07-06 16:48:04,489:INFO:              m2cgen: Not installed
2023-07-06 16:48:04,489:INFO:           evidently: Not installed
2023-07-06 16:48:04,489:INFO:               fugue: Not installed
2023-07-06 16:48:04,489:INFO:           streamlit: 1.24.0
2023-07-06 16:48:04,489:INFO:             prophet: Not installed
2023-07-06 16:48:04,489:INFO:None
2023-07-06 16:48:04,489:INFO:Set up data.
2023-07-06 16:48:04,507:INFO:Set up train/test split.
2023-07-06 16:48:04,522:INFO:Set up index.
2023-07-06 16:48:04,525:INFO:Set up folding strategy.
2023-07-06 16:48:04,525:INFO:Assigning column types.
2023-07-06 16:48:04,534:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-06 16:48:04,534:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 16:48:04,539:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:48:04,544:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:48:04,617:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:48:04,665:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:48:04,665:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:48:04,665:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:48:04,666:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 16:48:04,670:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:48:04,676:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:48:04,749:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:48:04,796:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:48:04,797:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:48:04,797:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:48:04,797:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-07-06 16:48:04,802:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:48:04,807:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:48:04,880:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:48:04,935:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:48:04,936:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:48:04,936:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:48:04,941:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:48:04,946:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:48:05,019:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:48:05,066:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:48:05,067:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:48:05,067:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:48:05,067:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-07-06 16:48:05,077:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:48:05,150:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:48:05,198:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:48:05,198:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:48:05,199:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:48:05,208:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:48:05,286:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:48:05,334:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:48:05,335:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:48:05,335:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:48:05,335:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-07-06 16:48:05,418:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:48:05,466:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:48:05,466:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:48:05,467:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:48:05,549:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:48:05,596:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:48:05,597:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:48:05,597:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:48:05,597:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-06 16:48:05,681:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:48:05,729:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:48:05,730:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:48:05,812:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:48:05,860:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:48:05,860:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:48:05,861:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-07-06 16:48:05,991:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:48:05,991:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:48:06,127:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:48:06,128:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:48:06,129:INFO:Preparing preprocessing pipeline...
2023-07-06 16:48:06,129:INFO:Set up simple imputation.
2023-07-06 16:48:06,130:INFO:Set up column name cleaning.
2023-07-06 16:48:06,174:INFO:Finished creating preprocessing pipeline.
2023-07-06 16:48:06,178:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['PTemp_C_Max', 'AirTC_Avg', 'RH',
                                             'WS_ms_Avg', 'WindDir', 'TPM1',
                                             'TPM2.5', 'TPM10', 'GeffRef',
                                             'TempRef', 'Daylight'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-07-06 16:48:06,178:INFO:Creating final display dataframe.
2023-07-06 16:48:06,312:INFO:Setup _display_container:                     Description             Value
0                    Session id              6184
1                        Target       FT_Voltage2
2                   Target type        Regression
3           Original data shape      (144000, 12)
4        Transformed data shape      (144000, 12)
5   Transformed train set shape      (100800, 12)
6    Transformed test set shape       (43200, 12)
7              Numeric features                11
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              6958
2023-07-06 16:48:06,456:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:48:06,456:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:48:06,587:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:48:06,588:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:48:06,588:INFO:setup() successfully completed in 2.13s...............
2023-07-06 16:48:06,589:INFO:Initializing compare_models()
2023-07-06 16:48:06,589:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeae2070>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f25aeae2070>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-07-06 16:48:06,589:INFO:Checking exceptions
2023-07-06 16:48:06,596:INFO:Preparing display monitor
2023-07-06 16:48:06,614:INFO:Initializing Linear Regression
2023-07-06 16:48:06,615:INFO:Total runtime is 3.1789143880208335e-06 minutes
2023-07-06 16:48:06,617:INFO:SubProcess create_model() called ==================================
2023-07-06 16:48:06,617:INFO:Initializing create_model()
2023-07-06 16:48:06,617:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeae2070>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae8defa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:48:06,617:INFO:Checking exceptions
2023-07-06 16:48:06,617:INFO:Importing libraries
2023-07-06 16:48:06,617:INFO:Copying training dataset
2023-07-06 16:48:06,638:INFO:Defining folds
2023-07-06 16:48:06,638:INFO:Declaring metric variables
2023-07-06 16:48:06,641:INFO:Importing untrained model
2023-07-06 16:48:06,644:INFO:Linear Regression Imported successfully
2023-07-06 16:48:06,648:INFO:Starting cross validation
2023-07-06 16:48:06,649:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:48:07,067:INFO:Calculating mean and std
2023-07-06 16:48:07,068:INFO:Creating metrics dataframe
2023-07-06 16:48:07,104:INFO:Uploading results into container
2023-07-06 16:48:07,104:INFO:Uploading model into container now
2023-07-06 16:48:07,105:INFO:_master_model_container: 1
2023-07-06 16:48:07,105:INFO:_display_container: 2
2023-07-06 16:48:07,105:INFO:LinearRegression(n_jobs=-1)
2023-07-06 16:48:07,105:INFO:create_model() successfully completed......................................
2023-07-06 16:48:07,321:INFO:SubProcess create_model() end ==================================
2023-07-06 16:48:07,321:INFO:Creating metrics dataframe
2023-07-06 16:48:07,328:INFO:Initializing Lasso Regression
2023-07-06 16:48:07,328:INFO:Total runtime is 0.011896880467732749 minutes
2023-07-06 16:48:07,331:INFO:SubProcess create_model() called ==================================
2023-07-06 16:48:07,331:INFO:Initializing create_model()
2023-07-06 16:48:07,331:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeae2070>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae8defa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:48:07,331:INFO:Checking exceptions
2023-07-06 16:48:07,331:INFO:Importing libraries
2023-07-06 16:48:07,331:INFO:Copying training dataset
2023-07-06 16:48:07,352:INFO:Defining folds
2023-07-06 16:48:07,352:INFO:Declaring metric variables
2023-07-06 16:48:07,355:INFO:Importing untrained model
2023-07-06 16:48:07,358:INFO:Lasso Regression Imported successfully
2023-07-06 16:48:07,362:INFO:Starting cross validation
2023-07-06 16:48:07,363:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:48:08,595:INFO:Calculating mean and std
2023-07-06 16:48:08,598:INFO:Creating metrics dataframe
2023-07-06 16:48:08,636:INFO:Uploading results into container
2023-07-06 16:48:08,637:INFO:Uploading model into container now
2023-07-06 16:48:08,638:INFO:_master_model_container: 2
2023-07-06 16:48:08,638:INFO:_display_container: 2
2023-07-06 16:48:08,638:INFO:Lasso(random_state=6184)
2023-07-06 16:48:08,638:INFO:create_model() successfully completed......................................
2023-07-06 16:48:08,825:INFO:SubProcess create_model() end ==================================
2023-07-06 16:48:08,825:INFO:Creating metrics dataframe
2023-07-06 16:48:08,833:INFO:Initializing Ridge Regression
2023-07-06 16:48:08,833:INFO:Total runtime is 0.03698025941848755 minutes
2023-07-06 16:48:08,836:INFO:SubProcess create_model() called ==================================
2023-07-06 16:48:08,836:INFO:Initializing create_model()
2023-07-06 16:48:08,836:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeae2070>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae8defa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:48:08,836:INFO:Checking exceptions
2023-07-06 16:48:08,836:INFO:Importing libraries
2023-07-06 16:48:08,836:INFO:Copying training dataset
2023-07-06 16:48:08,858:INFO:Defining folds
2023-07-06 16:48:08,858:INFO:Declaring metric variables
2023-07-06 16:48:08,861:INFO:Importing untrained model
2023-07-06 16:48:08,864:INFO:Ridge Regression Imported successfully
2023-07-06 16:48:08,868:INFO:Starting cross validation
2023-07-06 16:48:08,869:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:48:10,049:INFO:Calculating mean and std
2023-07-06 16:48:10,051:INFO:Creating metrics dataframe
2023-07-06 16:48:10,089:INFO:Uploading results into container
2023-07-06 16:48:10,090:INFO:Uploading model into container now
2023-07-06 16:48:10,090:INFO:_master_model_container: 3
2023-07-06 16:48:10,090:INFO:_display_container: 2
2023-07-06 16:48:10,091:INFO:Ridge(random_state=6184)
2023-07-06 16:48:10,091:INFO:create_model() successfully completed......................................
2023-07-06 16:48:10,277:INFO:SubProcess create_model() end ==================================
2023-07-06 16:48:10,277:INFO:Creating metrics dataframe
2023-07-06 16:48:10,285:INFO:Initializing Elastic Net
2023-07-06 16:48:10,286:INFO:Total runtime is 0.061186726888020834 minutes
2023-07-06 16:48:10,288:INFO:SubProcess create_model() called ==================================
2023-07-06 16:48:10,288:INFO:Initializing create_model()
2023-07-06 16:48:10,288:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeae2070>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae8defa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:48:10,288:INFO:Checking exceptions
2023-07-06 16:48:10,288:INFO:Importing libraries
2023-07-06 16:48:10,288:INFO:Copying training dataset
2023-07-06 16:48:10,310:INFO:Defining folds
2023-07-06 16:48:10,310:INFO:Declaring metric variables
2023-07-06 16:48:10,313:INFO:Importing untrained model
2023-07-06 16:48:10,316:INFO:Elastic Net Imported successfully
2023-07-06 16:48:10,321:INFO:Starting cross validation
2023-07-06 16:48:10,321:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:48:11,432:INFO:Calculating mean and std
2023-07-06 16:48:11,434:INFO:Creating metrics dataframe
2023-07-06 16:48:11,471:INFO:Uploading results into container
2023-07-06 16:48:11,472:INFO:Uploading model into container now
2023-07-06 16:48:11,473:INFO:_master_model_container: 4
2023-07-06 16:48:11,473:INFO:_display_container: 2
2023-07-06 16:48:11,473:INFO:ElasticNet(random_state=6184)
2023-07-06 16:48:11,473:INFO:create_model() successfully completed......................................
2023-07-06 16:48:11,654:INFO:SubProcess create_model() end ==================================
2023-07-06 16:48:11,654:INFO:Creating metrics dataframe
2023-07-06 16:48:11,662:INFO:Initializing Least Angle Regression
2023-07-06 16:48:11,663:INFO:Total runtime is 0.08413927555084229 minutes
2023-07-06 16:48:11,665:INFO:SubProcess create_model() called ==================================
2023-07-06 16:48:11,665:INFO:Initializing create_model()
2023-07-06 16:48:11,665:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeae2070>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae8defa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:48:11,665:INFO:Checking exceptions
2023-07-06 16:48:11,665:INFO:Importing libraries
2023-07-06 16:48:11,666:INFO:Copying training dataset
2023-07-06 16:48:11,687:INFO:Defining folds
2023-07-06 16:48:11,687:INFO:Declaring metric variables
2023-07-06 16:48:11,690:INFO:Importing untrained model
2023-07-06 16:48:11,693:INFO:Least Angle Regression Imported successfully
2023-07-06 16:48:11,697:INFO:Starting cross validation
2023-07-06 16:48:11,698:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:48:12,133:INFO:Calculating mean and std
2023-07-06 16:48:12,134:INFO:Creating metrics dataframe
2023-07-06 16:48:12,171:INFO:Uploading results into container
2023-07-06 16:48:12,172:INFO:Uploading model into container now
2023-07-06 16:48:12,172:INFO:_master_model_container: 5
2023-07-06 16:48:12,172:INFO:_display_container: 2
2023-07-06 16:48:12,173:INFO:Lars(random_state=6184)
2023-07-06 16:48:12,173:INFO:create_model() successfully completed......................................
2023-07-06 16:48:12,356:INFO:SubProcess create_model() end ==================================
2023-07-06 16:48:12,356:INFO:Creating metrics dataframe
2023-07-06 16:48:12,364:INFO:Initializing Lasso Least Angle Regression
2023-07-06 16:48:12,364:INFO:Total runtime is 0.09583425919214884 minutes
2023-07-06 16:48:12,367:INFO:SubProcess create_model() called ==================================
2023-07-06 16:48:12,367:INFO:Initializing create_model()
2023-07-06 16:48:12,367:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeae2070>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae8defa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:48:12,367:INFO:Checking exceptions
2023-07-06 16:48:12,367:INFO:Importing libraries
2023-07-06 16:48:12,367:INFO:Copying training dataset
2023-07-06 16:48:12,389:INFO:Defining folds
2023-07-06 16:48:12,389:INFO:Declaring metric variables
2023-07-06 16:48:12,392:INFO:Importing untrained model
2023-07-06 16:48:12,395:INFO:Lasso Least Angle Regression Imported successfully
2023-07-06 16:48:12,399:INFO:Starting cross validation
2023-07-06 16:48:12,400:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:48:12,838:INFO:Calculating mean and std
2023-07-06 16:48:12,840:INFO:Creating metrics dataframe
2023-07-06 16:48:12,876:INFO:Uploading results into container
2023-07-06 16:48:12,877:INFO:Uploading model into container now
2023-07-06 16:48:12,878:INFO:_master_model_container: 6
2023-07-06 16:48:12,878:INFO:_display_container: 2
2023-07-06 16:48:12,878:INFO:LassoLars(random_state=6184)
2023-07-06 16:48:12,878:INFO:create_model() successfully completed......................................
2023-07-06 16:48:13,055:INFO:SubProcess create_model() end ==================================
2023-07-06 16:48:13,056:INFO:Creating metrics dataframe
2023-07-06 16:48:13,064:INFO:Initializing Orthogonal Matching Pursuit
2023-07-06 16:48:13,064:INFO:Total runtime is 0.10750216643015544 minutes
2023-07-06 16:48:13,067:INFO:SubProcess create_model() called ==================================
2023-07-06 16:48:13,067:INFO:Initializing create_model()
2023-07-06 16:48:13,067:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeae2070>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae8defa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:48:13,067:INFO:Checking exceptions
2023-07-06 16:48:13,067:INFO:Importing libraries
2023-07-06 16:48:13,068:INFO:Copying training dataset
2023-07-06 16:48:13,089:INFO:Defining folds
2023-07-06 16:48:13,090:INFO:Declaring metric variables
2023-07-06 16:48:13,093:INFO:Importing untrained model
2023-07-06 16:48:13,095:INFO:Orthogonal Matching Pursuit Imported successfully
2023-07-06 16:48:13,100:INFO:Starting cross validation
2023-07-06 16:48:13,101:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:48:13,410:INFO:Calculating mean and std
2023-07-06 16:48:13,412:INFO:Creating metrics dataframe
2023-07-06 16:48:13,492:INFO:Uploading results into container
2023-07-06 16:48:13,493:INFO:Uploading model into container now
2023-07-06 16:48:13,494:INFO:_master_model_container: 7
2023-07-06 16:48:13,494:INFO:_display_container: 2
2023-07-06 16:48:13,494:INFO:OrthogonalMatchingPursuit()
2023-07-06 16:48:13,494:INFO:create_model() successfully completed......................................
2023-07-06 16:48:13,672:INFO:SubProcess create_model() end ==================================
2023-07-06 16:48:13,673:INFO:Creating metrics dataframe
2023-07-06 16:48:13,681:INFO:Initializing Bayesian Ridge
2023-07-06 16:48:13,682:INFO:Total runtime is 0.11778881152470906 minutes
2023-07-06 16:48:13,684:INFO:SubProcess create_model() called ==================================
2023-07-06 16:48:13,684:INFO:Initializing create_model()
2023-07-06 16:48:13,684:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeae2070>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae8defa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:48:13,685:INFO:Checking exceptions
2023-07-06 16:48:13,685:INFO:Importing libraries
2023-07-06 16:48:13,685:INFO:Copying training dataset
2023-07-06 16:48:13,710:INFO:Defining folds
2023-07-06 16:48:13,710:INFO:Declaring metric variables
2023-07-06 16:48:13,713:INFO:Importing untrained model
2023-07-06 16:48:13,716:INFO:Bayesian Ridge Imported successfully
2023-07-06 16:48:13,720:INFO:Starting cross validation
2023-07-06 16:48:13,721:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:48:14,166:INFO:Calculating mean and std
2023-07-06 16:48:14,168:INFO:Creating metrics dataframe
2023-07-06 16:48:14,204:INFO:Uploading results into container
2023-07-06 16:48:14,205:INFO:Uploading model into container now
2023-07-06 16:48:14,205:INFO:_master_model_container: 8
2023-07-06 16:48:14,205:INFO:_display_container: 2
2023-07-06 16:48:14,206:INFO:BayesianRidge()
2023-07-06 16:48:14,206:INFO:create_model() successfully completed......................................
2023-07-06 16:48:14,394:INFO:SubProcess create_model() end ==================================
2023-07-06 16:48:14,394:INFO:Creating metrics dataframe
2023-07-06 16:48:14,404:INFO:Initializing Passive Aggressive Regressor
2023-07-06 16:48:14,404:INFO:Total runtime is 0.1298295259475708 minutes
2023-07-06 16:48:14,407:INFO:SubProcess create_model() called ==================================
2023-07-06 16:48:14,407:INFO:Initializing create_model()
2023-07-06 16:48:14,407:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeae2070>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae8defa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:48:14,407:INFO:Checking exceptions
2023-07-06 16:48:14,407:INFO:Importing libraries
2023-07-06 16:48:14,407:INFO:Copying training dataset
2023-07-06 16:48:14,429:INFO:Defining folds
2023-07-06 16:48:14,429:INFO:Declaring metric variables
2023-07-06 16:48:14,432:INFO:Importing untrained model
2023-07-06 16:48:14,435:INFO:Passive Aggressive Regressor Imported successfully
2023-07-06 16:48:14,439:INFO:Starting cross validation
2023-07-06 16:48:14,440:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:48:14,887:INFO:Calculating mean and std
2023-07-06 16:48:14,889:INFO:Creating metrics dataframe
2023-07-06 16:48:14,926:INFO:Uploading results into container
2023-07-06 16:48:14,927:INFO:Uploading model into container now
2023-07-06 16:48:14,928:INFO:_master_model_container: 9
2023-07-06 16:48:14,928:INFO:_display_container: 2
2023-07-06 16:48:14,928:INFO:PassiveAggressiveRegressor(random_state=6184)
2023-07-06 16:48:14,928:INFO:create_model() successfully completed......................................
2023-07-06 16:48:15,105:INFO:SubProcess create_model() end ==================================
2023-07-06 16:48:15,106:INFO:Creating metrics dataframe
2023-07-06 16:48:15,115:INFO:Initializing Huber Regressor
2023-07-06 16:48:15,115:INFO:Total runtime is 0.14167688290278116 minutes
2023-07-06 16:48:15,117:INFO:SubProcess create_model() called ==================================
2023-07-06 16:48:15,118:INFO:Initializing create_model()
2023-07-06 16:48:15,118:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeae2070>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae8defa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:48:15,118:INFO:Checking exceptions
2023-07-06 16:48:15,118:INFO:Importing libraries
2023-07-06 16:48:15,118:INFO:Copying training dataset
2023-07-06 16:48:15,141:INFO:Defining folds
2023-07-06 16:48:15,141:INFO:Declaring metric variables
2023-07-06 16:48:15,144:INFO:Importing untrained model
2023-07-06 16:48:15,147:INFO:Huber Regressor Imported successfully
2023-07-06 16:48:15,151:INFO:Starting cross validation
2023-07-06 16:48:15,152:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:48:16,172:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:48:16,176:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:48:16,188:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:48:16,198:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:48:16,204:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:48:16,216:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:48:16,255:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:48:16,260:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:48:16,266:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:48:16,394:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:48:16,427:INFO:Calculating mean and std
2023-07-06 16:48:16,429:INFO:Creating metrics dataframe
2023-07-06 16:48:16,559:INFO:Uploading results into container
2023-07-06 16:48:16,560:INFO:Uploading model into container now
2023-07-06 16:48:16,560:INFO:_master_model_container: 10
2023-07-06 16:48:16,560:INFO:_display_container: 2
2023-07-06 16:48:16,561:INFO:HuberRegressor()
2023-07-06 16:48:16,561:INFO:create_model() successfully completed......................................
2023-07-06 16:48:16,740:INFO:SubProcess create_model() end ==================================
2023-07-06 16:48:16,740:INFO:Creating metrics dataframe
2023-07-06 16:48:16,750:INFO:Initializing K Neighbors Regressor
2023-07-06 16:48:16,750:INFO:Total runtime is 0.16892929871877033 minutes
2023-07-06 16:48:16,752:INFO:SubProcess create_model() called ==================================
2023-07-06 16:48:16,753:INFO:Initializing create_model()
2023-07-06 16:48:16,753:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeae2070>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae8defa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:48:16,753:INFO:Checking exceptions
2023-07-06 16:48:16,753:INFO:Importing libraries
2023-07-06 16:48:16,753:INFO:Copying training dataset
2023-07-06 16:48:16,774:INFO:Defining folds
2023-07-06 16:48:16,775:INFO:Declaring metric variables
2023-07-06 16:48:16,778:INFO:Importing untrained model
2023-07-06 16:48:16,780:INFO:K Neighbors Regressor Imported successfully
2023-07-06 16:48:16,785:INFO:Starting cross validation
2023-07-06 16:48:16,786:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:48:17,554:INFO:Calculating mean and std
2023-07-06 16:48:17,555:INFO:Creating metrics dataframe
2023-07-06 16:48:17,622:INFO:Uploading results into container
2023-07-06 16:48:17,622:INFO:Uploading model into container now
2023-07-06 16:48:17,623:INFO:_master_model_container: 11
2023-07-06 16:48:17,623:INFO:_display_container: 2
2023-07-06 16:48:17,623:INFO:KNeighborsRegressor(n_jobs=-1)
2023-07-06 16:48:17,623:INFO:create_model() successfully completed......................................
2023-07-06 16:48:17,789:INFO:SubProcess create_model() end ==================================
2023-07-06 16:48:17,790:INFO:Creating metrics dataframe
2023-07-06 16:48:17,799:INFO:Initializing Decision Tree Regressor
2023-07-06 16:48:17,799:INFO:Total runtime is 0.18641640345255533 minutes
2023-07-06 16:48:17,802:INFO:SubProcess create_model() called ==================================
2023-07-06 16:48:17,802:INFO:Initializing create_model()
2023-07-06 16:48:17,802:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeae2070>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae8defa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:48:17,802:INFO:Checking exceptions
2023-07-06 16:48:17,802:INFO:Importing libraries
2023-07-06 16:48:17,802:INFO:Copying training dataset
2023-07-06 16:48:17,824:INFO:Defining folds
2023-07-06 16:48:17,824:INFO:Declaring metric variables
2023-07-06 16:48:17,827:INFO:Importing untrained model
2023-07-06 16:48:17,830:INFO:Decision Tree Regressor Imported successfully
2023-07-06 16:48:17,834:INFO:Starting cross validation
2023-07-06 16:48:17,835:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:48:19,066:INFO:Calculating mean and std
2023-07-06 16:48:19,067:INFO:Creating metrics dataframe
2023-07-06 16:48:19,108:INFO:Uploading results into container
2023-07-06 16:48:19,108:INFO:Uploading model into container now
2023-07-06 16:48:19,109:INFO:_master_model_container: 12
2023-07-06 16:48:19,109:INFO:_display_container: 2
2023-07-06 16:48:19,109:INFO:DecisionTreeRegressor(random_state=6184)
2023-07-06 16:48:19,109:INFO:create_model() successfully completed......................................
2023-07-06 16:48:19,282:INFO:SubProcess create_model() end ==================================
2023-07-06 16:48:19,283:INFO:Creating metrics dataframe
2023-07-06 16:48:19,292:INFO:Initializing Random Forest Regressor
2023-07-06 16:48:19,292:INFO:Total runtime is 0.21130070288976033 minutes
2023-07-06 16:48:19,295:INFO:SubProcess create_model() called ==================================
2023-07-06 16:48:19,295:INFO:Initializing create_model()
2023-07-06 16:48:19,295:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeae2070>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae8defa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:48:19,295:INFO:Checking exceptions
2023-07-06 16:48:19,295:INFO:Importing libraries
2023-07-06 16:48:19,295:INFO:Copying training dataset
2023-07-06 16:48:19,317:INFO:Defining folds
2023-07-06 16:48:19,317:INFO:Declaring metric variables
2023-07-06 16:48:19,320:INFO:Importing untrained model
2023-07-06 16:48:19,323:INFO:Random Forest Regressor Imported successfully
2023-07-06 16:48:19,327:INFO:Starting cross validation
2023-07-06 16:48:19,328:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:48:30,732:INFO:Calculating mean and std
2023-07-06 16:48:30,733:INFO:Creating metrics dataframe
2023-07-06 16:48:30,757:INFO:Uploading results into container
2023-07-06 16:48:30,758:INFO:Uploading model into container now
2023-07-06 16:48:30,759:INFO:_master_model_container: 13
2023-07-06 16:48:30,759:INFO:_display_container: 2
2023-07-06 16:48:30,760:INFO:RandomForestRegressor(n_jobs=-1, random_state=6184)
2023-07-06 16:48:30,760:INFO:create_model() successfully completed......................................
2023-07-06 16:48:30,960:INFO:SubProcess create_model() end ==================================
2023-07-06 16:48:30,960:INFO:Creating metrics dataframe
2023-07-06 16:48:30,970:INFO:Initializing Extra Trees Regressor
2023-07-06 16:48:30,970:INFO:Total runtime is 0.405932887395223 minutes
2023-07-06 16:48:30,973:INFO:SubProcess create_model() called ==================================
2023-07-06 16:48:30,973:INFO:Initializing create_model()
2023-07-06 16:48:30,973:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeae2070>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae8defa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:48:30,973:INFO:Checking exceptions
2023-07-06 16:48:30,973:INFO:Importing libraries
2023-07-06 16:48:30,973:INFO:Copying training dataset
2023-07-06 16:48:30,994:INFO:Defining folds
2023-07-06 16:48:30,995:INFO:Declaring metric variables
2023-07-06 16:48:30,998:INFO:Importing untrained model
2023-07-06 16:48:31,000:INFO:Extra Trees Regressor Imported successfully
2023-07-06 16:48:31,004:INFO:Starting cross validation
2023-07-06 16:48:31,005:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:48:37,243:INFO:Calculating mean and std
2023-07-06 16:48:37,245:INFO:Creating metrics dataframe
2023-07-06 16:48:37,264:INFO:Uploading results into container
2023-07-06 16:48:37,265:INFO:Uploading model into container now
2023-07-06 16:48:37,265:INFO:_master_model_container: 14
2023-07-06 16:48:37,266:INFO:_display_container: 2
2023-07-06 16:48:37,266:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6184)
2023-07-06 16:48:37,266:INFO:create_model() successfully completed......................................
2023-07-06 16:48:37,462:INFO:SubProcess create_model() end ==================================
2023-07-06 16:48:37,462:INFO:Creating metrics dataframe
2023-07-06 16:48:37,473:INFO:Initializing AdaBoost Regressor
2023-07-06 16:48:37,473:INFO:Total runtime is 0.5143092393875122 minutes
2023-07-06 16:48:37,476:INFO:SubProcess create_model() called ==================================
2023-07-06 16:48:37,476:INFO:Initializing create_model()
2023-07-06 16:48:37,476:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeae2070>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae8defa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:48:37,476:INFO:Checking exceptions
2023-07-06 16:48:37,476:INFO:Importing libraries
2023-07-06 16:48:37,476:INFO:Copying training dataset
2023-07-06 16:48:37,498:INFO:Defining folds
2023-07-06 16:48:37,499:INFO:Declaring metric variables
2023-07-06 16:48:37,503:INFO:Importing untrained model
2023-07-06 16:48:37,505:INFO:AdaBoost Regressor Imported successfully
2023-07-06 16:48:37,509:INFO:Starting cross validation
2023-07-06 16:48:37,510:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:48:37,796:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/joblib/externals/loky/process_executor.py:700: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  warnings.warn(

2023-07-06 16:48:45,872:INFO:Calculating mean and std
2023-07-06 16:48:45,873:INFO:Creating metrics dataframe
2023-07-06 16:48:45,883:INFO:Uploading results into container
2023-07-06 16:48:45,884:INFO:Uploading model into container now
2023-07-06 16:48:45,884:INFO:_master_model_container: 15
2023-07-06 16:48:45,884:INFO:_display_container: 2
2023-07-06 16:48:45,884:INFO:AdaBoostRegressor(random_state=6184)
2023-07-06 16:48:45,884:INFO:create_model() successfully completed......................................
2023-07-06 16:48:46,067:INFO:SubProcess create_model() end ==================================
2023-07-06 16:48:46,067:INFO:Creating metrics dataframe
2023-07-06 16:48:46,077:INFO:Initializing Gradient Boosting Regressor
2023-07-06 16:48:46,078:INFO:Total runtime is 0.657721988360087 minutes
2023-07-06 16:48:46,080:INFO:SubProcess create_model() called ==================================
2023-07-06 16:48:46,080:INFO:Initializing create_model()
2023-07-06 16:48:46,080:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeae2070>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae8defa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:48:46,081:INFO:Checking exceptions
2023-07-06 16:48:46,081:INFO:Importing libraries
2023-07-06 16:48:46,081:INFO:Copying training dataset
2023-07-06 16:48:46,102:INFO:Defining folds
2023-07-06 16:48:46,103:INFO:Declaring metric variables
2023-07-06 16:48:46,106:INFO:Importing untrained model
2023-07-06 16:48:46,108:INFO:Gradient Boosting Regressor Imported successfully
2023-07-06 16:48:46,113:INFO:Starting cross validation
2023-07-06 16:48:46,114:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:49:10,794:INFO:Calculating mean and std
2023-07-06 16:49:10,796:INFO:Creating metrics dataframe
2023-07-06 16:49:10,834:INFO:Uploading results into container
2023-07-06 16:49:10,835:INFO:Uploading model into container now
2023-07-06 16:49:10,835:INFO:_master_model_container: 16
2023-07-06 16:49:10,835:INFO:_display_container: 2
2023-07-06 16:49:10,836:INFO:GradientBoostingRegressor(random_state=6184)
2023-07-06 16:49:10,836:INFO:create_model() successfully completed......................................
2023-07-06 16:49:11,016:INFO:SubProcess create_model() end ==================================
2023-07-06 16:49:11,016:INFO:Creating metrics dataframe
2023-07-06 16:49:11,027:INFO:Initializing Light Gradient Boosting Machine
2023-07-06 16:49:11,027:INFO:Total runtime is 1.073539400100708 minutes
2023-07-06 16:49:11,030:INFO:SubProcess create_model() called ==================================
2023-07-06 16:49:11,030:INFO:Initializing create_model()
2023-07-06 16:49:11,030:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeae2070>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae8defa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:49:11,030:INFO:Checking exceptions
2023-07-06 16:49:11,030:INFO:Importing libraries
2023-07-06 16:49:11,030:INFO:Copying training dataset
2023-07-06 16:49:11,052:INFO:Defining folds
2023-07-06 16:49:11,052:INFO:Declaring metric variables
2023-07-06 16:49:11,055:INFO:Importing untrained model
2023-07-06 16:49:11,058:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-06 16:49:11,062:INFO:Starting cross validation
2023-07-06 16:49:11,063:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:49:12,265:INFO:Calculating mean and std
2023-07-06 16:49:12,266:INFO:Creating metrics dataframe
2023-07-06 16:49:12,285:INFO:Uploading results into container
2023-07-06 16:49:12,286:INFO:Uploading model into container now
2023-07-06 16:49:12,287:INFO:_master_model_container: 17
2023-07-06 16:49:12,287:INFO:_display_container: 2
2023-07-06 16:49:12,287:INFO:LGBMRegressor(random_state=6184)
2023-07-06 16:49:12,287:INFO:create_model() successfully completed......................................
2023-07-06 16:49:12,471:INFO:SubProcess create_model() end ==================================
2023-07-06 16:49:12,472:INFO:Creating metrics dataframe
2023-07-06 16:49:12,482:INFO:Initializing Dummy Regressor
2023-07-06 16:49:12,483:INFO:Total runtime is 1.097803739706675 minutes
2023-07-06 16:49:12,485:INFO:SubProcess create_model() called ==================================
2023-07-06 16:49:12,485:INFO:Initializing create_model()
2023-07-06 16:49:12,485:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeae2070>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae8defa0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:49:12,485:INFO:Checking exceptions
2023-07-06 16:49:12,486:INFO:Importing libraries
2023-07-06 16:49:12,486:INFO:Copying training dataset
2023-07-06 16:49:12,507:INFO:Defining folds
2023-07-06 16:49:12,507:INFO:Declaring metric variables
2023-07-06 16:49:12,511:INFO:Importing untrained model
2023-07-06 16:49:12,513:INFO:Dummy Regressor Imported successfully
2023-07-06 16:49:12,517:INFO:Starting cross validation
2023-07-06 16:49:12,518:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:49:12,755:INFO:Calculating mean and std
2023-07-06 16:49:12,757:INFO:Creating metrics dataframe
2023-07-06 16:49:12,808:INFO:Uploading results into container
2023-07-06 16:49:12,809:INFO:Uploading model into container now
2023-07-06 16:49:12,810:INFO:_master_model_container: 18
2023-07-06 16:49:12,810:INFO:_display_container: 2
2023-07-06 16:49:12,810:INFO:DummyRegressor()
2023-07-06 16:49:12,810:INFO:create_model() successfully completed......................................
2023-07-06 16:49:12,994:INFO:SubProcess create_model() end ==================================
2023-07-06 16:49:12,994:INFO:Creating metrics dataframe
2023-07-06 16:49:13,012:INFO:Initializing create_model()
2023-07-06 16:49:13,012:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25aeae2070>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6184), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:49:13,012:INFO:Checking exceptions
2023-07-06 16:49:13,013:INFO:Importing libraries
2023-07-06 16:49:13,014:INFO:Copying training dataset
2023-07-06 16:49:13,034:INFO:Defining folds
2023-07-06 16:49:13,035:INFO:Declaring metric variables
2023-07-06 16:49:13,035:INFO:Importing untrained model
2023-07-06 16:49:13,035:INFO:Declaring custom model
2023-07-06 16:49:13,036:INFO:Extra Trees Regressor Imported successfully
2023-07-06 16:49:13,036:INFO:Cross validation set to False
2023-07-06 16:49:13,036:INFO:Fitting Model
2023-07-06 16:49:14,359:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6184)
2023-07-06 16:49:14,359:INFO:create_model() successfully completed......................................
2023-07-06 16:49:14,585:INFO:_master_model_container: 18
2023-07-06 16:49:14,586:INFO:_display_container: 2
2023-07-06 16:49:14,586:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6184)
2023-07-06 16:49:14,586:INFO:compare_models() successfully completed......................................
2023-07-06 16:49:14,844:INFO:PyCaret RegressionExperiment
2023-07-06 16:49:14,844:INFO:Logging name: reg-default-name
2023-07-06 16:49:14,844:INFO:ML Usecase: MLUsecase.REGRESSION
2023-07-06 16:49:14,844:INFO:version 3.0.4
2023-07-06 16:49:14,844:INFO:Initializing setup()
2023-07-06 16:49:14,844:INFO:self.USI: 435b
2023-07-06 16:49:14,844:INFO:self._variable_keys: {'pipeline', 'fold_groups_param', 'log_plots_param', '_ml_usecase', 'memory', 'transform_target_param', 'logging_param', 'y', 'USI', 'data', 'target_param', 'html_param', 'fold_generator', 'X', 'n_jobs_param', 'X_test', 'y_test', 'exp_id', 'X_train', 'exp_name_log', 'gpu_n_jobs_param', 'seed', 'idx', 'gpu_param', 'y_train', '_available_plots', 'fold_shuffle_param'}
2023-07-06 16:49:14,844:INFO:Checking environment
2023-07-06 16:49:14,844:INFO:python_version: 3.9.16
2023-07-06 16:49:14,844:INFO:python_build: ('main', 'Feb  1 2023 21:39:03')
2023-07-06 16:49:14,844:INFO:machine: x86_64
2023-07-06 16:49:14,844:INFO:platform: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 16:49:14,844:INFO:Memory: svmem(total=540878073856, available=520807641088, percent=3.7, used=16525021184, free=16587317248, active=31551168512, inactive=476287373312, buffers=2685800448, cached=505079934976, shared=22036480, slab=14274654208)
2023-07-06 16:49:14,846:INFO:Physical Core: 64
2023-07-06 16:49:14,846:INFO:Logical Core: 64
2023-07-06 16:49:14,846:INFO:Checking libraries
2023-07-06 16:49:14,846:INFO:System:
2023-07-06 16:49:14,846:INFO:    python: 3.9.16 | packaged by conda-forge | (main, Feb  1 2023, 21:39:03)  [GCC 11.3.0]
2023-07-06 16:49:14,846:INFO:executable: /home/mirlab/anaconda3/envs/misc/bin/python
2023-07-06 16:49:14,846:INFO:   machine: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 16:49:14,846:INFO:PyCaret required dependencies:
2023-07-06 16:49:14,846:INFO:                 pip: 23.1.2
2023-07-06 16:49:14,846:INFO:          setuptools: 67.7.2
2023-07-06 16:49:14,846:INFO:             pycaret: 3.0.4
2023-07-06 16:49:14,846:INFO:             IPython: 8.14.0
2023-07-06 16:49:14,846:INFO:          ipywidgets: 8.0.7
2023-07-06 16:49:14,846:INFO:                tqdm: 4.64.1
2023-07-06 16:49:14,846:INFO:               numpy: 1.23.5
2023-07-06 16:49:14,847:INFO:              pandas: 1.5.3
2023-07-06 16:49:14,847:INFO:              jinja2: 3.1.2
2023-07-06 16:49:14,847:INFO:               scipy: 1.10.1
2023-07-06 16:49:14,847:INFO:              joblib: 1.2.0
2023-07-06 16:49:14,847:INFO:             sklearn: 1.2.2
2023-07-06 16:49:14,847:INFO:                pyod: 1.1.0
2023-07-06 16:49:14,847:INFO:            imblearn: 0.10.1
2023-07-06 16:49:14,847:INFO:   category_encoders: 2.6.1
2023-07-06 16:49:14,847:INFO:            lightgbm: 3.3.5
2023-07-06 16:49:14,847:INFO:               numba: 0.57.0
2023-07-06 16:49:14,847:INFO:            requests: 2.28.1
2023-07-06 16:49:14,847:INFO:          matplotlib: 3.7.1
2023-07-06 16:49:14,847:INFO:          scikitplot: 0.3.7
2023-07-06 16:49:14,847:INFO:         yellowbrick: 1.5
2023-07-06 16:49:14,847:INFO:              plotly: 5.15.0
2023-07-06 16:49:14,847:INFO:    plotly-resampler: Not installed
2023-07-06 16:49:14,847:INFO:             kaleido: 0.2.1
2023-07-06 16:49:14,847:INFO:           schemdraw: 0.15
2023-07-06 16:49:14,847:INFO:         statsmodels: 0.14.0
2023-07-06 16:49:14,847:INFO:              sktime: 0.20.0
2023-07-06 16:49:14,847:INFO:               tbats: 1.1.3
2023-07-06 16:49:14,847:INFO:            pmdarima: 2.0.3
2023-07-06 16:49:14,847:INFO:              psutil: 5.9.5
2023-07-06 16:49:14,847:INFO:          markupsafe: 2.1.2
2023-07-06 16:49:14,847:INFO:             pickle5: Not installed
2023-07-06 16:49:14,847:INFO:         cloudpickle: 2.2.1
2023-07-06 16:49:14,847:INFO:         deprecation: 2.1.0
2023-07-06 16:49:14,847:INFO:              xxhash: 3.2.0
2023-07-06 16:49:14,847:INFO:           wurlitzer: 3.0.3
2023-07-06 16:49:14,847:INFO:PyCaret optional dependencies:
2023-07-06 16:49:14,847:INFO:                shap: Not installed
2023-07-06 16:49:14,847:INFO:           interpret: Not installed
2023-07-06 16:49:14,847:INFO:                umap: Not installed
2023-07-06 16:49:14,847:INFO:    pandas_profiling: 3.6.6
2023-07-06 16:49:14,847:INFO:  explainerdashboard: Not installed
2023-07-06 16:49:14,847:INFO:             autoviz: Not installed
2023-07-06 16:49:14,847:INFO:           fairlearn: Not installed
2023-07-06 16:49:14,847:INFO:          deepchecks: Not installed
2023-07-06 16:49:14,847:INFO:             xgboost: Not installed
2023-07-06 16:49:14,847:INFO:            catboost: Not installed
2023-07-06 16:49:14,847:INFO:              kmodes: Not installed
2023-07-06 16:49:14,847:INFO:             mlxtend: Not installed
2023-07-06 16:49:14,847:INFO:       statsforecast: Not installed
2023-07-06 16:49:14,847:INFO:        tune_sklearn: Not installed
2023-07-06 16:49:14,847:INFO:                 ray: Not installed
2023-07-06 16:49:14,847:INFO:            hyperopt: Not installed
2023-07-06 16:49:14,847:INFO:              optuna: 3.1.1
2023-07-06 16:49:14,847:INFO:               skopt: Not installed
2023-07-06 16:49:14,847:INFO:              mlflow: Not installed
2023-07-06 16:49:14,847:INFO:              gradio: Not installed
2023-07-06 16:49:14,847:INFO:             fastapi: Not installed
2023-07-06 16:49:14,848:INFO:             uvicorn: Not installed
2023-07-06 16:49:14,848:INFO:              m2cgen: Not installed
2023-07-06 16:49:14,848:INFO:           evidently: Not installed
2023-07-06 16:49:14,848:INFO:               fugue: Not installed
2023-07-06 16:49:14,848:INFO:           streamlit: 1.24.0
2023-07-06 16:49:14,848:INFO:             prophet: Not installed
2023-07-06 16:49:14,848:INFO:None
2023-07-06 16:49:14,848:INFO:Set up data.
2023-07-06 16:49:14,866:INFO:Set up train/test split.
2023-07-06 16:49:14,882:INFO:Set up index.
2023-07-06 16:49:14,884:INFO:Set up folding strategy.
2023-07-06 16:49:14,884:INFO:Assigning column types.
2023-07-06 16:49:14,893:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-06 16:49:14,894:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 16:49:14,899:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:49:14,904:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:49:14,976:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:49:15,024:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:49:15,025:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:49:15,025:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:49:15,025:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 16:49:15,030:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:49:15,035:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:49:15,108:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:49:15,156:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:49:15,156:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:49:15,156:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:49:15,156:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-07-06 16:49:15,161:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:49:15,166:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:49:15,239:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:49:15,287:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:49:15,288:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:49:15,288:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:49:15,293:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:49:15,298:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:49:15,370:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:49:15,418:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:49:15,419:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:49:15,419:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:49:15,419:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-07-06 16:49:15,429:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:49:15,501:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:49:15,549:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:49:15,549:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:49:15,549:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:49:15,559:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:49:15,631:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:49:15,679:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:49:15,680:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:49:15,680:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:49:15,680:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-07-06 16:49:15,762:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:49:15,809:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:49:15,809:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:49:15,809:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:49:15,892:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:49:15,940:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:49:15,941:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:49:15,941:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:49:15,941:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-06 16:49:16,024:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:49:16,072:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:49:16,072:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:49:16,155:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:49:16,203:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:49:16,203:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:49:16,203:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-07-06 16:49:16,333:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:49:16,334:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:49:16,464:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:49:16,464:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:49:16,465:INFO:Preparing preprocessing pipeline...
2023-07-06 16:49:16,465:INFO:Set up simple imputation.
2023-07-06 16:49:16,467:INFO:Set up column name cleaning.
2023-07-06 16:49:16,506:INFO:Finished creating preprocessing pipeline.
2023-07-06 16:49:16,510:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['PTemp_C_Max', 'AirTC_Avg', 'RH',
                                             'WS_ms_Avg', 'WindDir', 'TPM1',
                                             'TPM2.5', 'TPM10', 'GeffRef',
                                             'TempRef', 'Daylight'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-07-06 16:49:16,510:INFO:Creating final display dataframe.
2023-07-06 16:49:16,639:INFO:Setup _display_container:                     Description             Value
0                    Session id              2963
1                        Target       DN_Voltage1
2                   Target type        Regression
3           Original data shape      (144000, 12)
4        Transformed data shape      (144000, 12)
5   Transformed train set shape      (100800, 12)
6    Transformed test set shape       (43200, 12)
7              Numeric features                11
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              435b
2023-07-06 16:49:16,780:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:49:16,781:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:49:16,912:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:49:16,912:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:49:16,913:INFO:setup() successfully completed in 2.07s...............
2023-07-06 16:49:16,913:INFO:Initializing compare_models()
2023-07-06 16:49:16,913:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af3f9190>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f25af3f9190>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-07-06 16:49:16,913:INFO:Checking exceptions
2023-07-06 16:49:16,921:INFO:Preparing display monitor
2023-07-06 16:49:16,939:INFO:Initializing Linear Regression
2023-07-06 16:49:16,940:INFO:Total runtime is 2.797444661458333e-06 minutes
2023-07-06 16:49:16,942:INFO:SubProcess create_model() called ==================================
2023-07-06 16:49:16,942:INFO:Initializing create_model()
2023-07-06 16:49:16,942:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af3f9190>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae966250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:49:16,942:INFO:Checking exceptions
2023-07-06 16:49:16,942:INFO:Importing libraries
2023-07-06 16:49:16,942:INFO:Copying training dataset
2023-07-06 16:49:16,963:INFO:Defining folds
2023-07-06 16:49:16,964:INFO:Declaring metric variables
2023-07-06 16:49:16,967:INFO:Importing untrained model
2023-07-06 16:49:16,969:INFO:Linear Regression Imported successfully
2023-07-06 16:49:16,974:INFO:Starting cross validation
2023-07-06 16:49:16,975:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:49:17,374:INFO:Calculating mean and std
2023-07-06 16:49:17,375:INFO:Creating metrics dataframe
2023-07-06 16:49:17,392:INFO:Uploading results into container
2023-07-06 16:49:17,393:INFO:Uploading model into container now
2023-07-06 16:49:17,394:INFO:_master_model_container: 1
2023-07-06 16:49:17,394:INFO:_display_container: 2
2023-07-06 16:49:17,394:INFO:LinearRegression(n_jobs=-1)
2023-07-06 16:49:17,394:INFO:create_model() successfully completed......................................
2023-07-06 16:49:17,614:INFO:SubProcess create_model() end ==================================
2023-07-06 16:49:17,614:INFO:Creating metrics dataframe
2023-07-06 16:49:17,621:INFO:Initializing Lasso Regression
2023-07-06 16:49:17,622:INFO:Total runtime is 0.011371107896169026 minutes
2023-07-06 16:49:17,624:INFO:SubProcess create_model() called ==================================
2023-07-06 16:49:17,625:INFO:Initializing create_model()
2023-07-06 16:49:17,625:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af3f9190>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae966250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:49:17,625:INFO:Checking exceptions
2023-07-06 16:49:17,625:INFO:Importing libraries
2023-07-06 16:49:17,625:INFO:Copying training dataset
2023-07-06 16:49:17,647:INFO:Defining folds
2023-07-06 16:49:17,648:INFO:Declaring metric variables
2023-07-06 16:49:17,651:INFO:Importing untrained model
2023-07-06 16:49:17,653:INFO:Lasso Regression Imported successfully
2023-07-06 16:49:17,658:INFO:Starting cross validation
2023-07-06 16:49:17,659:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:49:18,869:INFO:Calculating mean and std
2023-07-06 16:49:18,871:INFO:Creating metrics dataframe
2023-07-06 16:49:18,891:INFO:Uploading results into container
2023-07-06 16:49:18,891:INFO:Uploading model into container now
2023-07-06 16:49:18,892:INFO:_master_model_container: 2
2023-07-06 16:49:18,892:INFO:_display_container: 2
2023-07-06 16:49:18,892:INFO:Lasso(random_state=2963)
2023-07-06 16:49:18,893:INFO:create_model() successfully completed......................................
2023-07-06 16:49:19,109:INFO:SubProcess create_model() end ==================================
2023-07-06 16:49:19,110:INFO:Creating metrics dataframe
2023-07-06 16:49:19,118:INFO:Initializing Ridge Regression
2023-07-06 16:49:19,118:INFO:Total runtime is 0.036307108402252194 minutes
2023-07-06 16:49:19,120:INFO:SubProcess create_model() called ==================================
2023-07-06 16:49:19,121:INFO:Initializing create_model()
2023-07-06 16:49:19,121:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af3f9190>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae966250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:49:19,121:INFO:Checking exceptions
2023-07-06 16:49:19,121:INFO:Importing libraries
2023-07-06 16:49:19,121:INFO:Copying training dataset
2023-07-06 16:49:19,143:INFO:Defining folds
2023-07-06 16:49:19,143:INFO:Declaring metric variables
2023-07-06 16:49:19,146:INFO:Importing untrained model
2023-07-06 16:49:19,149:INFO:Ridge Regression Imported successfully
2023-07-06 16:49:19,153:INFO:Starting cross validation
2023-07-06 16:49:19,154:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:49:20,251:INFO:Calculating mean and std
2023-07-06 16:49:20,253:INFO:Creating metrics dataframe
2023-07-06 16:49:20,269:INFO:Uploading results into container
2023-07-06 16:49:20,270:INFO:Uploading model into container now
2023-07-06 16:49:20,270:INFO:_master_model_container: 3
2023-07-06 16:49:20,270:INFO:_display_container: 2
2023-07-06 16:49:20,271:INFO:Ridge(random_state=2963)
2023-07-06 16:49:20,271:INFO:create_model() successfully completed......................................
2023-07-06 16:49:20,479:INFO:SubProcess create_model() end ==================================
2023-07-06 16:49:20,479:INFO:Creating metrics dataframe
2023-07-06 16:49:20,488:INFO:Initializing Elastic Net
2023-07-06 16:49:20,488:INFO:Total runtime is 0.05914052724838256 minutes
2023-07-06 16:49:20,490:INFO:SubProcess create_model() called ==================================
2023-07-06 16:49:20,491:INFO:Initializing create_model()
2023-07-06 16:49:20,491:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af3f9190>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae966250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:49:20,491:INFO:Checking exceptions
2023-07-06 16:49:20,491:INFO:Importing libraries
2023-07-06 16:49:20,491:INFO:Copying training dataset
2023-07-06 16:49:20,513:INFO:Defining folds
2023-07-06 16:49:20,513:INFO:Declaring metric variables
2023-07-06 16:49:20,516:INFO:Importing untrained model
2023-07-06 16:49:20,519:INFO:Elastic Net Imported successfully
2023-07-06 16:49:20,523:INFO:Starting cross validation
2023-07-06 16:49:20,524:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:49:20,901:INFO:Calculating mean and std
2023-07-06 16:49:20,903:INFO:Creating metrics dataframe
2023-07-06 16:49:20,922:INFO:Uploading results into container
2023-07-06 16:49:20,923:INFO:Uploading model into container now
2023-07-06 16:49:20,924:INFO:_master_model_container: 4
2023-07-06 16:49:20,924:INFO:_display_container: 2
2023-07-06 16:49:20,924:INFO:ElasticNet(random_state=2963)
2023-07-06 16:49:20,924:INFO:create_model() successfully completed......................................
2023-07-06 16:49:21,136:INFO:SubProcess create_model() end ==================================
2023-07-06 16:49:21,136:INFO:Creating metrics dataframe
2023-07-06 16:49:21,145:INFO:Initializing Least Angle Regression
2023-07-06 16:49:21,145:INFO:Total runtime is 0.07009068330128987 minutes
2023-07-06 16:49:21,147:INFO:SubProcess create_model() called ==================================
2023-07-06 16:49:21,148:INFO:Initializing create_model()
2023-07-06 16:49:21,148:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af3f9190>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae966250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:49:21,148:INFO:Checking exceptions
2023-07-06 16:49:21,148:INFO:Importing libraries
2023-07-06 16:49:21,148:INFO:Copying training dataset
2023-07-06 16:49:21,171:INFO:Defining folds
2023-07-06 16:49:21,171:INFO:Declaring metric variables
2023-07-06 16:49:21,174:INFO:Importing untrained model
2023-07-06 16:49:21,177:INFO:Least Angle Regression Imported successfully
2023-07-06 16:49:21,181:INFO:Starting cross validation
2023-07-06 16:49:21,182:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:49:21,428:INFO:Calculating mean and std
2023-07-06 16:49:21,430:INFO:Creating metrics dataframe
2023-07-06 16:49:21,483:INFO:Uploading results into container
2023-07-06 16:49:21,483:INFO:Uploading model into container now
2023-07-06 16:49:21,484:INFO:_master_model_container: 5
2023-07-06 16:49:21,484:INFO:_display_container: 2
2023-07-06 16:49:21,484:INFO:Lars(random_state=2963)
2023-07-06 16:49:21,485:INFO:create_model() successfully completed......................................
2023-07-06 16:49:21,691:INFO:SubProcess create_model() end ==================================
2023-07-06 16:49:21,691:INFO:Creating metrics dataframe
2023-07-06 16:49:21,700:INFO:Initializing Lasso Least Angle Regression
2023-07-06 16:49:21,700:INFO:Total runtime is 0.07933855454126992 minutes
2023-07-06 16:49:21,702:INFO:SubProcess create_model() called ==================================
2023-07-06 16:49:21,703:INFO:Initializing create_model()
2023-07-06 16:49:21,703:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af3f9190>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae966250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:49:21,703:INFO:Checking exceptions
2023-07-06 16:49:21,703:INFO:Importing libraries
2023-07-06 16:49:21,703:INFO:Copying training dataset
2023-07-06 16:49:21,730:INFO:Defining folds
2023-07-06 16:49:21,730:INFO:Declaring metric variables
2023-07-06 16:49:21,734:INFO:Importing untrained model
2023-07-06 16:49:21,736:INFO:Lasso Least Angle Regression Imported successfully
2023-07-06 16:49:21,741:INFO:Starting cross validation
2023-07-06 16:49:21,741:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:49:21,987:INFO:Calculating mean and std
2023-07-06 16:49:21,988:INFO:Creating metrics dataframe
2023-07-06 16:49:22,030:INFO:Uploading results into container
2023-07-06 16:49:22,031:INFO:Uploading model into container now
2023-07-06 16:49:22,032:INFO:_master_model_container: 6
2023-07-06 16:49:22,032:INFO:_display_container: 2
2023-07-06 16:49:22,032:INFO:LassoLars(random_state=2963)
2023-07-06 16:49:22,032:INFO:create_model() successfully completed......................................
2023-07-06 16:49:22,231:INFO:SubProcess create_model() end ==================================
2023-07-06 16:49:22,231:INFO:Creating metrics dataframe
2023-07-06 16:49:22,240:INFO:Initializing Orthogonal Matching Pursuit
2023-07-06 16:49:22,240:INFO:Total runtime is 0.08834535678227741 minutes
2023-07-06 16:49:22,243:INFO:SubProcess create_model() called ==================================
2023-07-06 16:49:22,243:INFO:Initializing create_model()
2023-07-06 16:49:22,243:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af3f9190>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae966250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:49:22,243:INFO:Checking exceptions
2023-07-06 16:49:22,243:INFO:Importing libraries
2023-07-06 16:49:22,243:INFO:Copying training dataset
2023-07-06 16:49:22,265:INFO:Defining folds
2023-07-06 16:49:22,265:INFO:Declaring metric variables
2023-07-06 16:49:22,269:INFO:Importing untrained model
2023-07-06 16:49:22,271:INFO:Orthogonal Matching Pursuit Imported successfully
2023-07-06 16:49:22,275:INFO:Starting cross validation
2023-07-06 16:49:22,276:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:49:22,595:INFO:Calculating mean and std
2023-07-06 16:49:22,597:INFO:Creating metrics dataframe
2023-07-06 16:49:22,615:INFO:Uploading results into container
2023-07-06 16:49:22,616:INFO:Uploading model into container now
2023-07-06 16:49:22,617:INFO:_master_model_container: 7
2023-07-06 16:49:22,617:INFO:_display_container: 2
2023-07-06 16:49:22,617:INFO:OrthogonalMatchingPursuit()
2023-07-06 16:49:22,617:INFO:create_model() successfully completed......................................
2023-07-06 16:49:22,801:INFO:SubProcess create_model() end ==================================
2023-07-06 16:49:22,801:INFO:Creating metrics dataframe
2023-07-06 16:49:22,810:INFO:Initializing Bayesian Ridge
2023-07-06 16:49:22,810:INFO:Total runtime is 0.09783958196640014 minutes
2023-07-06 16:49:22,812:INFO:SubProcess create_model() called ==================================
2023-07-06 16:49:22,813:INFO:Initializing create_model()
2023-07-06 16:49:22,813:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af3f9190>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae966250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:49:22,813:INFO:Checking exceptions
2023-07-06 16:49:22,813:INFO:Importing libraries
2023-07-06 16:49:22,813:INFO:Copying training dataset
2023-07-06 16:49:22,834:INFO:Defining folds
2023-07-06 16:49:22,835:INFO:Declaring metric variables
2023-07-06 16:49:22,838:INFO:Importing untrained model
2023-07-06 16:49:22,840:INFO:Bayesian Ridge Imported successfully
2023-07-06 16:49:22,844:INFO:Starting cross validation
2023-07-06 16:49:22,845:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:49:23,088:INFO:Calculating mean and std
2023-07-06 16:49:23,090:INFO:Creating metrics dataframe
2023-07-06 16:49:23,131:INFO:Uploading results into container
2023-07-06 16:49:23,132:INFO:Uploading model into container now
2023-07-06 16:49:23,132:INFO:_master_model_container: 8
2023-07-06 16:49:23,132:INFO:_display_container: 2
2023-07-06 16:49:23,133:INFO:BayesianRidge()
2023-07-06 16:49:23,133:INFO:create_model() successfully completed......................................
2023-07-06 16:49:23,309:INFO:SubProcess create_model() end ==================================
2023-07-06 16:49:23,309:INFO:Creating metrics dataframe
2023-07-06 16:49:23,318:INFO:Initializing Passive Aggressive Regressor
2023-07-06 16:49:23,318:INFO:Total runtime is 0.1063109517097473 minutes
2023-07-06 16:49:23,321:INFO:SubProcess create_model() called ==================================
2023-07-06 16:49:23,322:INFO:Initializing create_model()
2023-07-06 16:49:23,322:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af3f9190>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae966250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:49:23,322:INFO:Checking exceptions
2023-07-06 16:49:23,322:INFO:Importing libraries
2023-07-06 16:49:23,322:INFO:Copying training dataset
2023-07-06 16:49:23,343:INFO:Defining folds
2023-07-06 16:49:23,344:INFO:Declaring metric variables
2023-07-06 16:49:23,347:INFO:Importing untrained model
2023-07-06 16:49:23,349:INFO:Passive Aggressive Regressor Imported successfully
2023-07-06 16:49:23,354:INFO:Starting cross validation
2023-07-06 16:49:23,354:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:49:23,809:INFO:Calculating mean and std
2023-07-06 16:49:23,810:INFO:Creating metrics dataframe
2023-07-06 16:49:23,830:INFO:Uploading results into container
2023-07-06 16:49:23,830:INFO:Uploading model into container now
2023-07-06 16:49:23,831:INFO:_master_model_container: 9
2023-07-06 16:49:23,831:INFO:_display_container: 2
2023-07-06 16:49:23,832:INFO:PassiveAggressiveRegressor(random_state=2963)
2023-07-06 16:49:23,832:INFO:create_model() successfully completed......................................
2023-07-06 16:49:24,012:INFO:SubProcess create_model() end ==================================
2023-07-06 16:49:24,012:INFO:Creating metrics dataframe
2023-07-06 16:49:24,021:INFO:Initializing Huber Regressor
2023-07-06 16:49:24,021:INFO:Total runtime is 0.11803294420242308 minutes
2023-07-06 16:49:24,024:INFO:SubProcess create_model() called ==================================
2023-07-06 16:49:24,024:INFO:Initializing create_model()
2023-07-06 16:49:24,024:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af3f9190>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae966250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:49:24,024:INFO:Checking exceptions
2023-07-06 16:49:24,024:INFO:Importing libraries
2023-07-06 16:49:24,024:INFO:Copying training dataset
2023-07-06 16:49:24,046:INFO:Defining folds
2023-07-06 16:49:24,046:INFO:Declaring metric variables
2023-07-06 16:49:24,049:INFO:Importing untrained model
2023-07-06 16:49:24,052:INFO:Huber Regressor Imported successfully
2023-07-06 16:49:24,056:INFO:Starting cross validation
2023-07-06 16:49:24,057:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:49:25,077:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:49:25,088:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:49:25,113:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:49:25,131:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:49:25,140:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:49:25,148:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:49:25,150:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:49:25,160:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:49:25,182:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:49:25,201:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:49:25,240:INFO:Calculating mean and std
2023-07-06 16:49:25,242:INFO:Creating metrics dataframe
2023-07-06 16:49:25,291:INFO:Uploading results into container
2023-07-06 16:49:25,292:INFO:Uploading model into container now
2023-07-06 16:49:25,292:INFO:_master_model_container: 10
2023-07-06 16:49:25,292:INFO:_display_container: 2
2023-07-06 16:49:25,293:INFO:HuberRegressor()
2023-07-06 16:49:25,293:INFO:create_model() successfully completed......................................
2023-07-06 16:49:25,492:INFO:SubProcess create_model() end ==================================
2023-07-06 16:49:25,492:INFO:Creating metrics dataframe
2023-07-06 16:49:25,502:INFO:Initializing K Neighbors Regressor
2023-07-06 16:49:25,502:INFO:Total runtime is 0.14270535707473753 minutes
2023-07-06 16:49:25,504:INFO:SubProcess create_model() called ==================================
2023-07-06 16:49:25,505:INFO:Initializing create_model()
2023-07-06 16:49:25,505:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af3f9190>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae966250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:49:25,505:INFO:Checking exceptions
2023-07-06 16:49:25,505:INFO:Importing libraries
2023-07-06 16:49:25,505:INFO:Copying training dataset
2023-07-06 16:49:25,528:INFO:Defining folds
2023-07-06 16:49:25,528:INFO:Declaring metric variables
2023-07-06 16:49:25,531:INFO:Importing untrained model
2023-07-06 16:49:25,534:INFO:K Neighbors Regressor Imported successfully
2023-07-06 16:49:25,538:INFO:Starting cross validation
2023-07-06 16:49:25,539:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:49:26,268:INFO:Calculating mean and std
2023-07-06 16:49:26,270:INFO:Creating metrics dataframe
2023-07-06 16:49:26,313:INFO:Uploading results into container
2023-07-06 16:49:26,314:INFO:Uploading model into container now
2023-07-06 16:49:26,314:INFO:_master_model_container: 11
2023-07-06 16:49:26,314:INFO:_display_container: 2
2023-07-06 16:49:26,314:INFO:KNeighborsRegressor(n_jobs=-1)
2023-07-06 16:49:26,314:INFO:create_model() successfully completed......................................
2023-07-06 16:49:26,469:INFO:SubProcess create_model() end ==================================
2023-07-06 16:49:26,469:INFO:Creating metrics dataframe
2023-07-06 16:49:26,479:INFO:Initializing Decision Tree Regressor
2023-07-06 16:49:26,479:INFO:Total runtime is 0.1589927275975545 minutes
2023-07-06 16:49:26,482:INFO:SubProcess create_model() called ==================================
2023-07-06 16:49:26,482:INFO:Initializing create_model()
2023-07-06 16:49:26,482:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af3f9190>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae966250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:49:26,482:INFO:Checking exceptions
2023-07-06 16:49:26,482:INFO:Importing libraries
2023-07-06 16:49:26,482:INFO:Copying training dataset
2023-07-06 16:49:26,504:INFO:Defining folds
2023-07-06 16:49:26,505:INFO:Declaring metric variables
2023-07-06 16:49:26,508:INFO:Importing untrained model
2023-07-06 16:49:26,511:INFO:Decision Tree Regressor Imported successfully
2023-07-06 16:49:26,515:INFO:Starting cross validation
2023-07-06 16:49:26,516:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:49:27,763:INFO:Calculating mean and std
2023-07-06 16:49:27,765:INFO:Creating metrics dataframe
2023-07-06 16:49:27,786:INFO:Uploading results into container
2023-07-06 16:49:27,787:INFO:Uploading model into container now
2023-07-06 16:49:27,788:INFO:_master_model_container: 12
2023-07-06 16:49:27,788:INFO:_display_container: 2
2023-07-06 16:49:27,788:INFO:DecisionTreeRegressor(random_state=2963)
2023-07-06 16:49:27,788:INFO:create_model() successfully completed......................................
2023-07-06 16:49:27,963:INFO:SubProcess create_model() end ==================================
2023-07-06 16:49:27,963:INFO:Creating metrics dataframe
2023-07-06 16:49:27,973:INFO:Initializing Random Forest Regressor
2023-07-06 16:49:27,973:INFO:Total runtime is 0.18389986753463744 minutes
2023-07-06 16:49:27,976:INFO:SubProcess create_model() called ==================================
2023-07-06 16:49:27,976:INFO:Initializing create_model()
2023-07-06 16:49:27,976:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af3f9190>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae966250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:49:27,976:INFO:Checking exceptions
2023-07-06 16:49:27,977:INFO:Importing libraries
2023-07-06 16:49:27,977:INFO:Copying training dataset
2023-07-06 16:49:27,999:INFO:Defining folds
2023-07-06 16:49:27,999:INFO:Declaring metric variables
2023-07-06 16:49:28,002:INFO:Importing untrained model
2023-07-06 16:49:28,005:INFO:Random Forest Regressor Imported successfully
2023-07-06 16:49:28,010:INFO:Starting cross validation
2023-07-06 16:49:28,011:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:49:40,153:INFO:Calculating mean and std
2023-07-06 16:49:40,155:INFO:Creating metrics dataframe
2023-07-06 16:49:40,172:INFO:Uploading results into container
2023-07-06 16:49:40,173:INFO:Uploading model into container now
2023-07-06 16:49:40,174:INFO:_master_model_container: 13
2023-07-06 16:49:40,174:INFO:_display_container: 2
2023-07-06 16:49:40,174:INFO:RandomForestRegressor(n_jobs=-1, random_state=2963)
2023-07-06 16:49:40,175:INFO:create_model() successfully completed......................................
2023-07-06 16:49:40,359:INFO:SubProcess create_model() end ==================================
2023-07-06 16:49:40,359:INFO:Creating metrics dataframe
2023-07-06 16:49:40,369:INFO:Initializing Extra Trees Regressor
2023-07-06 16:49:40,369:INFO:Total runtime is 0.390488330523173 minutes
2023-07-06 16:49:40,371:INFO:SubProcess create_model() called ==================================
2023-07-06 16:49:40,372:INFO:Initializing create_model()
2023-07-06 16:49:40,372:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af3f9190>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae966250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:49:40,372:INFO:Checking exceptions
2023-07-06 16:49:40,372:INFO:Importing libraries
2023-07-06 16:49:40,372:INFO:Copying training dataset
2023-07-06 16:49:40,393:INFO:Defining folds
2023-07-06 16:49:40,393:INFO:Declaring metric variables
2023-07-06 16:49:40,396:INFO:Importing untrained model
2023-07-06 16:49:40,400:INFO:Extra Trees Regressor Imported successfully
2023-07-06 16:49:40,404:INFO:Starting cross validation
2023-07-06 16:49:40,405:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:49:46,579:INFO:Calculating mean and std
2023-07-06 16:49:46,581:INFO:Creating metrics dataframe
2023-07-06 16:49:46,596:INFO:Uploading results into container
2023-07-06 16:49:46,597:INFO:Uploading model into container now
2023-07-06 16:49:46,597:INFO:_master_model_container: 14
2023-07-06 16:49:46,597:INFO:_display_container: 2
2023-07-06 16:49:46,598:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2963)
2023-07-06 16:49:46,598:INFO:create_model() successfully completed......................................
2023-07-06 16:49:46,788:INFO:SubProcess create_model() end ==================================
2023-07-06 16:49:46,789:INFO:Creating metrics dataframe
2023-07-06 16:49:46,799:INFO:Initializing AdaBoost Regressor
2023-07-06 16:49:46,799:INFO:Total runtime is 0.4976608912150065 minutes
2023-07-06 16:49:46,802:INFO:SubProcess create_model() called ==================================
2023-07-06 16:49:46,802:INFO:Initializing create_model()
2023-07-06 16:49:46,802:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af3f9190>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae966250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:49:46,802:INFO:Checking exceptions
2023-07-06 16:49:46,802:INFO:Importing libraries
2023-07-06 16:49:46,802:INFO:Copying training dataset
2023-07-06 16:49:46,825:INFO:Defining folds
2023-07-06 16:49:46,825:INFO:Declaring metric variables
2023-07-06 16:49:46,828:INFO:Importing untrained model
2023-07-06 16:49:46,831:INFO:AdaBoost Regressor Imported successfully
2023-07-06 16:49:46,835:INFO:Starting cross validation
2023-07-06 16:49:46,836:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:49:55,563:INFO:Calculating mean and std
2023-07-06 16:49:55,565:INFO:Creating metrics dataframe
2023-07-06 16:49:55,584:INFO:Uploading results into container
2023-07-06 16:49:55,585:INFO:Uploading model into container now
2023-07-06 16:49:55,585:INFO:_master_model_container: 15
2023-07-06 16:49:55,586:INFO:_display_container: 2
2023-07-06 16:49:55,586:INFO:AdaBoostRegressor(random_state=2963)
2023-07-06 16:49:55,586:INFO:create_model() successfully completed......................................
2023-07-06 16:49:55,783:INFO:SubProcess create_model() end ==================================
2023-07-06 16:49:55,783:INFO:Creating metrics dataframe
2023-07-06 16:49:55,794:INFO:Initializing Gradient Boosting Regressor
2023-07-06 16:49:55,794:INFO:Total runtime is 0.6475766420364379 minutes
2023-07-06 16:49:55,797:INFO:SubProcess create_model() called ==================================
2023-07-06 16:49:55,797:INFO:Initializing create_model()
2023-07-06 16:49:55,797:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af3f9190>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae966250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:49:55,797:INFO:Checking exceptions
2023-07-06 16:49:55,797:INFO:Importing libraries
2023-07-06 16:49:55,797:INFO:Copying training dataset
2023-07-06 16:49:55,819:INFO:Defining folds
2023-07-06 16:49:55,819:INFO:Declaring metric variables
2023-07-06 16:49:55,823:INFO:Importing untrained model
2023-07-06 16:49:55,825:INFO:Gradient Boosting Regressor Imported successfully
2023-07-06 16:49:55,830:INFO:Starting cross validation
2023-07-06 16:49:55,831:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:50:20,691:INFO:Calculating mean and std
2023-07-06 16:50:20,693:INFO:Creating metrics dataframe
2023-07-06 16:50:20,710:INFO:Uploading results into container
2023-07-06 16:50:20,711:INFO:Uploading model into container now
2023-07-06 16:50:20,711:INFO:_master_model_container: 16
2023-07-06 16:50:20,711:INFO:_display_container: 2
2023-07-06 16:50:20,712:INFO:GradientBoostingRegressor(random_state=2963)
2023-07-06 16:50:20,712:INFO:create_model() successfully completed......................................
2023-07-06 16:50:20,895:INFO:SubProcess create_model() end ==================================
2023-07-06 16:50:20,895:INFO:Creating metrics dataframe
2023-07-06 16:50:20,906:INFO:Initializing Light Gradient Boosting Machine
2023-07-06 16:50:20,906:INFO:Total runtime is 1.06610852877299 minutes
2023-07-06 16:50:20,908:INFO:SubProcess create_model() called ==================================
2023-07-06 16:50:20,909:INFO:Initializing create_model()
2023-07-06 16:50:20,909:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af3f9190>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae966250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:50:20,909:INFO:Checking exceptions
2023-07-06 16:50:20,909:INFO:Importing libraries
2023-07-06 16:50:20,909:INFO:Copying training dataset
2023-07-06 16:50:20,930:INFO:Defining folds
2023-07-06 16:50:20,931:INFO:Declaring metric variables
2023-07-06 16:50:20,934:INFO:Importing untrained model
2023-07-06 16:50:20,937:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-06 16:50:20,942:INFO:Starting cross validation
2023-07-06 16:50:20,942:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:50:22,039:INFO:Calculating mean and std
2023-07-06 16:50:22,041:INFO:Creating metrics dataframe
2023-07-06 16:50:22,086:INFO:Uploading results into container
2023-07-06 16:50:22,087:INFO:Uploading model into container now
2023-07-06 16:50:22,088:INFO:_master_model_container: 17
2023-07-06 16:50:22,088:INFO:_display_container: 2
2023-07-06 16:50:22,088:INFO:LGBMRegressor(random_state=2963)
2023-07-06 16:50:22,088:INFO:create_model() successfully completed......................................
2023-07-06 16:50:22,268:INFO:SubProcess create_model() end ==================================
2023-07-06 16:50:22,268:INFO:Creating metrics dataframe
2023-07-06 16:50:22,279:INFO:Initializing Dummy Regressor
2023-07-06 16:50:22,279:INFO:Total runtime is 1.0889920949935914 minutes
2023-07-06 16:50:22,281:INFO:SubProcess create_model() called ==================================
2023-07-06 16:50:22,282:INFO:Initializing create_model()
2023-07-06 16:50:22,282:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af3f9190>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae966250>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:50:22,282:INFO:Checking exceptions
2023-07-06 16:50:22,282:INFO:Importing libraries
2023-07-06 16:50:22,282:INFO:Copying training dataset
2023-07-06 16:50:22,303:INFO:Defining folds
2023-07-06 16:50:22,303:INFO:Declaring metric variables
2023-07-06 16:50:22,307:INFO:Importing untrained model
2023-07-06 16:50:22,309:INFO:Dummy Regressor Imported successfully
2023-07-06 16:50:22,314:INFO:Starting cross validation
2023-07-06 16:50:22,315:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:50:22,589:INFO:Calculating mean and std
2023-07-06 16:50:22,591:INFO:Creating metrics dataframe
2023-07-06 16:50:22,634:INFO:Uploading results into container
2023-07-06 16:50:22,635:INFO:Uploading model into container now
2023-07-06 16:50:22,635:INFO:_master_model_container: 18
2023-07-06 16:50:22,635:INFO:_display_container: 2
2023-07-06 16:50:22,636:INFO:DummyRegressor()
2023-07-06 16:50:22,636:INFO:create_model() successfully completed......................................
2023-07-06 16:50:22,839:INFO:SubProcess create_model() end ==================================
2023-07-06 16:50:22,839:INFO:Creating metrics dataframe
2023-07-06 16:50:22,860:INFO:Initializing create_model()
2023-07-06 16:50:22,860:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25af3f9190>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2963), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:50:22,860:INFO:Checking exceptions
2023-07-06 16:50:22,861:INFO:Importing libraries
2023-07-06 16:50:22,862:INFO:Copying training dataset
2023-07-06 16:50:22,882:INFO:Defining folds
2023-07-06 16:50:22,883:INFO:Declaring metric variables
2023-07-06 16:50:22,883:INFO:Importing untrained model
2023-07-06 16:50:22,883:INFO:Declaring custom model
2023-07-06 16:50:22,884:INFO:Extra Trees Regressor Imported successfully
2023-07-06 16:50:22,884:INFO:Cross validation set to False
2023-07-06 16:50:22,884:INFO:Fitting Model
2023-07-06 16:50:24,092:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2963)
2023-07-06 16:50:24,092:INFO:create_model() successfully completed......................................
2023-07-06 16:50:24,317:INFO:_master_model_container: 18
2023-07-06 16:50:24,317:INFO:_display_container: 2
2023-07-06 16:50:24,317:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2963)
2023-07-06 16:50:24,317:INFO:compare_models() successfully completed......................................
2023-07-06 16:50:24,886:INFO:PyCaret RegressionExperiment
2023-07-06 16:50:24,886:INFO:Logging name: reg-default-name
2023-07-06 16:50:24,886:INFO:ML Usecase: MLUsecase.REGRESSION
2023-07-06 16:50:24,886:INFO:version 3.0.4
2023-07-06 16:50:24,886:INFO:Initializing setup()
2023-07-06 16:50:24,886:INFO:self.USI: af70
2023-07-06 16:50:24,886:INFO:self._variable_keys: {'pipeline', 'fold_groups_param', 'log_plots_param', '_ml_usecase', 'memory', 'transform_target_param', 'logging_param', 'y', 'USI', 'data', 'target_param', 'html_param', 'fold_generator', 'X', 'n_jobs_param', 'X_test', 'y_test', 'exp_id', 'X_train', 'exp_name_log', 'gpu_n_jobs_param', 'seed', 'idx', 'gpu_param', 'y_train', '_available_plots', 'fold_shuffle_param'}
2023-07-06 16:50:24,886:INFO:Checking environment
2023-07-06 16:50:24,886:INFO:python_version: 3.9.16
2023-07-06 16:50:24,886:INFO:python_build: ('main', 'Feb  1 2023 21:39:03')
2023-07-06 16:50:24,886:INFO:machine: x86_64
2023-07-06 16:50:24,886:INFO:platform: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 16:50:24,886:INFO:Memory: svmem(total=540878073856, available=521311899648, percent=3.6, used=16020774912, free=16721395712, active=31562915840, inactive=475966869504, buffers=2686570496, cached=505449332736, shared=22036480, slab=14269784064)
2023-07-06 16:50:24,888:INFO:Physical Core: 64
2023-07-06 16:50:24,888:INFO:Logical Core: 64
2023-07-06 16:50:24,888:INFO:Checking libraries
2023-07-06 16:50:24,888:INFO:System:
2023-07-06 16:50:24,888:INFO:    python: 3.9.16 | packaged by conda-forge | (main, Feb  1 2023, 21:39:03)  [GCC 11.3.0]
2023-07-06 16:50:24,888:INFO:executable: /home/mirlab/anaconda3/envs/misc/bin/python
2023-07-06 16:50:24,888:INFO:   machine: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 16:50:24,888:INFO:PyCaret required dependencies:
2023-07-06 16:50:24,888:INFO:                 pip: 23.1.2
2023-07-06 16:50:24,888:INFO:          setuptools: 67.7.2
2023-07-06 16:50:24,888:INFO:             pycaret: 3.0.4
2023-07-06 16:50:24,888:INFO:             IPython: 8.14.0
2023-07-06 16:50:24,888:INFO:          ipywidgets: 8.0.7
2023-07-06 16:50:24,888:INFO:                tqdm: 4.64.1
2023-07-06 16:50:24,888:INFO:               numpy: 1.23.5
2023-07-06 16:50:24,888:INFO:              pandas: 1.5.3
2023-07-06 16:50:24,888:INFO:              jinja2: 3.1.2
2023-07-06 16:50:24,888:INFO:               scipy: 1.10.1
2023-07-06 16:50:24,888:INFO:              joblib: 1.2.0
2023-07-06 16:50:24,888:INFO:             sklearn: 1.2.2
2023-07-06 16:50:24,888:INFO:                pyod: 1.1.0
2023-07-06 16:50:24,888:INFO:            imblearn: 0.10.1
2023-07-06 16:50:24,888:INFO:   category_encoders: 2.6.1
2023-07-06 16:50:24,888:INFO:            lightgbm: 3.3.5
2023-07-06 16:50:24,888:INFO:               numba: 0.57.0
2023-07-06 16:50:24,888:INFO:            requests: 2.28.1
2023-07-06 16:50:24,888:INFO:          matplotlib: 3.7.1
2023-07-06 16:50:24,888:INFO:          scikitplot: 0.3.7
2023-07-06 16:50:24,888:INFO:         yellowbrick: 1.5
2023-07-06 16:50:24,888:INFO:              plotly: 5.15.0
2023-07-06 16:50:24,889:INFO:    plotly-resampler: Not installed
2023-07-06 16:50:24,889:INFO:             kaleido: 0.2.1
2023-07-06 16:50:24,889:INFO:           schemdraw: 0.15
2023-07-06 16:50:24,889:INFO:         statsmodels: 0.14.0
2023-07-06 16:50:24,889:INFO:              sktime: 0.20.0
2023-07-06 16:50:24,889:INFO:               tbats: 1.1.3
2023-07-06 16:50:24,889:INFO:            pmdarima: 2.0.3
2023-07-06 16:50:24,889:INFO:              psutil: 5.9.5
2023-07-06 16:50:24,889:INFO:          markupsafe: 2.1.2
2023-07-06 16:50:24,889:INFO:             pickle5: Not installed
2023-07-06 16:50:24,889:INFO:         cloudpickle: 2.2.1
2023-07-06 16:50:24,889:INFO:         deprecation: 2.1.0
2023-07-06 16:50:24,889:INFO:              xxhash: 3.2.0
2023-07-06 16:50:24,889:INFO:           wurlitzer: 3.0.3
2023-07-06 16:50:24,889:INFO:PyCaret optional dependencies:
2023-07-06 16:50:24,889:INFO:                shap: Not installed
2023-07-06 16:50:24,889:INFO:           interpret: Not installed
2023-07-06 16:50:24,889:INFO:                umap: Not installed
2023-07-06 16:50:24,889:INFO:    pandas_profiling: 3.6.6
2023-07-06 16:50:24,889:INFO:  explainerdashboard: Not installed
2023-07-06 16:50:24,889:INFO:             autoviz: Not installed
2023-07-06 16:50:24,889:INFO:           fairlearn: Not installed
2023-07-06 16:50:24,889:INFO:          deepchecks: Not installed
2023-07-06 16:50:24,889:INFO:             xgboost: Not installed
2023-07-06 16:50:24,889:INFO:            catboost: Not installed
2023-07-06 16:50:24,889:INFO:              kmodes: Not installed
2023-07-06 16:50:24,889:INFO:             mlxtend: Not installed
2023-07-06 16:50:24,889:INFO:       statsforecast: Not installed
2023-07-06 16:50:24,889:INFO:        tune_sklearn: Not installed
2023-07-06 16:50:24,889:INFO:                 ray: Not installed
2023-07-06 16:50:24,889:INFO:            hyperopt: Not installed
2023-07-06 16:50:24,889:INFO:              optuna: 3.1.1
2023-07-06 16:50:24,889:INFO:               skopt: Not installed
2023-07-06 16:50:24,889:INFO:              mlflow: Not installed
2023-07-06 16:50:24,889:INFO:              gradio: Not installed
2023-07-06 16:50:24,889:INFO:             fastapi: Not installed
2023-07-06 16:50:24,889:INFO:             uvicorn: Not installed
2023-07-06 16:50:24,889:INFO:              m2cgen: Not installed
2023-07-06 16:50:24,889:INFO:           evidently: Not installed
2023-07-06 16:50:24,889:INFO:               fugue: Not installed
2023-07-06 16:50:24,889:INFO:           streamlit: 1.24.0
2023-07-06 16:50:24,889:INFO:             prophet: Not installed
2023-07-06 16:50:24,889:INFO:None
2023-07-06 16:50:24,889:INFO:Set up data.
2023-07-06 16:50:24,909:INFO:Set up train/test split.
2023-07-06 16:50:24,925:INFO:Set up index.
2023-07-06 16:50:24,928:INFO:Set up folding strategy.
2023-07-06 16:50:24,928:INFO:Assigning column types.
2023-07-06 16:50:24,937:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-06 16:50:24,937:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 16:50:24,942:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:50:24,947:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:50:25,020:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:50:25,068:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:50:25,069:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:50:25,069:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:50:25,070:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 16:50:25,074:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:50:25,079:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:50:25,153:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:50:25,201:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:50:25,201:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:50:25,201:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:50:25,202:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-07-06 16:50:25,207:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:50:25,211:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:50:25,285:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:50:25,333:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:50:25,333:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:50:25,333:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:50:25,338:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 16:50:25,343:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:50:25,416:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:50:25,463:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:50:25,464:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:50:25,464:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:50:25,464:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-07-06 16:50:25,474:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:50:25,547:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:50:25,594:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:50:25,595:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:50:25,595:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:50:25,605:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 16:50:25,677:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:50:25,725:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:50:25,725:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:50:25,725:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:50:25,726:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-07-06 16:50:25,808:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:50:25,855:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:50:25,856:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:50:25,856:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:50:25,938:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:50:25,986:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 16:50:25,986:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:50:25,986:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:50:25,987:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-06 16:50:26,069:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:50:26,117:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:50:26,117:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:50:26,199:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 16:50:26,247:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:50:26,247:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:50:26,248:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-07-06 16:50:26,378:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:50:26,378:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:50:26,508:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:50:26,508:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:50:26,509:INFO:Preparing preprocessing pipeline...
2023-07-06 16:50:26,509:INFO:Set up simple imputation.
2023-07-06 16:50:26,510:INFO:Set up column name cleaning.
2023-07-06 16:50:26,550:INFO:Finished creating preprocessing pipeline.
2023-07-06 16:50:26,554:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['PTemp_C_Max', 'AirTC_Avg', 'RH',
                                             'WS_ms_Avg', 'WindDir', 'TPM1',
                                             'TPM2.5', 'TPM10', 'GeffRef',
                                             'TempRef', 'Daylight'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-07-06 16:50:26,554:INFO:Creating final display dataframe.
2023-07-06 16:50:26,683:INFO:Setup _display_container:                     Description             Value
0                    Session id              7115
1                        Target       DN_Voltage2
2                   Target type        Regression
3           Original data shape      (144000, 12)
4        Transformed data shape      (144000, 12)
5   Transformed train set shape      (100800, 12)
6    Transformed test set shape       (43200, 12)
7              Numeric features                11
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              af70
2023-07-06 16:50:26,825:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:50:26,825:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:50:26,956:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:50:26,956:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 16:50:26,957:INFO:setup() successfully completed in 2.08s...............
2023-07-06 16:50:26,957:INFO:Initializing compare_models()
2023-07-06 16:50:26,957:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f27198c16d0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f27198c16d0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-07-06 16:50:26,957:INFO:Checking exceptions
2023-07-06 16:50:26,965:INFO:Preparing display monitor
2023-07-06 16:50:26,983:INFO:Initializing Linear Regression
2023-07-06 16:50:26,983:INFO:Total runtime is 1.5298525492350261e-06 minutes
2023-07-06 16:50:26,985:INFO:SubProcess create_model() called ==================================
2023-07-06 16:50:26,986:INFO:Initializing create_model()
2023-07-06 16:50:26,986:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f27198c16d0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197c06a0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:50:26,986:INFO:Checking exceptions
2023-07-06 16:50:26,986:INFO:Importing libraries
2023-07-06 16:50:26,986:INFO:Copying training dataset
2023-07-06 16:50:27,007:INFO:Defining folds
2023-07-06 16:50:27,007:INFO:Declaring metric variables
2023-07-06 16:50:27,010:INFO:Importing untrained model
2023-07-06 16:50:27,012:INFO:Linear Regression Imported successfully
2023-07-06 16:50:27,017:INFO:Starting cross validation
2023-07-06 16:50:27,018:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:50:28,129:INFO:Calculating mean and std
2023-07-06 16:50:28,132:INFO:Creating metrics dataframe
2023-07-06 16:50:28,181:INFO:Uploading results into container
2023-07-06 16:50:28,182:INFO:Uploading model into container now
2023-07-06 16:50:28,182:INFO:_master_model_container: 1
2023-07-06 16:50:28,182:INFO:_display_container: 2
2023-07-06 16:50:28,183:INFO:LinearRegression(n_jobs=-1)
2023-07-06 16:50:28,183:INFO:create_model() successfully completed......................................
2023-07-06 16:50:28,365:INFO:SubProcess create_model() end ==================================
2023-07-06 16:50:28,365:INFO:Creating metrics dataframe
2023-07-06 16:50:28,372:INFO:Initializing Lasso Regression
2023-07-06 16:50:28,372:INFO:Total runtime is 0.023149847984313965 minutes
2023-07-06 16:50:28,375:INFO:SubProcess create_model() called ==================================
2023-07-06 16:50:28,375:INFO:Initializing create_model()
2023-07-06 16:50:28,375:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f27198c16d0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197c06a0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:50:28,375:INFO:Checking exceptions
2023-07-06 16:50:28,375:INFO:Importing libraries
2023-07-06 16:50:28,375:INFO:Copying training dataset
2023-07-06 16:50:28,403:INFO:Defining folds
2023-07-06 16:50:28,404:INFO:Declaring metric variables
2023-07-06 16:50:28,407:INFO:Importing untrained model
2023-07-06 16:50:28,409:INFO:Lasso Regression Imported successfully
2023-07-06 16:50:28,414:INFO:Starting cross validation
2023-07-06 16:50:28,415:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:50:29,652:INFO:Calculating mean and std
2023-07-06 16:50:29,653:INFO:Creating metrics dataframe
2023-07-06 16:50:29,673:INFO:Uploading results into container
2023-07-06 16:50:29,674:INFO:Uploading model into container now
2023-07-06 16:50:29,674:INFO:_master_model_container: 2
2023-07-06 16:50:29,674:INFO:_display_container: 2
2023-07-06 16:50:29,675:INFO:Lasso(random_state=7115)
2023-07-06 16:50:29,675:INFO:create_model() successfully completed......................................
2023-07-06 16:50:29,850:INFO:SubProcess create_model() end ==================================
2023-07-06 16:50:29,851:INFO:Creating metrics dataframe
2023-07-06 16:50:29,859:INFO:Initializing Ridge Regression
2023-07-06 16:50:29,859:INFO:Total runtime is 0.04792914787928264 minutes
2023-07-06 16:50:29,861:INFO:SubProcess create_model() called ==================================
2023-07-06 16:50:29,861:INFO:Initializing create_model()
2023-07-06 16:50:29,862:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f27198c16d0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197c06a0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:50:29,862:INFO:Checking exceptions
2023-07-06 16:50:29,862:INFO:Importing libraries
2023-07-06 16:50:29,862:INFO:Copying training dataset
2023-07-06 16:50:29,883:INFO:Defining folds
2023-07-06 16:50:29,884:INFO:Declaring metric variables
2023-07-06 16:50:29,887:INFO:Importing untrained model
2023-07-06 16:50:29,889:INFO:Ridge Regression Imported successfully
2023-07-06 16:50:29,894:INFO:Starting cross validation
2023-07-06 16:50:29,895:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:50:31,010:INFO:Calculating mean and std
2023-07-06 16:50:31,012:INFO:Creating metrics dataframe
2023-07-06 16:50:31,028:INFO:Uploading results into container
2023-07-06 16:50:31,028:INFO:Uploading model into container now
2023-07-06 16:50:31,029:INFO:_master_model_container: 3
2023-07-06 16:50:31,029:INFO:_display_container: 2
2023-07-06 16:50:31,029:INFO:Ridge(random_state=7115)
2023-07-06 16:50:31,029:INFO:create_model() successfully completed......................................
2023-07-06 16:50:31,231:INFO:SubProcess create_model() end ==================================
2023-07-06 16:50:31,232:INFO:Creating metrics dataframe
2023-07-06 16:50:31,240:INFO:Initializing Elastic Net
2023-07-06 16:50:31,240:INFO:Total runtime is 0.07095200618108113 minutes
2023-07-06 16:50:31,243:INFO:SubProcess create_model() called ==================================
2023-07-06 16:50:31,243:INFO:Initializing create_model()
2023-07-06 16:50:31,243:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f27198c16d0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197c06a0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:50:31,243:INFO:Checking exceptions
2023-07-06 16:50:31,243:INFO:Importing libraries
2023-07-06 16:50:31,243:INFO:Copying training dataset
2023-07-06 16:50:31,265:INFO:Defining folds
2023-07-06 16:50:31,266:INFO:Declaring metric variables
2023-07-06 16:50:31,269:INFO:Importing untrained model
2023-07-06 16:50:31,272:INFO:Elastic Net Imported successfully
2023-07-06 16:50:31,276:INFO:Starting cross validation
2023-07-06 16:50:31,277:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:50:31,558:INFO:Calculating mean and std
2023-07-06 16:50:31,560:INFO:Creating metrics dataframe
2023-07-06 16:50:31,602:INFO:Uploading results into container
2023-07-06 16:50:31,602:INFO:Uploading model into container now
2023-07-06 16:50:31,603:INFO:_master_model_container: 4
2023-07-06 16:50:31,603:INFO:_display_container: 2
2023-07-06 16:50:31,604:INFO:ElasticNet(random_state=7115)
2023-07-06 16:50:31,604:INFO:create_model() successfully completed......................................
2023-07-06 16:50:31,818:INFO:SubProcess create_model() end ==================================
2023-07-06 16:50:31,818:INFO:Creating metrics dataframe
2023-07-06 16:50:31,828:INFO:Initializing Least Angle Regression
2023-07-06 16:50:31,828:INFO:Total runtime is 0.08075520992279053 minutes
2023-07-06 16:50:31,831:INFO:SubProcess create_model() called ==================================
2023-07-06 16:50:31,831:INFO:Initializing create_model()
2023-07-06 16:50:31,831:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f27198c16d0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197c06a0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:50:31,831:INFO:Checking exceptions
2023-07-06 16:50:31,831:INFO:Importing libraries
2023-07-06 16:50:31,832:INFO:Copying training dataset
2023-07-06 16:50:31,856:INFO:Defining folds
2023-07-06 16:50:31,857:INFO:Declaring metric variables
2023-07-06 16:50:31,860:INFO:Importing untrained model
2023-07-06 16:50:31,863:INFO:Least Angle Regression Imported successfully
2023-07-06 16:50:31,868:INFO:Starting cross validation
2023-07-06 16:50:31,869:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:50:32,090:INFO:Calculating mean and std
2023-07-06 16:50:32,092:INFO:Creating metrics dataframe
2023-07-06 16:50:32,104:INFO:Uploading results into container
2023-07-06 16:50:32,105:INFO:Uploading model into container now
2023-07-06 16:50:32,105:INFO:_master_model_container: 5
2023-07-06 16:50:32,105:INFO:_display_container: 2
2023-07-06 16:50:32,106:INFO:Lars(random_state=7115)
2023-07-06 16:50:32,106:INFO:create_model() successfully completed......................................
2023-07-06 16:50:32,290:INFO:SubProcess create_model() end ==================================
2023-07-06 16:50:32,291:INFO:Creating metrics dataframe
2023-07-06 16:50:32,299:INFO:Initializing Lasso Least Angle Regression
2023-07-06 16:50:32,300:INFO:Total runtime is 0.08861229817072551 minutes
2023-07-06 16:50:32,302:INFO:SubProcess create_model() called ==================================
2023-07-06 16:50:32,303:INFO:Initializing create_model()
2023-07-06 16:50:32,303:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f27198c16d0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197c06a0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:50:32,303:INFO:Checking exceptions
2023-07-06 16:50:32,303:INFO:Importing libraries
2023-07-06 16:50:32,303:INFO:Copying training dataset
2023-07-06 16:50:32,326:INFO:Defining folds
2023-07-06 16:50:32,326:INFO:Declaring metric variables
2023-07-06 16:50:32,330:INFO:Importing untrained model
2023-07-06 16:50:32,332:INFO:Lasso Least Angle Regression Imported successfully
2023-07-06 16:50:32,337:INFO:Starting cross validation
2023-07-06 16:50:32,338:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:50:32,681:INFO:Calculating mean and std
2023-07-06 16:50:32,682:INFO:Creating metrics dataframe
2023-07-06 16:50:32,701:INFO:Uploading results into container
2023-07-06 16:50:32,702:INFO:Uploading model into container now
2023-07-06 16:50:32,702:INFO:_master_model_container: 6
2023-07-06 16:50:32,703:INFO:_display_container: 2
2023-07-06 16:50:32,703:INFO:LassoLars(random_state=7115)
2023-07-06 16:50:32,703:INFO:create_model() successfully completed......................................
2023-07-06 16:50:32,896:INFO:SubProcess create_model() end ==================================
2023-07-06 16:50:32,896:INFO:Creating metrics dataframe
2023-07-06 16:50:32,905:INFO:Initializing Orthogonal Matching Pursuit
2023-07-06 16:50:32,905:INFO:Total runtime is 0.09870000282923382 minutes
2023-07-06 16:50:32,907:INFO:SubProcess create_model() called ==================================
2023-07-06 16:50:32,908:INFO:Initializing create_model()
2023-07-06 16:50:32,908:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f27198c16d0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197c06a0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:50:32,908:INFO:Checking exceptions
2023-07-06 16:50:32,908:INFO:Importing libraries
2023-07-06 16:50:32,908:INFO:Copying training dataset
2023-07-06 16:50:32,931:INFO:Defining folds
2023-07-06 16:50:32,931:INFO:Declaring metric variables
2023-07-06 16:50:32,934:INFO:Importing untrained model
2023-07-06 16:50:32,937:INFO:Orthogonal Matching Pursuit Imported successfully
2023-07-06 16:50:32,942:INFO:Starting cross validation
2023-07-06 16:50:32,943:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:50:33,185:INFO:Calculating mean and std
2023-07-06 16:50:33,187:INFO:Creating metrics dataframe
2023-07-06 16:50:33,230:INFO:Uploading results into container
2023-07-06 16:50:33,231:INFO:Uploading model into container now
2023-07-06 16:50:33,231:INFO:_master_model_container: 7
2023-07-06 16:50:33,231:INFO:_display_container: 2
2023-07-06 16:50:33,232:INFO:OrthogonalMatchingPursuit()
2023-07-06 16:50:33,232:INFO:create_model() successfully completed......................................
2023-07-06 16:50:33,423:INFO:SubProcess create_model() end ==================================
2023-07-06 16:50:33,424:INFO:Creating metrics dataframe
2023-07-06 16:50:33,433:INFO:Initializing Bayesian Ridge
2023-07-06 16:50:33,433:INFO:Total runtime is 0.1075025240580241 minutes
2023-07-06 16:50:33,436:INFO:SubProcess create_model() called ==================================
2023-07-06 16:50:33,436:INFO:Initializing create_model()
2023-07-06 16:50:33,436:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f27198c16d0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197c06a0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:50:33,436:INFO:Checking exceptions
2023-07-06 16:50:33,436:INFO:Importing libraries
2023-07-06 16:50:33,436:INFO:Copying training dataset
2023-07-06 16:50:33,463:INFO:Defining folds
2023-07-06 16:50:33,464:INFO:Declaring metric variables
2023-07-06 16:50:33,467:INFO:Importing untrained model
2023-07-06 16:50:33,470:INFO:Bayesian Ridge Imported successfully
2023-07-06 16:50:33,474:INFO:Starting cross validation
2023-07-06 16:50:33,475:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:50:33,718:INFO:Calculating mean and std
2023-07-06 16:50:33,720:INFO:Creating metrics dataframe
2023-07-06 16:50:33,762:INFO:Uploading results into container
2023-07-06 16:50:33,763:INFO:Uploading model into container now
2023-07-06 16:50:33,763:INFO:_master_model_container: 8
2023-07-06 16:50:33,763:INFO:_display_container: 2
2023-07-06 16:50:33,764:INFO:BayesianRidge()
2023-07-06 16:50:33,764:INFO:create_model() successfully completed......................................
2023-07-06 16:50:33,951:INFO:SubProcess create_model() end ==================================
2023-07-06 16:50:33,951:INFO:Creating metrics dataframe
2023-07-06 16:50:33,960:INFO:Initializing Passive Aggressive Regressor
2023-07-06 16:50:33,960:INFO:Total runtime is 0.11628563006718955 minutes
2023-07-06 16:50:33,963:INFO:SubProcess create_model() called ==================================
2023-07-06 16:50:33,963:INFO:Initializing create_model()
2023-07-06 16:50:33,963:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f27198c16d0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197c06a0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:50:33,963:INFO:Checking exceptions
2023-07-06 16:50:33,963:INFO:Importing libraries
2023-07-06 16:50:33,963:INFO:Copying training dataset
2023-07-06 16:50:33,986:INFO:Defining folds
2023-07-06 16:50:33,986:INFO:Declaring metric variables
2023-07-06 16:50:33,989:INFO:Importing untrained model
2023-07-06 16:50:33,992:INFO:Passive Aggressive Regressor Imported successfully
2023-07-06 16:50:33,997:INFO:Starting cross validation
2023-07-06 16:50:33,998:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:50:34,397:INFO:Calculating mean and std
2023-07-06 16:50:34,398:INFO:Creating metrics dataframe
2023-07-06 16:50:34,418:INFO:Uploading results into container
2023-07-06 16:50:34,419:INFO:Uploading model into container now
2023-07-06 16:50:34,420:INFO:_master_model_container: 9
2023-07-06 16:50:34,420:INFO:_display_container: 2
2023-07-06 16:50:34,420:INFO:PassiveAggressiveRegressor(random_state=7115)
2023-07-06 16:50:34,420:INFO:create_model() successfully completed......................................
2023-07-06 16:50:34,587:INFO:SubProcess create_model() end ==================================
2023-07-06 16:50:34,587:INFO:Creating metrics dataframe
2023-07-06 16:50:34,597:INFO:Initializing Huber Regressor
2023-07-06 16:50:34,597:INFO:Total runtime is 0.12690049012502036 minutes
2023-07-06 16:50:34,599:INFO:SubProcess create_model() called ==================================
2023-07-06 16:50:34,600:INFO:Initializing create_model()
2023-07-06 16:50:34,600:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f27198c16d0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197c06a0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:50:34,600:INFO:Checking exceptions
2023-07-06 16:50:34,600:INFO:Importing libraries
2023-07-06 16:50:34,600:INFO:Copying training dataset
2023-07-06 16:50:34,622:INFO:Defining folds
2023-07-06 16:50:34,622:INFO:Declaring metric variables
2023-07-06 16:50:34,625:INFO:Importing untrained model
2023-07-06 16:50:34,628:INFO:Huber Regressor Imported successfully
2023-07-06 16:50:34,633:INFO:Starting cross validation
2023-07-06 16:50:34,634:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:50:35,688:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:50:35,702:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:50:35,726:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:50:35,741:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:50:35,772:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:50:35,779:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:50:35,794:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:50:35,812:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:50:35,833:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:50:35,862:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 16:50:35,996:INFO:Calculating mean and std
2023-07-06 16:50:35,998:INFO:Creating metrics dataframe
2023-07-06 16:50:36,017:INFO:Uploading results into container
2023-07-06 16:50:36,018:INFO:Uploading model into container now
2023-07-06 16:50:36,018:INFO:_master_model_container: 10
2023-07-06 16:50:36,019:INFO:_display_container: 2
2023-07-06 16:50:36,019:INFO:HuberRegressor()
2023-07-06 16:50:36,019:INFO:create_model() successfully completed......................................
2023-07-06 16:50:36,178:INFO:SubProcess create_model() end ==================================
2023-07-06 16:50:36,178:INFO:Creating metrics dataframe
2023-07-06 16:50:36,187:INFO:Initializing K Neighbors Regressor
2023-07-06 16:50:36,187:INFO:Total runtime is 0.15340899229049684 minutes
2023-07-06 16:50:36,190:INFO:SubProcess create_model() called ==================================
2023-07-06 16:50:36,190:INFO:Initializing create_model()
2023-07-06 16:50:36,190:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f27198c16d0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197c06a0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:50:36,190:INFO:Checking exceptions
2023-07-06 16:50:36,191:INFO:Importing libraries
2023-07-06 16:50:36,191:INFO:Copying training dataset
2023-07-06 16:50:36,212:INFO:Defining folds
2023-07-06 16:50:36,213:INFO:Declaring metric variables
2023-07-06 16:50:36,216:INFO:Importing untrained model
2023-07-06 16:50:36,219:INFO:K Neighbors Regressor Imported successfully
2023-07-06 16:50:36,223:INFO:Starting cross validation
2023-07-06 16:50:36,224:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:50:37,122:INFO:Calculating mean and std
2023-07-06 16:50:37,124:INFO:Creating metrics dataframe
2023-07-06 16:50:37,146:INFO:Uploading results into container
2023-07-06 16:50:37,147:INFO:Uploading model into container now
2023-07-06 16:50:37,147:INFO:_master_model_container: 11
2023-07-06 16:50:37,147:INFO:_display_container: 2
2023-07-06 16:50:37,148:INFO:KNeighborsRegressor(n_jobs=-1)
2023-07-06 16:50:37,148:INFO:create_model() successfully completed......................................
2023-07-06 16:50:37,316:INFO:SubProcess create_model() end ==================================
2023-07-06 16:50:37,317:INFO:Creating metrics dataframe
2023-07-06 16:50:37,326:INFO:Initializing Decision Tree Regressor
2023-07-06 16:50:37,326:INFO:Total runtime is 0.17239255905151368 minutes
2023-07-06 16:50:37,329:INFO:SubProcess create_model() called ==================================
2023-07-06 16:50:37,329:INFO:Initializing create_model()
2023-07-06 16:50:37,329:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f27198c16d0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197c06a0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:50:37,329:INFO:Checking exceptions
2023-07-06 16:50:37,330:INFO:Importing libraries
2023-07-06 16:50:37,330:INFO:Copying training dataset
2023-07-06 16:50:37,351:INFO:Defining folds
2023-07-06 16:50:37,352:INFO:Declaring metric variables
2023-07-06 16:50:37,355:INFO:Importing untrained model
2023-07-06 16:50:37,357:INFO:Decision Tree Regressor Imported successfully
2023-07-06 16:50:37,362:INFO:Starting cross validation
2023-07-06 16:50:37,363:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:50:38,571:INFO:Calculating mean and std
2023-07-06 16:50:38,573:INFO:Creating metrics dataframe
2023-07-06 16:50:38,596:INFO:Uploading results into container
2023-07-06 16:50:38,597:INFO:Uploading model into container now
2023-07-06 16:50:38,598:INFO:_master_model_container: 12
2023-07-06 16:50:38,605:INFO:_display_container: 2
2023-07-06 16:50:38,605:INFO:DecisionTreeRegressor(random_state=7115)
2023-07-06 16:50:38,606:INFO:create_model() successfully completed......................................
2023-07-06 16:50:38,792:INFO:SubProcess create_model() end ==================================
2023-07-06 16:50:38,793:INFO:Creating metrics dataframe
2023-07-06 16:50:38,803:INFO:Initializing Random Forest Regressor
2023-07-06 16:50:38,803:INFO:Total runtime is 0.19699958960215253 minutes
2023-07-06 16:50:38,805:INFO:SubProcess create_model() called ==================================
2023-07-06 16:50:38,806:INFO:Initializing create_model()
2023-07-06 16:50:38,806:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f27198c16d0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197c06a0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:50:38,806:INFO:Checking exceptions
2023-07-06 16:50:38,806:INFO:Importing libraries
2023-07-06 16:50:38,806:INFO:Copying training dataset
2023-07-06 16:50:38,828:INFO:Defining folds
2023-07-06 16:50:38,828:INFO:Declaring metric variables
2023-07-06 16:50:38,831:INFO:Importing untrained model
2023-07-06 16:50:38,834:INFO:Random Forest Regressor Imported successfully
2023-07-06 16:50:38,839:INFO:Starting cross validation
2023-07-06 16:50:38,840:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:50:52,449:INFO:Calculating mean and std
2023-07-06 16:50:52,451:INFO:Creating metrics dataframe
2023-07-06 16:50:52,488:INFO:Uploading results into container
2023-07-06 16:50:52,489:INFO:Uploading model into container now
2023-07-06 16:50:52,490:INFO:_master_model_container: 13
2023-07-06 16:50:52,490:INFO:_display_container: 2
2023-07-06 16:50:52,490:INFO:RandomForestRegressor(n_jobs=-1, random_state=7115)
2023-07-06 16:50:52,490:INFO:create_model() successfully completed......................................
2023-07-06 16:50:52,654:INFO:SubProcess create_model() end ==================================
2023-07-06 16:50:52,654:INFO:Creating metrics dataframe
2023-07-06 16:50:52,664:INFO:Initializing Extra Trees Regressor
2023-07-06 16:50:52,664:INFO:Total runtime is 0.4280145565668742 minutes
2023-07-06 16:50:52,666:INFO:SubProcess create_model() called ==================================
2023-07-06 16:50:52,667:INFO:Initializing create_model()
2023-07-06 16:50:52,667:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f27198c16d0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197c06a0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:50:52,667:INFO:Checking exceptions
2023-07-06 16:50:52,667:INFO:Importing libraries
2023-07-06 16:50:52,667:INFO:Copying training dataset
2023-07-06 16:50:52,688:INFO:Defining folds
2023-07-06 16:50:52,689:INFO:Declaring metric variables
2023-07-06 16:50:52,692:INFO:Importing untrained model
2023-07-06 16:50:52,695:INFO:Extra Trees Regressor Imported successfully
2023-07-06 16:50:52,699:INFO:Starting cross validation
2023-07-06 16:50:52,700:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:50:52,779:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/joblib/externals/loky/process_executor.py:700: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  warnings.warn(

2023-07-06 16:50:57,933:INFO:Calculating mean and std
2023-07-06 16:50:57,936:INFO:Creating metrics dataframe
2023-07-06 16:50:57,954:INFO:Uploading results into container
2023-07-06 16:50:57,955:INFO:Uploading model into container now
2023-07-06 16:50:57,955:INFO:_master_model_container: 14
2023-07-06 16:50:57,955:INFO:_display_container: 2
2023-07-06 16:50:57,956:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=7115)
2023-07-06 16:50:57,956:INFO:create_model() successfully completed......................................
2023-07-06 16:50:58,149:INFO:SubProcess create_model() end ==================================
2023-07-06 16:50:58,149:INFO:Creating metrics dataframe
2023-07-06 16:50:58,160:INFO:Initializing AdaBoost Regressor
2023-07-06 16:50:58,160:INFO:Total runtime is 0.5196194926897685 minutes
2023-07-06 16:50:58,163:INFO:SubProcess create_model() called ==================================
2023-07-06 16:50:58,163:INFO:Initializing create_model()
2023-07-06 16:50:58,163:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f27198c16d0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197c06a0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:50:58,163:INFO:Checking exceptions
2023-07-06 16:50:58,163:INFO:Importing libraries
2023-07-06 16:50:58,163:INFO:Copying training dataset
2023-07-06 16:50:58,189:INFO:Defining folds
2023-07-06 16:50:58,189:INFO:Declaring metric variables
2023-07-06 16:50:58,192:INFO:Importing untrained model
2023-07-06 16:50:58,194:INFO:AdaBoost Regressor Imported successfully
2023-07-06 16:50:58,199:INFO:Starting cross validation
2023-07-06 16:50:58,200:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:50:58,477:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/joblib/externals/loky/process_executor.py:700: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  warnings.warn(

2023-07-06 16:51:06,649:INFO:Calculating mean and std
2023-07-06 16:51:06,651:INFO:Creating metrics dataframe
2023-07-06 16:51:06,699:INFO:Uploading results into container
2023-07-06 16:51:06,700:INFO:Uploading model into container now
2023-07-06 16:51:06,701:INFO:_master_model_container: 15
2023-07-06 16:51:06,701:INFO:_display_container: 2
2023-07-06 16:51:06,701:INFO:AdaBoostRegressor(random_state=7115)
2023-07-06 16:51:06,702:INFO:create_model() successfully completed......................................
2023-07-06 16:51:06,894:INFO:SubProcess create_model() end ==================================
2023-07-06 16:51:06,894:INFO:Creating metrics dataframe
2023-07-06 16:51:06,905:INFO:Initializing Gradient Boosting Regressor
2023-07-06 16:51:06,905:INFO:Total runtime is 0.6653734723726908 minutes
2023-07-06 16:51:06,908:INFO:SubProcess create_model() called ==================================
2023-07-06 16:51:06,908:INFO:Initializing create_model()
2023-07-06 16:51:06,909:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f27198c16d0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197c06a0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:51:06,909:INFO:Checking exceptions
2023-07-06 16:51:06,909:INFO:Importing libraries
2023-07-06 16:51:06,909:INFO:Copying training dataset
2023-07-06 16:51:06,931:INFO:Defining folds
2023-07-06 16:51:06,931:INFO:Declaring metric variables
2023-07-06 16:51:06,934:INFO:Importing untrained model
2023-07-06 16:51:06,937:INFO:Gradient Boosting Regressor Imported successfully
2023-07-06 16:51:06,942:INFO:Starting cross validation
2023-07-06 16:51:06,943:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:51:31,897:INFO:Calculating mean and std
2023-07-06 16:51:31,900:INFO:Creating metrics dataframe
2023-07-06 16:51:31,944:INFO:Uploading results into container
2023-07-06 16:51:31,945:INFO:Uploading model into container now
2023-07-06 16:51:31,946:INFO:_master_model_container: 16
2023-07-06 16:51:31,946:INFO:_display_container: 2
2023-07-06 16:51:31,947:INFO:GradientBoostingRegressor(random_state=7115)
2023-07-06 16:51:31,947:INFO:create_model() successfully completed......................................
2023-07-06 16:51:32,160:INFO:SubProcess create_model() end ==================================
2023-07-06 16:51:32,161:INFO:Creating metrics dataframe
2023-07-06 16:51:32,172:INFO:Initializing Light Gradient Boosting Machine
2023-07-06 16:51:32,172:INFO:Total runtime is 1.0864803552627564 minutes
2023-07-06 16:51:32,174:INFO:SubProcess create_model() called ==================================
2023-07-06 16:51:32,175:INFO:Initializing create_model()
2023-07-06 16:51:32,175:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f27198c16d0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197c06a0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:51:32,175:INFO:Checking exceptions
2023-07-06 16:51:32,175:INFO:Importing libraries
2023-07-06 16:51:32,175:INFO:Copying training dataset
2023-07-06 16:51:32,197:INFO:Defining folds
2023-07-06 16:51:32,197:INFO:Declaring metric variables
2023-07-06 16:51:32,201:INFO:Importing untrained model
2023-07-06 16:51:32,204:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-06 16:51:32,208:INFO:Starting cross validation
2023-07-06 16:51:32,209:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:51:33,358:INFO:Calculating mean and std
2023-07-06 16:51:33,360:INFO:Creating metrics dataframe
2023-07-06 16:51:33,410:INFO:Uploading results into container
2023-07-06 16:51:33,411:INFO:Uploading model into container now
2023-07-06 16:51:33,411:INFO:_master_model_container: 17
2023-07-06 16:51:33,411:INFO:_display_container: 2
2023-07-06 16:51:33,412:INFO:LGBMRegressor(random_state=7115)
2023-07-06 16:51:33,412:INFO:create_model() successfully completed......................................
2023-07-06 16:51:33,603:INFO:SubProcess create_model() end ==================================
2023-07-06 16:51:33,603:INFO:Creating metrics dataframe
2023-07-06 16:51:33,614:INFO:Initializing Dummy Regressor
2023-07-06 16:51:33,614:INFO:Total runtime is 1.1105225602785747 minutes
2023-07-06 16:51:33,617:INFO:SubProcess create_model() called ==================================
2023-07-06 16:51:33,617:INFO:Initializing create_model()
2023-07-06 16:51:33,617:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f27198c16d0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197c06a0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:51:33,617:INFO:Checking exceptions
2023-07-06 16:51:33,617:INFO:Importing libraries
2023-07-06 16:51:33,617:INFO:Copying training dataset
2023-07-06 16:51:33,640:INFO:Defining folds
2023-07-06 16:51:33,640:INFO:Declaring metric variables
2023-07-06 16:51:33,643:INFO:Importing untrained model
2023-07-06 16:51:33,646:INFO:Dummy Regressor Imported successfully
2023-07-06 16:51:33,650:INFO:Starting cross validation
2023-07-06 16:51:33,651:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 16:51:34,005:INFO:Calculating mean and std
2023-07-06 16:51:34,007:INFO:Creating metrics dataframe
2023-07-06 16:51:34,025:INFO:Uploading results into container
2023-07-06 16:51:34,026:INFO:Uploading model into container now
2023-07-06 16:51:34,027:INFO:_master_model_container: 18
2023-07-06 16:51:34,027:INFO:_display_container: 2
2023-07-06 16:51:34,027:INFO:DummyRegressor()
2023-07-06 16:51:34,027:INFO:create_model() successfully completed......................................
2023-07-06 16:51:34,212:INFO:SubProcess create_model() end ==================================
2023-07-06 16:51:34,212:INFO:Creating metrics dataframe
2023-07-06 16:51:34,231:INFO:Initializing create_model()
2023-07-06 16:51:34,231:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f27198c16d0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=7115), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-06 16:51:34,231:INFO:Checking exceptions
2023-07-06 16:51:34,233:INFO:Importing libraries
2023-07-06 16:51:34,233:INFO:Copying training dataset
2023-07-06 16:51:34,258:INFO:Defining folds
2023-07-06 16:51:34,258:INFO:Declaring metric variables
2023-07-06 16:51:34,258:INFO:Importing untrained model
2023-07-06 16:51:34,258:INFO:Declaring custom model
2023-07-06 16:51:34,259:INFO:Extra Trees Regressor Imported successfully
2023-07-06 16:51:34,260:INFO:Cross validation set to False
2023-07-06 16:51:34,260:INFO:Fitting Model
2023-07-06 16:51:35,675:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=7115)
2023-07-06 16:51:35,675:INFO:create_model() successfully completed......................................
2023-07-06 16:51:35,881:INFO:_master_model_container: 18
2023-07-06 16:51:35,881:INFO:_display_container: 2
2023-07-06 16:51:35,881:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=7115)
2023-07-06 16:51:35,881:INFO:compare_models() successfully completed......................................
2023-07-06 17:10:15,041:INFO:PyCaret RegressionExperiment
2023-07-06 17:10:15,041:INFO:Logging name: reg-default-name
2023-07-06 17:10:15,041:INFO:ML Usecase: MLUsecase.REGRESSION
2023-07-06 17:10:15,041:INFO:version 3.0.4
2023-07-06 17:10:15,041:INFO:Initializing setup()
2023-07-06 17:10:15,041:INFO:self.USI: 1a94
2023-07-06 17:10:15,041:INFO:self._variable_keys: {'pipeline', 'fold_groups_param', 'log_plots_param', '_ml_usecase', 'memory', 'transform_target_param', 'logging_param', 'y', 'USI', 'data', 'target_param', 'html_param', 'fold_generator', 'X', 'n_jobs_param', 'X_test', 'y_test', 'exp_id', 'X_train', 'exp_name_log', 'gpu_n_jobs_param', 'seed', 'idx', 'gpu_param', 'y_train', '_available_plots', 'fold_shuffle_param'}
2023-07-06 17:10:15,041:INFO:Checking environment
2023-07-06 17:10:15,041:INFO:python_version: 3.9.16
2023-07-06 17:10:15,041:INFO:python_build: ('main', 'Feb  1 2023 21:39:03')
2023-07-06 17:10:15,041:INFO:machine: x86_64
2023-07-06 17:10:15,041:INFO:platform: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 17:10:15,042:INFO:Memory: svmem(total=540878073856, available=529132310528, percent=2.2, used=8204763136, free=24304005120, active=32095600640, inactive=468094889984, buffers=2690277376, cached=505679028224, shared=21778432, slab=14238953472)
2023-07-06 17:10:15,045:INFO:Physical Core: 64
2023-07-06 17:10:15,045:INFO:Logical Core: 64
2023-07-06 17:10:15,045:INFO:Checking libraries
2023-07-06 17:10:15,045:INFO:System:
2023-07-06 17:10:15,045:INFO:    python: 3.9.16 | packaged by conda-forge | (main, Feb  1 2023, 21:39:03)  [GCC 11.3.0]
2023-07-06 17:10:15,045:INFO:executable: /home/mirlab/anaconda3/envs/misc/bin/python
2023-07-06 17:10:15,045:INFO:   machine: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 17:10:15,046:INFO:PyCaret required dependencies:
2023-07-06 17:10:15,046:INFO:                 pip: 23.1.2
2023-07-06 17:10:15,046:INFO:          setuptools: 67.7.2
2023-07-06 17:10:15,046:INFO:             pycaret: 3.0.4
2023-07-06 17:10:15,046:INFO:             IPython: 8.14.0
2023-07-06 17:10:15,046:INFO:          ipywidgets: 8.0.7
2023-07-06 17:10:15,046:INFO:                tqdm: 4.64.1
2023-07-06 17:10:15,046:INFO:               numpy: 1.23.5
2023-07-06 17:10:15,046:INFO:              pandas: 1.5.3
2023-07-06 17:10:15,046:INFO:              jinja2: 3.1.2
2023-07-06 17:10:15,046:INFO:               scipy: 1.10.1
2023-07-06 17:10:15,046:INFO:              joblib: 1.2.0
2023-07-06 17:10:15,046:INFO:             sklearn: 1.2.2
2023-07-06 17:10:15,046:INFO:                pyod: 1.1.0
2023-07-06 17:10:15,046:INFO:            imblearn: 0.10.1
2023-07-06 17:10:15,046:INFO:   category_encoders: 2.6.1
2023-07-06 17:10:15,046:INFO:            lightgbm: 3.3.5
2023-07-06 17:10:15,046:INFO:               numba: 0.57.0
2023-07-06 17:10:15,046:INFO:            requests: 2.28.1
2023-07-06 17:10:15,047:INFO:          matplotlib: 3.7.1
2023-07-06 17:10:15,047:INFO:          scikitplot: 0.3.7
2023-07-06 17:10:15,047:INFO:         yellowbrick: 1.5
2023-07-06 17:10:15,047:INFO:              plotly: 5.15.0
2023-07-06 17:10:15,047:INFO:    plotly-resampler: Not installed
2023-07-06 17:10:15,047:INFO:             kaleido: 0.2.1
2023-07-06 17:10:15,047:INFO:           schemdraw: 0.15
2023-07-06 17:10:15,047:INFO:         statsmodels: 0.14.0
2023-07-06 17:10:15,047:INFO:              sktime: 0.20.0
2023-07-06 17:10:15,047:INFO:               tbats: 1.1.3
2023-07-06 17:10:15,047:INFO:            pmdarima: 2.0.3
2023-07-06 17:10:15,047:INFO:              psutil: 5.9.5
2023-07-06 17:10:15,047:INFO:          markupsafe: 2.1.2
2023-07-06 17:10:15,047:INFO:             pickle5: Not installed
2023-07-06 17:10:15,047:INFO:         cloudpickle: 2.2.1
2023-07-06 17:10:15,047:INFO:         deprecation: 2.1.0
2023-07-06 17:10:15,047:INFO:              xxhash: 3.2.0
2023-07-06 17:10:15,047:INFO:           wurlitzer: 3.0.3
2023-07-06 17:10:15,047:INFO:PyCaret optional dependencies:
2023-07-06 17:10:15,047:INFO:                shap: Not installed
2023-07-06 17:10:15,047:INFO:           interpret: Not installed
2023-07-06 17:10:15,047:INFO:                umap: Not installed
2023-07-06 17:10:15,048:INFO:    pandas_profiling: 3.6.6
2023-07-06 17:10:15,048:INFO:  explainerdashboard: Not installed
2023-07-06 17:10:15,048:INFO:             autoviz: Not installed
2023-07-06 17:10:15,048:INFO:           fairlearn: Not installed
2023-07-06 17:10:15,048:INFO:          deepchecks: Not installed
2023-07-06 17:10:15,048:INFO:             xgboost: Not installed
2023-07-06 17:10:15,048:INFO:            catboost: Not installed
2023-07-06 17:10:15,048:INFO:              kmodes: Not installed
2023-07-06 17:10:15,048:INFO:             mlxtend: Not installed
2023-07-06 17:10:15,048:INFO:       statsforecast: Not installed
2023-07-06 17:10:15,048:INFO:        tune_sklearn: Not installed
2023-07-06 17:10:15,048:INFO:                 ray: Not installed
2023-07-06 17:10:15,048:INFO:            hyperopt: Not installed
2023-07-06 17:10:15,048:INFO:              optuna: 3.1.1
2023-07-06 17:10:15,048:INFO:               skopt: Not installed
2023-07-06 17:10:15,048:INFO:              mlflow: Not installed
2023-07-06 17:10:15,048:INFO:              gradio: Not installed
2023-07-06 17:10:15,048:INFO:             fastapi: Not installed
2023-07-06 17:10:15,048:INFO:             uvicorn: Not installed
2023-07-06 17:10:15,048:INFO:              m2cgen: Not installed
2023-07-06 17:10:15,048:INFO:           evidently: Not installed
2023-07-06 17:10:15,048:INFO:               fugue: Not installed
2023-07-06 17:10:15,048:INFO:           streamlit: 1.24.0
2023-07-06 17:10:15,048:INFO:             prophet: Not installed
2023-07-06 17:10:15,049:INFO:None
2023-07-06 17:10:15,049:INFO:Set up data.
2023-07-06 17:10:15,058:INFO:Set up train/test split.
2023-07-06 17:10:15,061:INFO:Set up index.
2023-07-06 17:10:15,062:INFO:Set up folding strategy.
2023-07-06 17:10:15,062:INFO:Assigning column types.
2023-07-06 17:10:15,065:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-06 17:10:15,065:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 17:10:15,073:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:10:15,081:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:10:15,141:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:15,191:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:10:15,191:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:15,191:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:15,192:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 17:10:15,196:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:10:15,201:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:10:15,261:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:15,309:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:10:15,309:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:15,309:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:15,309:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-07-06 17:10:15,314:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:10:15,319:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:10:15,378:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:15,427:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:10:15,427:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:15,428:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:15,433:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:10:15,437:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:10:15,497:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:15,546:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:10:15,547:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:15,547:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:15,547:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-07-06 17:10:15,557:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:10:15,616:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:15,664:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:10:15,664:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:15,664:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:15,674:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:10:15,735:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:15,782:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:10:15,783:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:15,783:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:15,783:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-07-06 17:10:15,852:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:15,899:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:10:15,900:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:15,900:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:15,971:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:16,018:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:10:16,018:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:16,019:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:16,019:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-06 17:10:16,088:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:16,137:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:16,138:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:16,207:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:16,255:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:16,255:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:16,256:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-07-06 17:10:16,372:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:16,372:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:16,489:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:16,489:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:16,490:INFO:Preparing preprocessing pipeline...
2023-07-06 17:10:16,490:INFO:Set up simple imputation.
2023-07-06 17:10:16,490:INFO:Set up column name cleaning.
2023-07-06 17:10:16,513:INFO:Finished creating preprocessing pipeline.
2023-07-06 17:10:16,517:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['PTemp_C_Max', 'AirTC_Avg', 'RH',
                                             'WS_ms_Avg', 'TPM1', 'TPM2.5',
                                             'TPM10', 'GeffRef', 'TempRef',
                                             'Daylight', 'FT_Voltage1_back_1h',
                                             'FT_Voltage1_back_2h',
                                             'FT_Voltage1_back_3h',
                                             'FT_Voltage1_back_4h',
                                             'FT_Voltage1_back_5h',
                                             'FT_Voltage1_back_6h'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-07-06 17:10:16,517:INFO:Creating final display dataframe.
2023-07-06 17:10:16,619:INFO:Setup _display_container:                     Description             Value
0                    Session id              2931
1                        Target       FT_Voltage1
2                   Target type        Regression
3           Original data shape        (2394, 17)
4        Transformed data shape        (2394, 17)
5   Transformed train set shape        (1675, 17)
6    Transformed test set shape         (719, 17)
7              Numeric features                16
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              1a94
2023-07-06 17:10:16,743:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:16,743:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:16,867:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:16,867:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:16,868:INFO:setup() successfully completed in 1.84s...............
2023-07-06 17:10:16,868:INFO:Initializing compare_models()
2023-07-06 17:10:16,868:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae893ca0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f25ae893ca0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-07-06 17:10:16,868:INFO:Checking exceptions
2023-07-06 17:10:16,869:INFO:Preparing display monitor
2023-07-06 17:10:16,887:INFO:Initializing Linear Regression
2023-07-06 17:10:16,887:INFO:Total runtime is 3.556410471598307e-06 minutes
2023-07-06 17:10:16,889:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:16,890:INFO:Initializing create_model()
2023-07-06 17:10:16,890:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae893ca0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97a00>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:16,890:INFO:Checking exceptions
2023-07-06 17:10:16,890:INFO:Importing libraries
2023-07-06 17:10:16,890:INFO:Copying training dataset
2023-07-06 17:10:16,892:INFO:Defining folds
2023-07-06 17:10:16,892:INFO:Declaring metric variables
2023-07-06 17:10:16,895:INFO:Importing untrained model
2023-07-06 17:10:16,897:INFO:Linear Regression Imported successfully
2023-07-06 17:10:16,902:INFO:Starting cross validation
2023-07-06 17:10:16,903:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:22,194:INFO:Calculating mean and std
2023-07-06 17:10:22,197:INFO:Creating metrics dataframe
2023-07-06 17:10:22,237:INFO:Uploading results into container
2023-07-06 17:10:22,238:INFO:Uploading model into container now
2023-07-06 17:10:22,239:INFO:_master_model_container: 1
2023-07-06 17:10:22,239:INFO:_display_container: 2
2023-07-06 17:10:22,239:INFO:LinearRegression(n_jobs=-1)
2023-07-06 17:10:22,239:INFO:create_model() successfully completed......................................
2023-07-06 17:10:22,453:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:22,453:INFO:Creating metrics dataframe
2023-07-06 17:10:22,460:INFO:Initializing Lasso Regression
2023-07-06 17:10:22,460:INFO:Total runtime is 0.09288933277130128 minutes
2023-07-06 17:10:22,463:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:22,463:INFO:Initializing create_model()
2023-07-06 17:10:22,463:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae893ca0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97a00>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:22,463:INFO:Checking exceptions
2023-07-06 17:10:22,463:INFO:Importing libraries
2023-07-06 17:10:22,463:INFO:Copying training dataset
2023-07-06 17:10:22,466:INFO:Defining folds
2023-07-06 17:10:22,467:INFO:Declaring metric variables
2023-07-06 17:10:22,469:INFO:Importing untrained model
2023-07-06 17:10:22,472:INFO:Lasso Regression Imported successfully
2023-07-06 17:10:22,477:INFO:Starting cross validation
2023-07-06 17:10:22,477:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:22,576:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.872e+05, tolerance: 2.557e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:23,388:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.827e+05, tolerance: 2.581e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:23,391:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.685e+05, tolerance: 2.568e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:23,426:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.843e+05, tolerance: 2.590e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:23,431:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.707e+05, tolerance: 2.579e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:23,433:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.806e+05, tolerance: 2.606e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:23,465:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.862e+05, tolerance: 2.559e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:23,470:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.708e+05, tolerance: 2.626e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:23,472:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.754e+05, tolerance: 2.564e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:23,526:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.918e+05, tolerance: 2.548e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:23,542:INFO:Calculating mean and std
2023-07-06 17:10:23,544:INFO:Creating metrics dataframe
2023-07-06 17:10:23,592:INFO:Uploading results into container
2023-07-06 17:10:23,593:INFO:Uploading model into container now
2023-07-06 17:10:23,594:INFO:_master_model_container: 2
2023-07-06 17:10:23,594:INFO:_display_container: 2
2023-07-06 17:10:23,594:INFO:Lasso(random_state=2931)
2023-07-06 17:10:23,594:INFO:create_model() successfully completed......................................
2023-07-06 17:10:23,766:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:23,767:INFO:Creating metrics dataframe
2023-07-06 17:10:23,775:INFO:Initializing Ridge Regression
2023-07-06 17:10:23,775:INFO:Total runtime is 0.11480144262313843 minutes
2023-07-06 17:10:23,777:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:23,778:INFO:Initializing create_model()
2023-07-06 17:10:23,778:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae893ca0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97a00>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:23,778:INFO:Checking exceptions
2023-07-06 17:10:23,778:INFO:Importing libraries
2023-07-06 17:10:23,778:INFO:Copying training dataset
2023-07-06 17:10:23,781:INFO:Defining folds
2023-07-06 17:10:23,781:INFO:Declaring metric variables
2023-07-06 17:10:23,784:INFO:Importing untrained model
2023-07-06 17:10:23,786:INFO:Ridge Regression Imported successfully
2023-07-06 17:10:23,791:INFO:Starting cross validation
2023-07-06 17:10:23,792:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:24,719:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=4.70306e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-07-06 17:10:24,827:INFO:Calculating mean and std
2023-07-06 17:10:24,829:INFO:Creating metrics dataframe
2023-07-06 17:10:24,876:INFO:Uploading results into container
2023-07-06 17:10:24,877:INFO:Uploading model into container now
2023-07-06 17:10:24,878:INFO:_master_model_container: 3
2023-07-06 17:10:24,878:INFO:_display_container: 2
2023-07-06 17:10:24,878:INFO:Ridge(random_state=2931)
2023-07-06 17:10:24,878:INFO:create_model() successfully completed......................................
2023-07-06 17:10:25,037:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:25,037:INFO:Creating metrics dataframe
2023-07-06 17:10:25,045:INFO:Initializing Elastic Net
2023-07-06 17:10:25,045:INFO:Total runtime is 0.13597221771876017 minutes
2023-07-06 17:10:25,047:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:25,048:INFO:Initializing create_model()
2023-07-06 17:10:25,048:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae893ca0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97a00>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:25,048:INFO:Checking exceptions
2023-07-06 17:10:25,048:INFO:Importing libraries
2023-07-06 17:10:25,048:INFO:Copying training dataset
2023-07-06 17:10:25,051:INFO:Defining folds
2023-07-06 17:10:25,051:INFO:Declaring metric variables
2023-07-06 17:10:25,053:INFO:Importing untrained model
2023-07-06 17:10:25,056:INFO:Elastic Net Imported successfully
2023-07-06 17:10:25,060:INFO:Starting cross validation
2023-07-06 17:10:25,061:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:25,950:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.411e+05, tolerance: 2.606e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:25,983:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.374e+05, tolerance: 2.581e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:25,999:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.312e+05, tolerance: 2.579e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:26,004:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.383e+05, tolerance: 2.557e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:26,015:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.414e+05, tolerance: 2.559e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:26,033:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.323e+05, tolerance: 2.568e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:26,034:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.311e+05, tolerance: 2.626e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:26,046:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.475e+05, tolerance: 2.548e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:26,057:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.328e+05, tolerance: 2.564e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:26,089:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.423e+05, tolerance: 2.590e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:26,104:INFO:Calculating mean and std
2023-07-06 17:10:26,105:INFO:Creating metrics dataframe
2023-07-06 17:10:26,152:INFO:Uploading results into container
2023-07-06 17:10:26,153:INFO:Uploading model into container now
2023-07-06 17:10:26,154:INFO:_master_model_container: 4
2023-07-06 17:10:26,154:INFO:_display_container: 2
2023-07-06 17:10:26,154:INFO:ElasticNet(random_state=2931)
2023-07-06 17:10:26,154:INFO:create_model() successfully completed......................................
2023-07-06 17:10:26,315:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:26,315:INFO:Creating metrics dataframe
2023-07-06 17:10:26,324:INFO:Initializing Least Angle Regression
2023-07-06 17:10:26,324:INFO:Total runtime is 0.1572837750116984 minutes
2023-07-06 17:10:26,326:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:26,326:INFO:Initializing create_model()
2023-07-06 17:10:26,327:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae893ca0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97a00>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:26,327:INFO:Checking exceptions
2023-07-06 17:10:26,327:INFO:Importing libraries
2023-07-06 17:10:26,327:INFO:Copying training dataset
2023-07-06 17:10:26,330:INFO:Defining folds
2023-07-06 17:10:26,330:INFO:Declaring metric variables
2023-07-06 17:10:26,332:INFO:Importing untrained model
2023-07-06 17:10:26,334:INFO:Least Angle Regression Imported successfully
2023-07-06 17:10:26,339:INFO:Starting cross validation
2023-07-06 17:10:26,340:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:27,381:INFO:Calculating mean and std
2023-07-06 17:10:27,383:INFO:Creating metrics dataframe
2023-07-06 17:10:27,430:INFO:Uploading results into container
2023-07-06 17:10:27,430:INFO:Uploading model into container now
2023-07-06 17:10:27,431:INFO:_master_model_container: 5
2023-07-06 17:10:27,431:INFO:_display_container: 2
2023-07-06 17:10:27,431:INFO:Lars(random_state=2931)
2023-07-06 17:10:27,432:INFO:create_model() successfully completed......................................
2023-07-06 17:10:27,595:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:27,595:INFO:Creating metrics dataframe
2023-07-06 17:10:27,603:INFO:Initializing Lasso Least Angle Regression
2023-07-06 17:10:27,604:INFO:Total runtime is 0.1786142905553182 minutes
2023-07-06 17:10:27,607:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:27,607:INFO:Initializing create_model()
2023-07-06 17:10:27,607:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae893ca0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97a00>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:27,607:INFO:Checking exceptions
2023-07-06 17:10:27,607:INFO:Importing libraries
2023-07-06 17:10:27,607:INFO:Copying training dataset
2023-07-06 17:10:27,610:INFO:Defining folds
2023-07-06 17:10:27,610:INFO:Declaring metric variables
2023-07-06 17:10:27,613:INFO:Importing untrained model
2023-07-06 17:10:27,615:INFO:Lasso Least Angle Regression Imported successfully
2023-07-06 17:10:27,619:INFO:Starting cross validation
2023-07-06 17:10:27,620:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:28,676:INFO:Calculating mean and std
2023-07-06 17:10:28,679:INFO:Creating metrics dataframe
2023-07-06 17:10:28,720:INFO:Uploading results into container
2023-07-06 17:10:28,721:INFO:Uploading model into container now
2023-07-06 17:10:28,722:INFO:_master_model_container: 6
2023-07-06 17:10:28,722:INFO:_display_container: 2
2023-07-06 17:10:28,722:INFO:LassoLars(random_state=2931)
2023-07-06 17:10:28,722:INFO:create_model() successfully completed......................................
2023-07-06 17:10:28,897:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:28,897:INFO:Creating metrics dataframe
2023-07-06 17:10:28,906:INFO:Initializing Orthogonal Matching Pursuit
2023-07-06 17:10:28,906:INFO:Total runtime is 0.20032498041788738 minutes
2023-07-06 17:10:28,909:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:28,909:INFO:Initializing create_model()
2023-07-06 17:10:28,909:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae893ca0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97a00>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:28,909:INFO:Checking exceptions
2023-07-06 17:10:28,909:INFO:Importing libraries
2023-07-06 17:10:28,909:INFO:Copying training dataset
2023-07-06 17:10:28,912:INFO:Defining folds
2023-07-06 17:10:28,912:INFO:Declaring metric variables
2023-07-06 17:10:28,915:INFO:Importing untrained model
2023-07-06 17:10:28,917:INFO:Orthogonal Matching Pursuit Imported successfully
2023-07-06 17:10:28,921:INFO:Starting cross validation
2023-07-06 17:10:28,922:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:29,885:INFO:Calculating mean and std
2023-07-06 17:10:29,887:INFO:Creating metrics dataframe
2023-07-06 17:10:29,934:INFO:Uploading results into container
2023-07-06 17:10:29,935:INFO:Uploading model into container now
2023-07-06 17:10:29,935:INFO:_master_model_container: 7
2023-07-06 17:10:29,935:INFO:_display_container: 2
2023-07-06 17:10:29,936:INFO:OrthogonalMatchingPursuit()
2023-07-06 17:10:29,936:INFO:create_model() successfully completed......................................
2023-07-06 17:10:30,099:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:30,099:INFO:Creating metrics dataframe
2023-07-06 17:10:30,107:INFO:Initializing Bayesian Ridge
2023-07-06 17:10:30,108:INFO:Total runtime is 0.22034698724746704 minutes
2023-07-06 17:10:30,110:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:30,110:INFO:Initializing create_model()
2023-07-06 17:10:30,110:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae893ca0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97a00>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:30,110:INFO:Checking exceptions
2023-07-06 17:10:30,110:INFO:Importing libraries
2023-07-06 17:10:30,110:INFO:Copying training dataset
2023-07-06 17:10:30,113:INFO:Defining folds
2023-07-06 17:10:30,114:INFO:Declaring metric variables
2023-07-06 17:10:30,116:INFO:Importing untrained model
2023-07-06 17:10:30,118:INFO:Bayesian Ridge Imported successfully
2023-07-06 17:10:30,123:INFO:Starting cross validation
2023-07-06 17:10:30,123:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:30,328:INFO:Calculating mean and std
2023-07-06 17:10:30,331:INFO:Creating metrics dataframe
2023-07-06 17:10:30,372:INFO:Uploading results into container
2023-07-06 17:10:30,373:INFO:Uploading model into container now
2023-07-06 17:10:30,374:INFO:_master_model_container: 8
2023-07-06 17:10:30,374:INFO:_display_container: 2
2023-07-06 17:10:30,374:INFO:BayesianRidge()
2023-07-06 17:10:30,374:INFO:create_model() successfully completed......................................
2023-07-06 17:10:30,539:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:30,539:INFO:Creating metrics dataframe
2023-07-06 17:10:30,548:INFO:Initializing Passive Aggressive Regressor
2023-07-06 17:10:30,548:INFO:Total runtime is 0.22769195238749187 minutes
2023-07-06 17:10:30,551:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:30,551:INFO:Initializing create_model()
2023-07-06 17:10:30,551:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae893ca0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97a00>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:30,551:INFO:Checking exceptions
2023-07-06 17:10:30,551:INFO:Importing libraries
2023-07-06 17:10:30,551:INFO:Copying training dataset
2023-07-06 17:10:30,554:INFO:Defining folds
2023-07-06 17:10:30,554:INFO:Declaring metric variables
2023-07-06 17:10:30,557:INFO:Importing untrained model
2023-07-06 17:10:30,559:INFO:Passive Aggressive Regressor Imported successfully
2023-07-06 17:10:30,564:INFO:Starting cross validation
2023-07-06 17:10:30,565:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:30,752:INFO:Calculating mean and std
2023-07-06 17:10:30,754:INFO:Creating metrics dataframe
2023-07-06 17:10:30,796:INFO:Uploading results into container
2023-07-06 17:10:30,796:INFO:Uploading model into container now
2023-07-06 17:10:30,797:INFO:_master_model_container: 9
2023-07-06 17:10:30,797:INFO:_display_container: 2
2023-07-06 17:10:30,797:INFO:PassiveAggressiveRegressor(random_state=2931)
2023-07-06 17:10:30,798:INFO:create_model() successfully completed......................................
2023-07-06 17:10:30,961:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:30,962:INFO:Creating metrics dataframe
2023-07-06 17:10:30,971:INFO:Initializing Huber Regressor
2023-07-06 17:10:30,971:INFO:Total runtime is 0.23473488887151084 minutes
2023-07-06 17:10:30,973:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:30,974:INFO:Initializing create_model()
2023-07-06 17:10:30,974:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae893ca0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97a00>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:30,974:INFO:Checking exceptions
2023-07-06 17:10:30,974:INFO:Importing libraries
2023-07-06 17:10:30,974:INFO:Copying training dataset
2023-07-06 17:10:30,977:INFO:Defining folds
2023-07-06 17:10:30,977:INFO:Declaring metric variables
2023-07-06 17:10:30,980:INFO:Importing untrained model
2023-07-06 17:10:30,982:INFO:Huber Regressor Imported successfully
2023-07-06 17:10:30,986:INFO:Starting cross validation
2023-07-06 17:10:30,987:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:31,066:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:31,075:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:31,084:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:31,096:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:31,108:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:31,116:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:31,125:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:31,134:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:31,150:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:31,156:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:31,204:INFO:Calculating mean and std
2023-07-06 17:10:31,206:INFO:Creating metrics dataframe
2023-07-06 17:10:31,252:INFO:Uploading results into container
2023-07-06 17:10:31,255:INFO:Uploading model into container now
2023-07-06 17:10:31,255:INFO:_master_model_container: 10
2023-07-06 17:10:31,255:INFO:_display_container: 2
2023-07-06 17:10:31,256:INFO:HuberRegressor()
2023-07-06 17:10:31,256:INFO:create_model() successfully completed......................................
2023-07-06 17:10:31,452:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:31,452:INFO:Creating metrics dataframe
2023-07-06 17:10:31,462:INFO:Initializing K Neighbors Regressor
2023-07-06 17:10:31,462:INFO:Total runtime is 0.24292402664820353 minutes
2023-07-06 17:10:31,465:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:31,465:INFO:Initializing create_model()
2023-07-06 17:10:31,465:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae893ca0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97a00>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:31,465:INFO:Checking exceptions
2023-07-06 17:10:31,465:INFO:Importing libraries
2023-07-06 17:10:31,465:INFO:Copying training dataset
2023-07-06 17:10:31,468:INFO:Defining folds
2023-07-06 17:10:31,468:INFO:Declaring metric variables
2023-07-06 17:10:31,471:INFO:Importing untrained model
2023-07-06 17:10:31,473:INFO:K Neighbors Regressor Imported successfully
2023-07-06 17:10:31,477:INFO:Starting cross validation
2023-07-06 17:10:31,478:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:31,683:INFO:Calculating mean and std
2023-07-06 17:10:31,685:INFO:Creating metrics dataframe
2023-07-06 17:10:31,719:INFO:Uploading results into container
2023-07-06 17:10:31,720:INFO:Uploading model into container now
2023-07-06 17:10:31,720:INFO:_master_model_container: 11
2023-07-06 17:10:31,720:INFO:_display_container: 2
2023-07-06 17:10:31,721:INFO:KNeighborsRegressor(n_jobs=-1)
2023-07-06 17:10:31,721:INFO:create_model() successfully completed......................................
2023-07-06 17:10:31,885:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:31,885:INFO:Creating metrics dataframe
2023-07-06 17:10:31,895:INFO:Initializing Decision Tree Regressor
2023-07-06 17:10:31,895:INFO:Total runtime is 0.2501349647839864 minutes
2023-07-06 17:10:31,898:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:31,899:INFO:Initializing create_model()
2023-07-06 17:10:31,899:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae893ca0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97a00>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:31,899:INFO:Checking exceptions
2023-07-06 17:10:31,899:INFO:Importing libraries
2023-07-06 17:10:31,899:INFO:Copying training dataset
2023-07-06 17:10:31,902:INFO:Defining folds
2023-07-06 17:10:31,902:INFO:Declaring metric variables
2023-07-06 17:10:31,904:INFO:Importing untrained model
2023-07-06 17:10:31,907:INFO:Decision Tree Regressor Imported successfully
2023-07-06 17:10:31,911:INFO:Starting cross validation
2023-07-06 17:10:31,912:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:32,073:INFO:Calculating mean and std
2023-07-06 17:10:32,074:INFO:Creating metrics dataframe
2023-07-06 17:10:32,107:INFO:Uploading results into container
2023-07-06 17:10:32,108:INFO:Uploading model into container now
2023-07-06 17:10:32,109:INFO:_master_model_container: 12
2023-07-06 17:10:32,109:INFO:_display_container: 2
2023-07-06 17:10:32,109:INFO:DecisionTreeRegressor(random_state=2931)
2023-07-06 17:10:32,109:INFO:create_model() successfully completed......................................
2023-07-06 17:10:32,271:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:32,271:INFO:Creating metrics dataframe
2023-07-06 17:10:32,281:INFO:Initializing Random Forest Regressor
2023-07-06 17:10:32,281:INFO:Total runtime is 0.25657761096954346 minutes
2023-07-06 17:10:32,284:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:32,284:INFO:Initializing create_model()
2023-07-06 17:10:32,284:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae893ca0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97a00>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:32,284:INFO:Checking exceptions
2023-07-06 17:10:32,284:INFO:Importing libraries
2023-07-06 17:10:32,284:INFO:Copying training dataset
2023-07-06 17:10:32,288:INFO:Defining folds
2023-07-06 17:10:32,288:INFO:Declaring metric variables
2023-07-06 17:10:32,290:INFO:Importing untrained model
2023-07-06 17:10:32,293:INFO:Random Forest Regressor Imported successfully
2023-07-06 17:10:32,297:INFO:Starting cross validation
2023-07-06 17:10:32,298:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:32,860:INFO:Calculating mean and std
2023-07-06 17:10:32,862:INFO:Creating metrics dataframe
2023-07-06 17:10:32,899:INFO:Uploading results into container
2023-07-06 17:10:32,900:INFO:Uploading model into container now
2023-07-06 17:10:32,900:INFO:_master_model_container: 13
2023-07-06 17:10:32,900:INFO:_display_container: 2
2023-07-06 17:10:32,901:INFO:RandomForestRegressor(n_jobs=-1, random_state=2931)
2023-07-06 17:10:32,901:INFO:create_model() successfully completed......................................
2023-07-06 17:10:33,078:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:33,078:INFO:Creating metrics dataframe
2023-07-06 17:10:33,088:INFO:Initializing Extra Trees Regressor
2023-07-06 17:10:33,089:INFO:Total runtime is 0.27003106276194255 minutes
2023-07-06 17:10:33,091:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:33,091:INFO:Initializing create_model()
2023-07-06 17:10:33,091:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae893ca0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97a00>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:33,092:INFO:Checking exceptions
2023-07-06 17:10:33,092:INFO:Importing libraries
2023-07-06 17:10:33,092:INFO:Copying training dataset
2023-07-06 17:10:33,095:INFO:Defining folds
2023-07-06 17:10:33,095:INFO:Declaring metric variables
2023-07-06 17:10:33,097:INFO:Importing untrained model
2023-07-06 17:10:33,100:INFO:Extra Trees Regressor Imported successfully
2023-07-06 17:10:33,104:INFO:Starting cross validation
2023-07-06 17:10:33,105:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:33,595:INFO:Calculating mean and std
2023-07-06 17:10:33,597:INFO:Creating metrics dataframe
2023-07-06 17:10:33,644:INFO:Uploading results into container
2023-07-06 17:10:33,644:INFO:Uploading model into container now
2023-07-06 17:10:33,645:INFO:_master_model_container: 14
2023-07-06 17:10:33,645:INFO:_display_container: 2
2023-07-06 17:10:33,646:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2931)
2023-07-06 17:10:33,646:INFO:create_model() successfully completed......................................
2023-07-06 17:10:34,082:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:34,082:INFO:Creating metrics dataframe
2023-07-06 17:10:34,096:INFO:Initializing AdaBoost Regressor
2023-07-06 17:10:34,096:INFO:Total runtime is 0.2868246595064799 minutes
2023-07-06 17:10:34,099:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:34,099:INFO:Initializing create_model()
2023-07-06 17:10:34,099:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae893ca0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97a00>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:34,099:INFO:Checking exceptions
2023-07-06 17:10:34,099:INFO:Importing libraries
2023-07-06 17:10:34,099:INFO:Copying training dataset
2023-07-06 17:10:34,103:INFO:Defining folds
2023-07-06 17:10:34,103:INFO:Declaring metric variables
2023-07-06 17:10:34,105:INFO:Importing untrained model
2023-07-06 17:10:34,108:INFO:AdaBoost Regressor Imported successfully
2023-07-06 17:10:34,113:INFO:Starting cross validation
2023-07-06 17:10:34,114:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:34,559:INFO:Calculating mean and std
2023-07-06 17:10:34,561:INFO:Creating metrics dataframe
2023-07-06 17:10:34,601:INFO:Uploading results into container
2023-07-06 17:10:34,602:INFO:Uploading model into container now
2023-07-06 17:10:34,603:INFO:_master_model_container: 15
2023-07-06 17:10:34,603:INFO:_display_container: 2
2023-07-06 17:10:34,603:INFO:AdaBoostRegressor(random_state=2931)
2023-07-06 17:10:34,603:INFO:create_model() successfully completed......................................
2023-07-06 17:10:34,885:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:34,885:INFO:Creating metrics dataframe
2023-07-06 17:10:34,896:INFO:Initializing Gradient Boosting Regressor
2023-07-06 17:10:34,896:INFO:Total runtime is 0.300161882241567 minutes
2023-07-06 17:10:34,899:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:34,900:INFO:Initializing create_model()
2023-07-06 17:10:34,900:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae893ca0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97a00>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:34,900:INFO:Checking exceptions
2023-07-06 17:10:34,900:INFO:Importing libraries
2023-07-06 17:10:34,900:INFO:Copying training dataset
2023-07-06 17:10:34,903:INFO:Defining folds
2023-07-06 17:10:34,903:INFO:Declaring metric variables
2023-07-06 17:10:34,906:INFO:Importing untrained model
2023-07-06 17:10:34,908:INFO:Gradient Boosting Regressor Imported successfully
2023-07-06 17:10:34,913:INFO:Starting cross validation
2023-07-06 17:10:34,914:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:35,737:INFO:Calculating mean and std
2023-07-06 17:10:35,738:INFO:Creating metrics dataframe
2023-07-06 17:10:35,801:INFO:Uploading results into container
2023-07-06 17:10:35,802:INFO:Uploading model into container now
2023-07-06 17:10:35,802:INFO:_master_model_container: 16
2023-07-06 17:10:35,802:INFO:_display_container: 2
2023-07-06 17:10:35,803:INFO:GradientBoostingRegressor(random_state=2931)
2023-07-06 17:10:35,803:INFO:create_model() successfully completed......................................
2023-07-06 17:10:36,067:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:36,067:INFO:Creating metrics dataframe
2023-07-06 17:10:36,080:INFO:Initializing Light Gradient Boosting Machine
2023-07-06 17:10:36,080:INFO:Total runtime is 0.3198849638303121 minutes
2023-07-06 17:10:36,082:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:36,083:INFO:Initializing create_model()
2023-07-06 17:10:36,083:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae893ca0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97a00>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:36,083:INFO:Checking exceptions
2023-07-06 17:10:36,083:INFO:Importing libraries
2023-07-06 17:10:36,083:INFO:Copying training dataset
2023-07-06 17:10:36,086:INFO:Defining folds
2023-07-06 17:10:36,087:INFO:Declaring metric variables
2023-07-06 17:10:36,089:INFO:Importing untrained model
2023-07-06 17:10:36,092:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-06 17:10:36,096:INFO:Starting cross validation
2023-07-06 17:10:36,097:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:36,606:INFO:Calculating mean and std
2023-07-06 17:10:36,608:INFO:Creating metrics dataframe
2023-07-06 17:10:36,654:INFO:Uploading results into container
2023-07-06 17:10:36,655:INFO:Uploading model into container now
2023-07-06 17:10:36,656:INFO:_master_model_container: 17
2023-07-06 17:10:36,656:INFO:_display_container: 2
2023-07-06 17:10:36,656:INFO:LGBMRegressor(random_state=2931)
2023-07-06 17:10:36,656:INFO:create_model() successfully completed......................................
2023-07-06 17:10:36,917:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:36,918:INFO:Creating metrics dataframe
2023-07-06 17:10:36,929:INFO:Initializing Dummy Regressor
2023-07-06 17:10:36,929:INFO:Total runtime is 0.3340425491333008 minutes
2023-07-06 17:10:36,932:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:36,932:INFO:Initializing create_model()
2023-07-06 17:10:36,932:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae893ca0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea97a00>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:36,932:INFO:Checking exceptions
2023-07-06 17:10:36,932:INFO:Importing libraries
2023-07-06 17:10:36,932:INFO:Copying training dataset
2023-07-06 17:10:36,936:INFO:Defining folds
2023-07-06 17:10:36,936:INFO:Declaring metric variables
2023-07-06 17:10:36,938:INFO:Importing untrained model
2023-07-06 17:10:36,941:INFO:Dummy Regressor Imported successfully
2023-07-06 17:10:36,946:INFO:Starting cross validation
2023-07-06 17:10:36,946:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:37,093:INFO:Calculating mean and std
2023-07-06 17:10:37,095:INFO:Creating metrics dataframe
2023-07-06 17:10:37,123:INFO:Uploading results into container
2023-07-06 17:10:37,123:INFO:Uploading model into container now
2023-07-06 17:10:37,123:INFO:_master_model_container: 18
2023-07-06 17:10:37,123:INFO:_display_container: 2
2023-07-06 17:10:37,124:INFO:DummyRegressor()
2023-07-06 17:10:37,124:INFO:create_model() successfully completed......................................
2023-07-06 17:10:37,378:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:37,378:INFO:Creating metrics dataframe
2023-07-06 17:10:37,397:INFO:Initializing create_model()
2023-07-06 17:10:37,397:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae893ca0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2931), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:37,397:INFO:Checking exceptions
2023-07-06 17:10:37,399:INFO:Importing libraries
2023-07-06 17:10:37,399:INFO:Copying training dataset
2023-07-06 17:10:37,402:INFO:Defining folds
2023-07-06 17:10:37,402:INFO:Declaring metric variables
2023-07-06 17:10:37,402:INFO:Importing untrained model
2023-07-06 17:10:37,402:INFO:Declaring custom model
2023-07-06 17:10:37,402:INFO:Extra Trees Regressor Imported successfully
2023-07-06 17:10:37,403:INFO:Cross validation set to False
2023-07-06 17:10:37,403:INFO:Fitting Model
2023-07-06 17:10:37,736:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2931)
2023-07-06 17:10:37,737:INFO:create_model() successfully completed......................................
2023-07-06 17:10:38,028:INFO:_master_model_container: 18
2023-07-06 17:10:38,028:INFO:_display_container: 2
2023-07-06 17:10:38,029:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2931)
2023-07-06 17:10:38,029:INFO:compare_models() successfully completed......................................
2023-07-06 17:10:38,111:INFO:PyCaret RegressionExperiment
2023-07-06 17:10:38,111:INFO:Logging name: reg-default-name
2023-07-06 17:10:38,111:INFO:ML Usecase: MLUsecase.REGRESSION
2023-07-06 17:10:38,111:INFO:version 3.0.4
2023-07-06 17:10:38,111:INFO:Initializing setup()
2023-07-06 17:10:38,111:INFO:self.USI: e5c3
2023-07-06 17:10:38,111:INFO:self._variable_keys: {'pipeline', 'fold_groups_param', 'log_plots_param', '_ml_usecase', 'memory', 'transform_target_param', 'logging_param', 'y', 'USI', 'data', 'target_param', 'html_param', 'fold_generator', 'X', 'n_jobs_param', 'X_test', 'y_test', 'exp_id', 'X_train', 'exp_name_log', 'gpu_n_jobs_param', 'seed', 'idx', 'gpu_param', 'y_train', '_available_plots', 'fold_shuffle_param'}
2023-07-06 17:10:38,111:INFO:Checking environment
2023-07-06 17:10:38,111:INFO:python_version: 3.9.16
2023-07-06 17:10:38,111:INFO:python_build: ('main', 'Feb  1 2023 21:39:03')
2023-07-06 17:10:38,111:INFO:machine: x86_64
2023-07-06 17:10:38,111:INFO:platform: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 17:10:38,111:INFO:Memory: svmem(total=540878073856, available=521560707072, percent=3.6, used=15771947008, free=17089388544, active=32097099776, inactive=475355807744, buffers=2690342912, cached=505326395392, shared=22040576, slab=14277537792)
2023-07-06 17:10:38,113:INFO:Physical Core: 64
2023-07-06 17:10:38,113:INFO:Logical Core: 64
2023-07-06 17:10:38,113:INFO:Checking libraries
2023-07-06 17:10:38,113:INFO:System:
2023-07-06 17:10:38,113:INFO:    python: 3.9.16 | packaged by conda-forge | (main, Feb  1 2023, 21:39:03)  [GCC 11.3.0]
2023-07-06 17:10:38,113:INFO:executable: /home/mirlab/anaconda3/envs/misc/bin/python
2023-07-06 17:10:38,113:INFO:   machine: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 17:10:38,113:INFO:PyCaret required dependencies:
2023-07-06 17:10:38,113:INFO:                 pip: 23.1.2
2023-07-06 17:10:38,113:INFO:          setuptools: 67.7.2
2023-07-06 17:10:38,113:INFO:             pycaret: 3.0.4
2023-07-06 17:10:38,113:INFO:             IPython: 8.14.0
2023-07-06 17:10:38,113:INFO:          ipywidgets: 8.0.7
2023-07-06 17:10:38,113:INFO:                tqdm: 4.64.1
2023-07-06 17:10:38,113:INFO:               numpy: 1.23.5
2023-07-06 17:10:38,113:INFO:              pandas: 1.5.3
2023-07-06 17:10:38,114:INFO:              jinja2: 3.1.2
2023-07-06 17:10:38,114:INFO:               scipy: 1.10.1
2023-07-06 17:10:38,114:INFO:              joblib: 1.2.0
2023-07-06 17:10:38,114:INFO:             sklearn: 1.2.2
2023-07-06 17:10:38,114:INFO:                pyod: 1.1.0
2023-07-06 17:10:38,114:INFO:            imblearn: 0.10.1
2023-07-06 17:10:38,114:INFO:   category_encoders: 2.6.1
2023-07-06 17:10:38,114:INFO:            lightgbm: 3.3.5
2023-07-06 17:10:38,114:INFO:               numba: 0.57.0
2023-07-06 17:10:38,114:INFO:            requests: 2.28.1
2023-07-06 17:10:38,114:INFO:          matplotlib: 3.7.1
2023-07-06 17:10:38,114:INFO:          scikitplot: 0.3.7
2023-07-06 17:10:38,114:INFO:         yellowbrick: 1.5
2023-07-06 17:10:38,114:INFO:              plotly: 5.15.0
2023-07-06 17:10:38,114:INFO:    plotly-resampler: Not installed
2023-07-06 17:10:38,114:INFO:             kaleido: 0.2.1
2023-07-06 17:10:38,114:INFO:           schemdraw: 0.15
2023-07-06 17:10:38,114:INFO:         statsmodels: 0.14.0
2023-07-06 17:10:38,114:INFO:              sktime: 0.20.0
2023-07-06 17:10:38,114:INFO:               tbats: 1.1.3
2023-07-06 17:10:38,114:INFO:            pmdarima: 2.0.3
2023-07-06 17:10:38,114:INFO:              psutil: 5.9.5
2023-07-06 17:10:38,114:INFO:          markupsafe: 2.1.2
2023-07-06 17:10:38,114:INFO:             pickle5: Not installed
2023-07-06 17:10:38,114:INFO:         cloudpickle: 2.2.1
2023-07-06 17:10:38,114:INFO:         deprecation: 2.1.0
2023-07-06 17:10:38,114:INFO:              xxhash: 3.2.0
2023-07-06 17:10:38,114:INFO:           wurlitzer: 3.0.3
2023-07-06 17:10:38,114:INFO:PyCaret optional dependencies:
2023-07-06 17:10:38,114:INFO:                shap: Not installed
2023-07-06 17:10:38,114:INFO:           interpret: Not installed
2023-07-06 17:10:38,114:INFO:                umap: Not installed
2023-07-06 17:10:38,114:INFO:    pandas_profiling: 3.6.6
2023-07-06 17:10:38,114:INFO:  explainerdashboard: Not installed
2023-07-06 17:10:38,114:INFO:             autoviz: Not installed
2023-07-06 17:10:38,114:INFO:           fairlearn: Not installed
2023-07-06 17:10:38,114:INFO:          deepchecks: Not installed
2023-07-06 17:10:38,114:INFO:             xgboost: Not installed
2023-07-06 17:10:38,114:INFO:            catboost: Not installed
2023-07-06 17:10:38,114:INFO:              kmodes: Not installed
2023-07-06 17:10:38,114:INFO:             mlxtend: Not installed
2023-07-06 17:10:38,114:INFO:       statsforecast: Not installed
2023-07-06 17:10:38,114:INFO:        tune_sklearn: Not installed
2023-07-06 17:10:38,114:INFO:                 ray: Not installed
2023-07-06 17:10:38,114:INFO:            hyperopt: Not installed
2023-07-06 17:10:38,114:INFO:              optuna: 3.1.1
2023-07-06 17:10:38,114:INFO:               skopt: Not installed
2023-07-06 17:10:38,114:INFO:              mlflow: Not installed
2023-07-06 17:10:38,114:INFO:              gradio: Not installed
2023-07-06 17:10:38,114:INFO:             fastapi: Not installed
2023-07-06 17:10:38,115:INFO:             uvicorn: Not installed
2023-07-06 17:10:38,115:INFO:              m2cgen: Not installed
2023-07-06 17:10:38,115:INFO:           evidently: Not installed
2023-07-06 17:10:38,115:INFO:               fugue: Not installed
2023-07-06 17:10:38,115:INFO:           streamlit: 1.24.0
2023-07-06 17:10:38,115:INFO:             prophet: Not installed
2023-07-06 17:10:38,115:INFO:None
2023-07-06 17:10:38,115:INFO:Set up data.
2023-07-06 17:10:38,120:INFO:Set up train/test split.
2023-07-06 17:10:38,123:INFO:Set up index.
2023-07-06 17:10:38,123:INFO:Set up folding strategy.
2023-07-06 17:10:38,123:INFO:Assigning column types.
2023-07-06 17:10:38,125:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-06 17:10:38,125:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 17:10:38,130:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:10:38,135:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:10:38,195:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:38,242:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:10:38,243:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:38,243:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:38,243:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 17:10:38,248:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:10:38,253:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:10:38,313:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:38,360:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:10:38,361:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:38,361:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:38,361:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-07-06 17:10:38,366:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:10:38,371:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:10:38,430:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:38,478:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:10:38,478:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:38,478:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:38,483:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:10:38,488:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:10:38,548:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:38,595:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:10:38,595:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:38,596:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:38,596:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-07-06 17:10:38,605:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:10:38,665:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:38,713:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:10:38,713:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:38,714:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:38,723:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:10:38,783:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:38,831:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:10:38,831:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:38,831:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:38,832:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-07-06 17:10:38,907:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:38,954:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:10:38,955:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:38,955:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:39,024:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:39,071:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:10:39,071:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:39,072:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:39,072:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-06 17:10:39,143:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:39,191:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:39,191:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:39,260:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:39,309:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:39,310:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:39,310:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-07-06 17:10:39,427:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:39,427:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:39,547:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:39,547:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:39,548:INFO:Preparing preprocessing pipeline...
2023-07-06 17:10:39,548:INFO:Set up simple imputation.
2023-07-06 17:10:39,549:INFO:Set up column name cleaning.
2023-07-06 17:10:39,573:INFO:Finished creating preprocessing pipeline.
2023-07-06 17:10:39,577:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['PTemp_C_Max', 'AirTC_Avg', 'RH',
                                             'WS_ms_Avg', 'TPM1', 'TPM2.5',
                                             'TPM10', 'GeffRef', 'TempRef',
                                             'Daylight', 'FT_Voltage2_back_1h',
                                             'FT_Voltage2_back_2h',
                                             'FT_Voltage2_back_3h',
                                             'FT_Voltage2_back_4h',
                                             'FT_Voltage2_back_5h',
                                             'FT_Voltage2_back_6h'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-07-06 17:10:39,577:INFO:Creating final display dataframe.
2023-07-06 17:10:39,678:INFO:Setup _display_container:                     Description             Value
0                    Session id              1576
1                        Target       FT_Voltage2
2                   Target type        Regression
3           Original data shape        (2394, 17)
4        Transformed data shape        (2394, 17)
5   Transformed train set shape        (1675, 17)
6    Transformed test set shape         (719, 17)
7              Numeric features                16
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              e5c3
2023-07-06 17:10:39,810:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:39,810:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:39,927:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:39,927:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:39,928:INFO:setup() successfully completed in 1.82s...............
2023-07-06 17:10:39,928:INFO:Initializing compare_models()
2023-07-06 17:10:39,929:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c1759550>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f25c1759550>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-07-06 17:10:39,929:INFO:Checking exceptions
2023-07-06 17:10:39,930:INFO:Preparing display monitor
2023-07-06 17:10:39,948:INFO:Initializing Linear Regression
2023-07-06 17:10:39,948:INFO:Total runtime is 4.502137502034505e-06 minutes
2023-07-06 17:10:39,951:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:39,951:INFO:Initializing create_model()
2023-07-06 17:10:39,951:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c1759550>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198c1b20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:39,951:INFO:Checking exceptions
2023-07-06 17:10:39,951:INFO:Importing libraries
2023-07-06 17:10:39,951:INFO:Copying training dataset
2023-07-06 17:10:39,954:INFO:Defining folds
2023-07-06 17:10:39,954:INFO:Declaring metric variables
2023-07-06 17:10:39,956:INFO:Importing untrained model
2023-07-06 17:10:39,958:INFO:Linear Regression Imported successfully
2023-07-06 17:10:39,963:INFO:Starting cross validation
2023-07-06 17:10:39,964:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:40,189:INFO:Calculating mean and std
2023-07-06 17:10:40,190:INFO:Creating metrics dataframe
2023-07-06 17:10:40,221:INFO:Uploading results into container
2023-07-06 17:10:40,222:INFO:Uploading model into container now
2023-07-06 17:10:40,223:INFO:_master_model_container: 1
2023-07-06 17:10:40,223:INFO:_display_container: 2
2023-07-06 17:10:40,223:INFO:LinearRegression(n_jobs=-1)
2023-07-06 17:10:40,223:INFO:create_model() successfully completed......................................
2023-07-06 17:10:40,546:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:40,546:INFO:Creating metrics dataframe
2023-07-06 17:10:40,555:INFO:Initializing Lasso Regression
2023-07-06 17:10:40,556:INFO:Total runtime is 0.01012502908706665 minutes
2023-07-06 17:10:40,558:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:40,559:INFO:Initializing create_model()
2023-07-06 17:10:40,559:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c1759550>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198c1b20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:40,559:INFO:Checking exceptions
2023-07-06 17:10:40,559:INFO:Importing libraries
2023-07-06 17:10:40,559:INFO:Copying training dataset
2023-07-06 17:10:40,562:INFO:Defining folds
2023-07-06 17:10:40,562:INFO:Declaring metric variables
2023-07-06 17:10:40,564:INFO:Importing untrained model
2023-07-06 17:10:40,567:INFO:Lasso Regression Imported successfully
2023-07-06 17:10:40,572:INFO:Starting cross validation
2023-07-06 17:10:40,573:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:40,647:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.671e+05, tolerance: 2.535e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:40,661:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.683e+05, tolerance: 2.471e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:40,665:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.687e+05, tolerance: 2.542e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:40,673:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.598e+05, tolerance: 2.500e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:40,674:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.765e+05, tolerance: 2.538e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:40,683:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.523e+05, tolerance: 2.479e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:40,683:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.625e+05, tolerance: 2.512e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:40,695:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.645e+05, tolerance: 2.515e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:40,707:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.651e+05, tolerance: 2.491e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:40,716:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.699e+05, tolerance: 2.492e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:40,737:INFO:Calculating mean and std
2023-07-06 17:10:40,738:INFO:Creating metrics dataframe
2023-07-06 17:10:40,788:INFO:Uploading results into container
2023-07-06 17:10:40,789:INFO:Uploading model into container now
2023-07-06 17:10:40,790:INFO:_master_model_container: 2
2023-07-06 17:10:40,790:INFO:_display_container: 2
2023-07-06 17:10:40,790:INFO:Lasso(random_state=1576)
2023-07-06 17:10:40,790:INFO:create_model() successfully completed......................................
2023-07-06 17:10:41,057:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:41,057:INFO:Creating metrics dataframe
2023-07-06 17:10:41,065:INFO:Initializing Ridge Regression
2023-07-06 17:10:41,066:INFO:Total runtime is 0.018625716368357338 minutes
2023-07-06 17:10:41,068:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:41,069:INFO:Initializing create_model()
2023-07-06 17:10:41,069:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c1759550>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198c1b20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:41,069:INFO:Checking exceptions
2023-07-06 17:10:41,069:INFO:Importing libraries
2023-07-06 17:10:41,069:INFO:Copying training dataset
2023-07-06 17:10:41,072:INFO:Defining folds
2023-07-06 17:10:41,072:INFO:Declaring metric variables
2023-07-06 17:10:41,075:INFO:Importing untrained model
2023-07-06 17:10:41,077:INFO:Ridge Regression Imported successfully
2023-07-06 17:10:41,082:INFO:Starting cross validation
2023-07-06 17:10:41,083:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:41,180:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=5.82634e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-07-06 17:10:41,301:INFO:Calculating mean and std
2023-07-06 17:10:41,303:INFO:Creating metrics dataframe
2023-07-06 17:10:41,346:INFO:Uploading results into container
2023-07-06 17:10:41,347:INFO:Uploading model into container now
2023-07-06 17:10:41,347:INFO:_master_model_container: 3
2023-07-06 17:10:41,347:INFO:_display_container: 2
2023-07-06 17:10:41,348:INFO:Ridge(random_state=1576)
2023-07-06 17:10:41,348:INFO:create_model() successfully completed......................................
2023-07-06 17:10:41,616:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:41,617:INFO:Creating metrics dataframe
2023-07-06 17:10:41,625:INFO:Initializing Elastic Net
2023-07-06 17:10:41,625:INFO:Total runtime is 0.027955381075541175 minutes
2023-07-06 17:10:41,628:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:41,628:INFO:Initializing create_model()
2023-07-06 17:10:41,628:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c1759550>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198c1b20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:41,629:INFO:Checking exceptions
2023-07-06 17:10:41,629:INFO:Importing libraries
2023-07-06 17:10:41,629:INFO:Copying training dataset
2023-07-06 17:10:41,632:INFO:Defining folds
2023-07-06 17:10:41,632:INFO:Declaring metric variables
2023-07-06 17:10:41,635:INFO:Importing untrained model
2023-07-06 17:10:41,637:INFO:Elastic Net Imported successfully
2023-07-06 17:10:41,642:INFO:Starting cross validation
2023-07-06 17:10:41,643:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:41,699:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.086e+05, tolerance: 2.535e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:41,708:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.111e+05, tolerance: 2.542e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:41,716:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.114e+05, tolerance: 2.538e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:41,725:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.083e+05, tolerance: 2.471e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:41,730:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.047e+05, tolerance: 2.515e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:41,733:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.003e+05, tolerance: 2.500e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:41,752:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.056e+05, tolerance: 2.491e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:41,752:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.954e+05, tolerance: 2.479e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:41,754:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.064e+05, tolerance: 2.512e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:41,759:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.074e+05, tolerance: 2.492e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:41,803:INFO:Calculating mean and std
2023-07-06 17:10:41,805:INFO:Creating metrics dataframe
2023-07-06 17:10:41,837:INFO:Uploading results into container
2023-07-06 17:10:41,837:INFO:Uploading model into container now
2023-07-06 17:10:41,838:INFO:_master_model_container: 4
2023-07-06 17:10:41,838:INFO:_display_container: 2
2023-07-06 17:10:41,838:INFO:ElasticNet(random_state=1576)
2023-07-06 17:10:41,838:INFO:create_model() successfully completed......................................
2023-07-06 17:10:42,094:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:42,094:INFO:Creating metrics dataframe
2023-07-06 17:10:42,103:INFO:Initializing Least Angle Regression
2023-07-06 17:10:42,103:INFO:Total runtime is 0.03591821988423665 minutes
2023-07-06 17:10:42,106:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:42,106:INFO:Initializing create_model()
2023-07-06 17:10:42,106:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c1759550>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198c1b20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:42,106:INFO:Checking exceptions
2023-07-06 17:10:42,106:INFO:Importing libraries
2023-07-06 17:10:42,107:INFO:Copying training dataset
2023-07-06 17:10:42,110:INFO:Defining folds
2023-07-06 17:10:42,110:INFO:Declaring metric variables
2023-07-06 17:10:42,112:INFO:Importing untrained model
2023-07-06 17:10:42,115:INFO:Least Angle Regression Imported successfully
2023-07-06 17:10:42,120:INFO:Starting cross validation
2023-07-06 17:10:42,121:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:42,318:INFO:Calculating mean and std
2023-07-06 17:10:42,320:INFO:Creating metrics dataframe
2023-07-06 17:10:42,352:INFO:Uploading results into container
2023-07-06 17:10:42,353:INFO:Uploading model into container now
2023-07-06 17:10:42,353:INFO:_master_model_container: 5
2023-07-06 17:10:42,353:INFO:_display_container: 2
2023-07-06 17:10:42,354:INFO:Lars(random_state=1576)
2023-07-06 17:10:42,354:INFO:create_model() successfully completed......................................
2023-07-06 17:10:42,603:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:42,604:INFO:Creating metrics dataframe
2023-07-06 17:10:42,613:INFO:Initializing Lasso Least Angle Regression
2023-07-06 17:10:42,613:INFO:Total runtime is 0.04441528717676798 minutes
2023-07-06 17:10:42,616:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:42,616:INFO:Initializing create_model()
2023-07-06 17:10:42,616:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c1759550>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198c1b20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:42,616:INFO:Checking exceptions
2023-07-06 17:10:42,616:INFO:Importing libraries
2023-07-06 17:10:42,616:INFO:Copying training dataset
2023-07-06 17:10:42,619:INFO:Defining folds
2023-07-06 17:10:42,619:INFO:Declaring metric variables
2023-07-06 17:10:42,622:INFO:Importing untrained model
2023-07-06 17:10:42,625:INFO:Lasso Least Angle Regression Imported successfully
2023-07-06 17:10:42,629:INFO:Starting cross validation
2023-07-06 17:10:42,630:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:42,892:INFO:Calculating mean and std
2023-07-06 17:10:42,894:INFO:Creating metrics dataframe
2023-07-06 17:10:42,938:INFO:Uploading results into container
2023-07-06 17:10:42,939:INFO:Uploading model into container now
2023-07-06 17:10:42,940:INFO:_master_model_container: 6
2023-07-06 17:10:42,940:INFO:_display_container: 2
2023-07-06 17:10:42,941:INFO:LassoLars(random_state=1576)
2023-07-06 17:10:42,941:INFO:create_model() successfully completed......................................
2023-07-06 17:10:43,203:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:43,203:INFO:Creating metrics dataframe
2023-07-06 17:10:43,213:INFO:Initializing Orthogonal Matching Pursuit
2023-07-06 17:10:43,213:INFO:Total runtime is 0.0544119119644165 minutes
2023-07-06 17:10:43,215:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:43,216:INFO:Initializing create_model()
2023-07-06 17:10:43,216:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c1759550>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198c1b20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:43,216:INFO:Checking exceptions
2023-07-06 17:10:43,216:INFO:Importing libraries
2023-07-06 17:10:43,216:INFO:Copying training dataset
2023-07-06 17:10:43,219:INFO:Defining folds
2023-07-06 17:10:43,219:INFO:Declaring metric variables
2023-07-06 17:10:43,222:INFO:Importing untrained model
2023-07-06 17:10:43,225:INFO:Orthogonal Matching Pursuit Imported successfully
2023-07-06 17:10:43,229:INFO:Starting cross validation
2023-07-06 17:10:43,230:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:43,423:INFO:Calculating mean and std
2023-07-06 17:10:43,425:INFO:Creating metrics dataframe
2023-07-06 17:10:43,471:INFO:Uploading results into container
2023-07-06 17:10:43,471:INFO:Uploading model into container now
2023-07-06 17:10:43,472:INFO:_master_model_container: 7
2023-07-06 17:10:43,472:INFO:_display_container: 2
2023-07-06 17:10:43,472:INFO:OrthogonalMatchingPursuit()
2023-07-06 17:10:43,472:INFO:create_model() successfully completed......................................
2023-07-06 17:10:43,706:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:43,706:INFO:Creating metrics dataframe
2023-07-06 17:10:43,715:INFO:Initializing Bayesian Ridge
2023-07-06 17:10:43,715:INFO:Total runtime is 0.06278927326202392 minutes
2023-07-06 17:10:43,718:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:43,718:INFO:Initializing create_model()
2023-07-06 17:10:43,718:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c1759550>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198c1b20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:43,719:INFO:Checking exceptions
2023-07-06 17:10:43,719:INFO:Importing libraries
2023-07-06 17:10:43,719:INFO:Copying training dataset
2023-07-06 17:10:43,722:INFO:Defining folds
2023-07-06 17:10:43,722:INFO:Declaring metric variables
2023-07-06 17:10:43,725:INFO:Importing untrained model
2023-07-06 17:10:43,727:INFO:Bayesian Ridge Imported successfully
2023-07-06 17:10:43,732:INFO:Starting cross validation
2023-07-06 17:10:43,733:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:43,937:INFO:Calculating mean and std
2023-07-06 17:10:43,939:INFO:Creating metrics dataframe
2023-07-06 17:10:44,004:INFO:Uploading results into container
2023-07-06 17:10:44,005:INFO:Uploading model into container now
2023-07-06 17:10:44,006:INFO:_master_model_container: 8
2023-07-06 17:10:44,006:INFO:_display_container: 2
2023-07-06 17:10:44,006:INFO:BayesianRidge()
2023-07-06 17:10:44,006:INFO:create_model() successfully completed......................................
2023-07-06 17:10:44,268:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:44,269:INFO:Creating metrics dataframe
2023-07-06 17:10:44,278:INFO:Initializing Passive Aggressive Regressor
2023-07-06 17:10:44,279:INFO:Total runtime is 0.07217501004536947 minutes
2023-07-06 17:10:44,281:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:44,282:INFO:Initializing create_model()
2023-07-06 17:10:44,282:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c1759550>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198c1b20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:44,282:INFO:Checking exceptions
2023-07-06 17:10:44,282:INFO:Importing libraries
2023-07-06 17:10:44,282:INFO:Copying training dataset
2023-07-06 17:10:44,285:INFO:Defining folds
2023-07-06 17:10:44,285:INFO:Declaring metric variables
2023-07-06 17:10:44,288:INFO:Importing untrained model
2023-07-06 17:10:44,290:INFO:Passive Aggressive Regressor Imported successfully
2023-07-06 17:10:44,295:INFO:Starting cross validation
2023-07-06 17:10:44,296:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:44,479:INFO:Calculating mean and std
2023-07-06 17:10:44,480:INFO:Creating metrics dataframe
2023-07-06 17:10:44,512:INFO:Uploading results into container
2023-07-06 17:10:44,512:INFO:Uploading model into container now
2023-07-06 17:10:44,513:INFO:_master_model_container: 9
2023-07-06 17:10:44,513:INFO:_display_container: 2
2023-07-06 17:10:44,513:INFO:PassiveAggressiveRegressor(random_state=1576)
2023-07-06 17:10:44,513:INFO:create_model() successfully completed......................................
2023-07-06 17:10:44,778:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:44,778:INFO:Creating metrics dataframe
2023-07-06 17:10:44,788:INFO:Initializing Huber Regressor
2023-07-06 17:10:44,788:INFO:Total runtime is 0.08065999746322633 minutes
2023-07-06 17:10:44,790:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:44,791:INFO:Initializing create_model()
2023-07-06 17:10:44,791:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c1759550>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198c1b20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:44,791:INFO:Checking exceptions
2023-07-06 17:10:44,791:INFO:Importing libraries
2023-07-06 17:10:44,791:INFO:Copying training dataset
2023-07-06 17:10:44,794:INFO:Defining folds
2023-07-06 17:10:44,795:INFO:Declaring metric variables
2023-07-06 17:10:44,797:INFO:Importing untrained model
2023-07-06 17:10:44,800:INFO:Huber Regressor Imported successfully
2023-07-06 17:10:44,804:INFO:Starting cross validation
2023-07-06 17:10:44,805:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:44,909:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:44,922:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:44,929:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:44,929:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:44,942:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:44,948:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:44,951:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:44,963:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:44,980:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:45,000:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:45,047:INFO:Calculating mean and std
2023-07-06 17:10:45,049:INFO:Creating metrics dataframe
2023-07-06 17:10:45,092:INFO:Uploading results into container
2023-07-06 17:10:45,093:INFO:Uploading model into container now
2023-07-06 17:10:45,094:INFO:_master_model_container: 10
2023-07-06 17:10:45,094:INFO:_display_container: 2
2023-07-06 17:10:45,094:INFO:HuberRegressor()
2023-07-06 17:10:45,094:INFO:create_model() successfully completed......................................
2023-07-06 17:10:45,355:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:45,355:INFO:Creating metrics dataframe
2023-07-06 17:10:45,365:INFO:Initializing K Neighbors Regressor
2023-07-06 17:10:45,365:INFO:Total runtime is 0.09028278191884359 minutes
2023-07-06 17:10:45,368:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:45,368:INFO:Initializing create_model()
2023-07-06 17:10:45,368:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c1759550>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198c1b20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:45,368:INFO:Checking exceptions
2023-07-06 17:10:45,368:INFO:Importing libraries
2023-07-06 17:10:45,368:INFO:Copying training dataset
2023-07-06 17:10:45,371:INFO:Defining folds
2023-07-06 17:10:45,372:INFO:Declaring metric variables
2023-07-06 17:10:45,374:INFO:Importing untrained model
2023-07-06 17:10:45,377:INFO:K Neighbors Regressor Imported successfully
2023-07-06 17:10:45,381:INFO:Starting cross validation
2023-07-06 17:10:45,382:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:45,629:INFO:Calculating mean and std
2023-07-06 17:10:45,631:INFO:Creating metrics dataframe
2023-07-06 17:10:45,664:INFO:Uploading results into container
2023-07-06 17:10:45,665:INFO:Uploading model into container now
2023-07-06 17:10:45,665:INFO:_master_model_container: 11
2023-07-06 17:10:45,665:INFO:_display_container: 2
2023-07-06 17:10:45,666:INFO:KNeighborsRegressor(n_jobs=-1)
2023-07-06 17:10:45,666:INFO:create_model() successfully completed......................................
2023-07-06 17:10:45,909:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:45,909:INFO:Creating metrics dataframe
2023-07-06 17:10:45,919:INFO:Initializing Decision Tree Regressor
2023-07-06 17:10:45,919:INFO:Total runtime is 0.09951939980189006 minutes
2023-07-06 17:10:45,922:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:45,922:INFO:Initializing create_model()
2023-07-06 17:10:45,922:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c1759550>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198c1b20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:45,922:INFO:Checking exceptions
2023-07-06 17:10:45,922:INFO:Importing libraries
2023-07-06 17:10:45,922:INFO:Copying training dataset
2023-07-06 17:10:45,926:INFO:Defining folds
2023-07-06 17:10:45,926:INFO:Declaring metric variables
2023-07-06 17:10:45,928:INFO:Importing untrained model
2023-07-06 17:10:45,931:INFO:Decision Tree Regressor Imported successfully
2023-07-06 17:10:45,936:INFO:Starting cross validation
2023-07-06 17:10:45,937:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:46,126:INFO:Calculating mean and std
2023-07-06 17:10:46,128:INFO:Creating metrics dataframe
2023-07-06 17:10:46,160:INFO:Uploading results into container
2023-07-06 17:10:46,161:INFO:Uploading model into container now
2023-07-06 17:10:46,162:INFO:_master_model_container: 12
2023-07-06 17:10:46,162:INFO:_display_container: 2
2023-07-06 17:10:46,162:INFO:DecisionTreeRegressor(random_state=1576)
2023-07-06 17:10:46,162:INFO:create_model() successfully completed......................................
2023-07-06 17:10:46,411:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:46,411:INFO:Creating metrics dataframe
2023-07-06 17:10:46,421:INFO:Initializing Random Forest Regressor
2023-07-06 17:10:46,422:INFO:Total runtime is 0.10789103110631308 minutes
2023-07-06 17:10:46,424:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:46,425:INFO:Initializing create_model()
2023-07-06 17:10:46,425:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c1759550>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198c1b20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:46,425:INFO:Checking exceptions
2023-07-06 17:10:46,425:INFO:Importing libraries
2023-07-06 17:10:46,425:INFO:Copying training dataset
2023-07-06 17:10:46,428:INFO:Defining folds
2023-07-06 17:10:46,428:INFO:Declaring metric variables
2023-07-06 17:10:46,431:INFO:Importing untrained model
2023-07-06 17:10:46,433:INFO:Random Forest Regressor Imported successfully
2023-07-06 17:10:46,438:INFO:Starting cross validation
2023-07-06 17:10:46,439:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:47,068:INFO:Calculating mean and std
2023-07-06 17:10:47,070:INFO:Creating metrics dataframe
2023-07-06 17:10:47,131:INFO:Uploading results into container
2023-07-06 17:10:47,132:INFO:Uploading model into container now
2023-07-06 17:10:47,132:INFO:_master_model_container: 13
2023-07-06 17:10:47,132:INFO:_display_container: 2
2023-07-06 17:10:47,133:INFO:RandomForestRegressor(n_jobs=-1, random_state=1576)
2023-07-06 17:10:47,133:INFO:create_model() successfully completed......................................
2023-07-06 17:10:47,318:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:47,319:INFO:Creating metrics dataframe
2023-07-06 17:10:47,329:INFO:Initializing Extra Trees Regressor
2023-07-06 17:10:47,329:INFO:Total runtime is 0.12301239172617595 minutes
2023-07-06 17:10:47,331:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:47,332:INFO:Initializing create_model()
2023-07-06 17:10:47,332:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c1759550>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198c1b20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:47,332:INFO:Checking exceptions
2023-07-06 17:10:47,332:INFO:Importing libraries
2023-07-06 17:10:47,332:INFO:Copying training dataset
2023-07-06 17:10:47,335:INFO:Defining folds
2023-07-06 17:10:47,335:INFO:Declaring metric variables
2023-07-06 17:10:47,338:INFO:Importing untrained model
2023-07-06 17:10:47,340:INFO:Extra Trees Regressor Imported successfully
2023-07-06 17:10:47,345:INFO:Starting cross validation
2023-07-06 17:10:47,346:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:47,860:INFO:Calculating mean and std
2023-07-06 17:10:47,862:INFO:Creating metrics dataframe
2023-07-06 17:10:47,927:INFO:Uploading results into container
2023-07-06 17:10:47,927:INFO:Uploading model into container now
2023-07-06 17:10:47,928:INFO:_master_model_container: 14
2023-07-06 17:10:47,928:INFO:_display_container: 2
2023-07-06 17:10:47,929:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1576)
2023-07-06 17:10:47,929:INFO:create_model() successfully completed......................................
2023-07-06 17:10:48,112:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:48,113:INFO:Creating metrics dataframe
2023-07-06 17:10:48,123:INFO:Initializing AdaBoost Regressor
2023-07-06 17:10:48,123:INFO:Total runtime is 0.13625108400980632 minutes
2023-07-06 17:10:48,126:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:48,126:INFO:Initializing create_model()
2023-07-06 17:10:48,126:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c1759550>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198c1b20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:48,126:INFO:Checking exceptions
2023-07-06 17:10:48,126:INFO:Importing libraries
2023-07-06 17:10:48,126:INFO:Copying training dataset
2023-07-06 17:10:48,129:INFO:Defining folds
2023-07-06 17:10:48,130:INFO:Declaring metric variables
2023-07-06 17:10:48,132:INFO:Importing untrained model
2023-07-06 17:10:48,135:INFO:AdaBoost Regressor Imported successfully
2023-07-06 17:10:48,140:INFO:Starting cross validation
2023-07-06 17:10:48,140:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:48,608:INFO:Calculating mean and std
2023-07-06 17:10:48,610:INFO:Creating metrics dataframe
2023-07-06 17:10:48,664:INFO:Uploading results into container
2023-07-06 17:10:48,664:INFO:Uploading model into container now
2023-07-06 17:10:48,665:INFO:_master_model_container: 15
2023-07-06 17:10:48,665:INFO:_display_container: 2
2023-07-06 17:10:48,665:INFO:AdaBoostRegressor(random_state=1576)
2023-07-06 17:10:48,666:INFO:create_model() successfully completed......................................
2023-07-06 17:10:48,850:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:48,851:INFO:Creating metrics dataframe
2023-07-06 17:10:48,861:INFO:Initializing Gradient Boosting Regressor
2023-07-06 17:10:48,861:INFO:Total runtime is 0.14855198860168456 minutes
2023-07-06 17:10:48,864:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:48,864:INFO:Initializing create_model()
2023-07-06 17:10:48,864:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c1759550>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198c1b20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:48,864:INFO:Checking exceptions
2023-07-06 17:10:48,864:INFO:Importing libraries
2023-07-06 17:10:48,864:INFO:Copying training dataset
2023-07-06 17:10:48,867:INFO:Defining folds
2023-07-06 17:10:48,868:INFO:Declaring metric variables
2023-07-06 17:10:48,870:INFO:Importing untrained model
2023-07-06 17:10:48,873:INFO:Gradient Boosting Regressor Imported successfully
2023-07-06 17:10:48,877:INFO:Starting cross validation
2023-07-06 17:10:48,878:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:49,727:INFO:Calculating mean and std
2023-07-06 17:10:49,730:INFO:Creating metrics dataframe
2023-07-06 17:10:49,803:INFO:Uploading results into container
2023-07-06 17:10:49,803:INFO:Uploading model into container now
2023-07-06 17:10:49,804:INFO:_master_model_container: 16
2023-07-06 17:10:49,804:INFO:_display_container: 2
2023-07-06 17:10:49,805:INFO:GradientBoostingRegressor(random_state=1576)
2023-07-06 17:10:49,805:INFO:create_model() successfully completed......................................
2023-07-06 17:10:50,008:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:50,009:INFO:Creating metrics dataframe
2023-07-06 17:10:50,019:INFO:Initializing Light Gradient Boosting Machine
2023-07-06 17:10:50,020:INFO:Total runtime is 0.16785934368769326 minutes
2023-07-06 17:10:50,022:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:50,022:INFO:Initializing create_model()
2023-07-06 17:10:50,023:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c1759550>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198c1b20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:50,023:INFO:Checking exceptions
2023-07-06 17:10:50,023:INFO:Importing libraries
2023-07-06 17:10:50,023:INFO:Copying training dataset
2023-07-06 17:10:50,026:INFO:Defining folds
2023-07-06 17:10:50,026:INFO:Declaring metric variables
2023-07-06 17:10:50,029:INFO:Importing untrained model
2023-07-06 17:10:50,031:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-06 17:10:50,036:INFO:Starting cross validation
2023-07-06 17:10:50,037:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:50,549:INFO:Calculating mean and std
2023-07-06 17:10:50,551:INFO:Creating metrics dataframe
2023-07-06 17:10:50,623:INFO:Uploading results into container
2023-07-06 17:10:50,624:INFO:Uploading model into container now
2023-07-06 17:10:50,625:INFO:_master_model_container: 17
2023-07-06 17:10:50,625:INFO:_display_container: 2
2023-07-06 17:10:50,625:INFO:LGBMRegressor(random_state=1576)
2023-07-06 17:10:50,626:INFO:create_model() successfully completed......................................
2023-07-06 17:10:50,818:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:50,818:INFO:Creating metrics dataframe
2023-07-06 17:10:50,829:INFO:Initializing Dummy Regressor
2023-07-06 17:10:50,829:INFO:Total runtime is 0.18135626713434852 minutes
2023-07-06 17:10:50,832:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:50,832:INFO:Initializing create_model()
2023-07-06 17:10:50,832:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c1759550>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27198c1b20>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:50,832:INFO:Checking exceptions
2023-07-06 17:10:50,833:INFO:Importing libraries
2023-07-06 17:10:50,833:INFO:Copying training dataset
2023-07-06 17:10:50,836:INFO:Defining folds
2023-07-06 17:10:50,836:INFO:Declaring metric variables
2023-07-06 17:10:50,838:INFO:Importing untrained model
2023-07-06 17:10:50,841:INFO:Dummy Regressor Imported successfully
2023-07-06 17:10:50,846:INFO:Starting cross validation
2023-07-06 17:10:50,847:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:51,020:INFO:Calculating mean and std
2023-07-06 17:10:51,022:INFO:Creating metrics dataframe
2023-07-06 17:10:51,081:INFO:Uploading results into container
2023-07-06 17:10:51,082:INFO:Uploading model into container now
2023-07-06 17:10:51,083:INFO:_master_model_container: 18
2023-07-06 17:10:51,083:INFO:_display_container: 2
2023-07-06 17:10:51,083:INFO:DummyRegressor()
2023-07-06 17:10:51,083:INFO:create_model() successfully completed......................................
2023-07-06 17:10:51,249:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:51,250:INFO:Creating metrics dataframe
2023-07-06 17:10:51,267:INFO:Initializing create_model()
2023-07-06 17:10:51,268:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c1759550>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=1576), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:51,268:INFO:Checking exceptions
2023-07-06 17:10:51,269:INFO:Importing libraries
2023-07-06 17:10:51,269:INFO:Copying training dataset
2023-07-06 17:10:51,272:INFO:Defining folds
2023-07-06 17:10:51,272:INFO:Declaring metric variables
2023-07-06 17:10:51,272:INFO:Importing untrained model
2023-07-06 17:10:51,272:INFO:Declaring custom model
2023-07-06 17:10:51,272:INFO:Extra Trees Regressor Imported successfully
2023-07-06 17:10:51,273:INFO:Cross validation set to False
2023-07-06 17:10:51,273:INFO:Fitting Model
2023-07-06 17:10:51,602:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1576)
2023-07-06 17:10:51,602:INFO:create_model() successfully completed......................................
2023-07-06 17:10:51,832:INFO:_master_model_container: 18
2023-07-06 17:10:51,832:INFO:_display_container: 2
2023-07-06 17:10:51,833:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1576)
2023-07-06 17:10:51,833:INFO:compare_models() successfully completed......................................
2023-07-06 17:10:51,924:INFO:PyCaret RegressionExperiment
2023-07-06 17:10:51,924:INFO:Logging name: reg-default-name
2023-07-06 17:10:51,924:INFO:ML Usecase: MLUsecase.REGRESSION
2023-07-06 17:10:51,924:INFO:version 3.0.4
2023-07-06 17:10:51,924:INFO:Initializing setup()
2023-07-06 17:10:51,924:INFO:self.USI: 7166
2023-07-06 17:10:51,924:INFO:self._variable_keys: {'pipeline', 'fold_groups_param', 'log_plots_param', '_ml_usecase', 'memory', 'transform_target_param', 'logging_param', 'y', 'USI', 'data', 'target_param', 'html_param', 'fold_generator', 'X', 'n_jobs_param', 'X_test', 'y_test', 'exp_id', 'X_train', 'exp_name_log', 'gpu_n_jobs_param', 'seed', 'idx', 'gpu_param', 'y_train', '_available_plots', 'fold_shuffle_param'}
2023-07-06 17:10:51,924:INFO:Checking environment
2023-07-06 17:10:51,924:INFO:python_version: 3.9.16
2023-07-06 17:10:51,924:INFO:python_build: ('main', 'Feb  1 2023 21:39:03')
2023-07-06 17:10:51,924:INFO:machine: x86_64
2023-07-06 17:10:51,924:INFO:platform: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 17:10:51,924:INFO:Memory: svmem(total=540878073856, available=521075105792, percent=3.7, used=16257548288, free=16419184640, active=32097415168, inactive=475938115584, buffers=2690527232, cached=505510813696, shared=22040576, slab=14278524928)
2023-07-06 17:10:51,926:INFO:Physical Core: 64
2023-07-06 17:10:51,926:INFO:Logical Core: 64
2023-07-06 17:10:51,926:INFO:Checking libraries
2023-07-06 17:10:51,926:INFO:System:
2023-07-06 17:10:51,926:INFO:    python: 3.9.16 | packaged by conda-forge | (main, Feb  1 2023, 21:39:03)  [GCC 11.3.0]
2023-07-06 17:10:51,926:INFO:executable: /home/mirlab/anaconda3/envs/misc/bin/python
2023-07-06 17:10:51,926:INFO:   machine: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 17:10:51,926:INFO:PyCaret required dependencies:
2023-07-06 17:10:51,926:INFO:                 pip: 23.1.2
2023-07-06 17:10:51,926:INFO:          setuptools: 67.7.2
2023-07-06 17:10:51,926:INFO:             pycaret: 3.0.4
2023-07-06 17:10:51,926:INFO:             IPython: 8.14.0
2023-07-06 17:10:51,926:INFO:          ipywidgets: 8.0.7
2023-07-06 17:10:51,926:INFO:                tqdm: 4.64.1
2023-07-06 17:10:51,926:INFO:               numpy: 1.23.5
2023-07-06 17:10:51,926:INFO:              pandas: 1.5.3
2023-07-06 17:10:51,926:INFO:              jinja2: 3.1.2
2023-07-06 17:10:51,926:INFO:               scipy: 1.10.1
2023-07-06 17:10:51,926:INFO:              joblib: 1.2.0
2023-07-06 17:10:51,926:INFO:             sklearn: 1.2.2
2023-07-06 17:10:51,926:INFO:                pyod: 1.1.0
2023-07-06 17:10:51,926:INFO:            imblearn: 0.10.1
2023-07-06 17:10:51,927:INFO:   category_encoders: 2.6.1
2023-07-06 17:10:51,927:INFO:            lightgbm: 3.3.5
2023-07-06 17:10:51,927:INFO:               numba: 0.57.0
2023-07-06 17:10:51,927:INFO:            requests: 2.28.1
2023-07-06 17:10:51,927:INFO:          matplotlib: 3.7.1
2023-07-06 17:10:51,927:INFO:          scikitplot: 0.3.7
2023-07-06 17:10:51,927:INFO:         yellowbrick: 1.5
2023-07-06 17:10:51,927:INFO:              plotly: 5.15.0
2023-07-06 17:10:51,927:INFO:    plotly-resampler: Not installed
2023-07-06 17:10:51,927:INFO:             kaleido: 0.2.1
2023-07-06 17:10:51,927:INFO:           schemdraw: 0.15
2023-07-06 17:10:51,927:INFO:         statsmodels: 0.14.0
2023-07-06 17:10:51,927:INFO:              sktime: 0.20.0
2023-07-06 17:10:51,927:INFO:               tbats: 1.1.3
2023-07-06 17:10:51,927:INFO:            pmdarima: 2.0.3
2023-07-06 17:10:51,927:INFO:              psutil: 5.9.5
2023-07-06 17:10:51,927:INFO:          markupsafe: 2.1.2
2023-07-06 17:10:51,927:INFO:             pickle5: Not installed
2023-07-06 17:10:51,927:INFO:         cloudpickle: 2.2.1
2023-07-06 17:10:51,927:INFO:         deprecation: 2.1.0
2023-07-06 17:10:51,927:INFO:              xxhash: 3.2.0
2023-07-06 17:10:51,927:INFO:           wurlitzer: 3.0.3
2023-07-06 17:10:51,927:INFO:PyCaret optional dependencies:
2023-07-06 17:10:51,927:INFO:                shap: Not installed
2023-07-06 17:10:51,927:INFO:           interpret: Not installed
2023-07-06 17:10:51,927:INFO:                umap: Not installed
2023-07-06 17:10:51,927:INFO:    pandas_profiling: 3.6.6
2023-07-06 17:10:51,927:INFO:  explainerdashboard: Not installed
2023-07-06 17:10:51,927:INFO:             autoviz: Not installed
2023-07-06 17:10:51,927:INFO:           fairlearn: Not installed
2023-07-06 17:10:51,927:INFO:          deepchecks: Not installed
2023-07-06 17:10:51,927:INFO:             xgboost: Not installed
2023-07-06 17:10:51,927:INFO:            catboost: Not installed
2023-07-06 17:10:51,927:INFO:              kmodes: Not installed
2023-07-06 17:10:51,927:INFO:             mlxtend: Not installed
2023-07-06 17:10:51,927:INFO:       statsforecast: Not installed
2023-07-06 17:10:51,927:INFO:        tune_sklearn: Not installed
2023-07-06 17:10:51,927:INFO:                 ray: Not installed
2023-07-06 17:10:51,927:INFO:            hyperopt: Not installed
2023-07-06 17:10:51,927:INFO:              optuna: 3.1.1
2023-07-06 17:10:51,927:INFO:               skopt: Not installed
2023-07-06 17:10:51,927:INFO:              mlflow: Not installed
2023-07-06 17:10:51,927:INFO:              gradio: Not installed
2023-07-06 17:10:51,927:INFO:             fastapi: Not installed
2023-07-06 17:10:51,927:INFO:             uvicorn: Not installed
2023-07-06 17:10:51,927:INFO:              m2cgen: Not installed
2023-07-06 17:10:51,927:INFO:           evidently: Not installed
2023-07-06 17:10:51,927:INFO:               fugue: Not installed
2023-07-06 17:10:51,927:INFO:           streamlit: 1.24.0
2023-07-06 17:10:51,927:INFO:             prophet: Not installed
2023-07-06 17:10:51,927:INFO:None
2023-07-06 17:10:51,927:INFO:Set up data.
2023-07-06 17:10:51,933:INFO:Set up train/test split.
2023-07-06 17:10:51,935:INFO:Set up index.
2023-07-06 17:10:51,935:INFO:Set up folding strategy.
2023-07-06 17:10:51,935:INFO:Assigning column types.
2023-07-06 17:10:51,937:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-06 17:10:51,937:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 17:10:51,942:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:10:51,947:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:10:52,007:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:52,055:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:10:52,055:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:52,055:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:52,056:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 17:10:52,060:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:10:52,065:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:10:52,125:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:52,173:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:10:52,173:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:52,173:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:52,173:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-07-06 17:10:52,178:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:10:52,183:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:10:52,243:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:52,290:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:10:52,291:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:52,291:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:52,296:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:10:52,301:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:10:52,360:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:52,407:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:10:52,408:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:52,408:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:52,408:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-07-06 17:10:52,418:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:10:52,477:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:52,525:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:10:52,525:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:52,525:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:52,535:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:10:52,595:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:52,642:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:10:52,643:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:52,643:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:52,643:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-07-06 17:10:52,712:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:52,760:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:10:52,760:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:52,760:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:52,830:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:52,877:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:10:52,877:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:52,877:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:52,878:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-06 17:10:52,947:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:52,995:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:52,995:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:53,064:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:10:53,112:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:53,112:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:53,112:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-07-06 17:10:53,229:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:53,229:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:53,345:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:53,345:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:53,346:INFO:Preparing preprocessing pipeline...
2023-07-06 17:10:53,346:INFO:Set up simple imputation.
2023-07-06 17:10:53,346:INFO:Set up column name cleaning.
2023-07-06 17:10:53,368:INFO:Finished creating preprocessing pipeline.
2023-07-06 17:10:53,372:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['PTemp_C_Max', 'AirTC_Avg', 'RH',
                                             'WS_ms_Avg', 'TPM1', 'TPM2.5',
                                             'TPM10', 'GeffRef', 'TempRef',
                                             'Daylight', 'DN_Voltage1_back_1h',
                                             'DN_Voltage1_back_2h',
                                             'DN_Voltage1_back_3h',
                                             'DN_Voltage1_back_4h',
                                             'DN_Voltage1_back_5h',
                                             'DN_Voltage1_back_6h'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-07-06 17:10:53,372:INFO:Creating final display dataframe.
2023-07-06 17:10:53,472:INFO:Setup _display_container:                     Description             Value
0                    Session id              6862
1                        Target       DN_Voltage1
2                   Target type        Regression
3           Original data shape        (2394, 17)
4        Transformed data shape        (2394, 17)
5   Transformed train set shape        (1675, 17)
6    Transformed test set shape         (719, 17)
7              Numeric features                16
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              7166
2023-07-06 17:10:53,600:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:53,600:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:53,717:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:53,717:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:10:53,717:INFO:setup() successfully completed in 1.8s...............
2023-07-06 17:10:53,718:INFO:Initializing compare_models()
2023-07-06 17:10:53,718:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6a2ac0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6a2ac0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-07-06 17:10:53,718:INFO:Checking exceptions
2023-07-06 17:10:53,719:INFO:Preparing display monitor
2023-07-06 17:10:53,736:INFO:Initializing Linear Regression
2023-07-06 17:10:53,736:INFO:Total runtime is 1.3271967569986979e-06 minutes
2023-07-06 17:10:53,739:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:53,739:INFO:Initializing create_model()
2023-07-06 17:10:53,739:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6a2ac0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197bd430>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:53,739:INFO:Checking exceptions
2023-07-06 17:10:53,739:INFO:Importing libraries
2023-07-06 17:10:53,739:INFO:Copying training dataset
2023-07-06 17:10:53,742:INFO:Defining folds
2023-07-06 17:10:53,742:INFO:Declaring metric variables
2023-07-06 17:10:53,744:INFO:Importing untrained model
2023-07-06 17:10:53,746:INFO:Linear Regression Imported successfully
2023-07-06 17:10:53,751:INFO:Starting cross validation
2023-07-06 17:10:53,752:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:53,990:INFO:Calculating mean and std
2023-07-06 17:10:53,991:INFO:Creating metrics dataframe
2023-07-06 17:10:54,062:INFO:Uploading results into container
2023-07-06 17:10:54,063:INFO:Uploading model into container now
2023-07-06 17:10:54,064:INFO:_master_model_container: 1
2023-07-06 17:10:54,064:INFO:_display_container: 2
2023-07-06 17:10:54,064:INFO:LinearRegression(n_jobs=-1)
2023-07-06 17:10:54,064:INFO:create_model() successfully completed......................................
2023-07-06 17:10:54,282:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:54,282:INFO:Creating metrics dataframe
2023-07-06 17:10:54,289:INFO:Initializing Lasso Regression
2023-07-06 17:10:54,289:INFO:Total runtime is 0.009220397472381592 minutes
2023-07-06 17:10:54,292:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:54,292:INFO:Initializing create_model()
2023-07-06 17:10:54,293:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6a2ac0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197bd430>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:54,293:INFO:Checking exceptions
2023-07-06 17:10:54,293:INFO:Importing libraries
2023-07-06 17:10:54,293:INFO:Copying training dataset
2023-07-06 17:10:54,295:INFO:Defining folds
2023-07-06 17:10:54,296:INFO:Declaring metric variables
2023-07-06 17:10:54,298:INFO:Importing untrained model
2023-07-06 17:10:54,300:INFO:Lasso Regression Imported successfully
2023-07-06 17:10:54,305:INFO:Starting cross validation
2023-07-06 17:10:54,306:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:54,384:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.548e+05, tolerance: 2.756e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:54,394:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.560e+05, tolerance: 2.822e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:54,406:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.560e+05, tolerance: 2.792e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:54,421:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.505e+05, tolerance: 2.780e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:54,426:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.498e+05, tolerance: 2.801e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:54,431:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.588e+05, tolerance: 2.790e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:54,442:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.371e+05, tolerance: 2.764e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:54,461:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.647e+05, tolerance: 2.774e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:54,468:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.318e+05, tolerance: 2.781e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:54,475:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.291e+05, tolerance: 2.783e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:54,558:INFO:Calculating mean and std
2023-07-06 17:10:54,559:INFO:Creating metrics dataframe
2023-07-06 17:10:54,614:INFO:Uploading results into container
2023-07-06 17:10:54,615:INFO:Uploading model into container now
2023-07-06 17:10:54,615:INFO:_master_model_container: 2
2023-07-06 17:10:54,615:INFO:_display_container: 2
2023-07-06 17:10:54,616:INFO:Lasso(random_state=6862)
2023-07-06 17:10:54,616:INFO:create_model() successfully completed......................................
2023-07-06 17:10:54,833:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:54,833:INFO:Creating metrics dataframe
2023-07-06 17:10:54,842:INFO:Initializing Ridge Regression
2023-07-06 17:10:54,842:INFO:Total runtime is 0.018427268664042155 minutes
2023-07-06 17:10:54,844:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:54,845:INFO:Initializing create_model()
2023-07-06 17:10:54,845:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6a2ac0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197bd430>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:54,845:INFO:Checking exceptions
2023-07-06 17:10:54,845:INFO:Importing libraries
2023-07-06 17:10:54,845:INFO:Copying training dataset
2023-07-06 17:10:54,848:INFO:Defining folds
2023-07-06 17:10:54,848:INFO:Declaring metric variables
2023-07-06 17:10:54,851:INFO:Importing untrained model
2023-07-06 17:10:54,854:INFO:Ridge Regression Imported successfully
2023-07-06 17:10:54,858:INFO:Starting cross validation
2023-07-06 17:10:54,859:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:54,928:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=5.24239e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-07-06 17:10:54,937:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=4.91276e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-07-06 17:10:54,948:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.75033e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-07-06 17:10:54,963:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=5.18945e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-07-06 17:10:54,963:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=5.20352e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-07-06 17:10:54,968:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=5.17024e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-07-06 17:10:54,972:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=5.19236e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-07-06 17:10:54,985:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=5.34908e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-07-06 17:10:54,991:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=5.26162e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-07-06 17:10:55,003:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=5.30179e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-07-06 17:10:55,095:INFO:Calculating mean and std
2023-07-06 17:10:55,097:INFO:Creating metrics dataframe
2023-07-06 17:10:55,136:INFO:Uploading results into container
2023-07-06 17:10:55,137:INFO:Uploading model into container now
2023-07-06 17:10:55,137:INFO:_master_model_container: 3
2023-07-06 17:10:55,137:INFO:_display_container: 2
2023-07-06 17:10:55,138:INFO:Ridge(random_state=6862)
2023-07-06 17:10:55,138:INFO:create_model() successfully completed......................................
2023-07-06 17:10:55,356:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:55,357:INFO:Creating metrics dataframe
2023-07-06 17:10:55,365:INFO:Initializing Elastic Net
2023-07-06 17:10:55,365:INFO:Total runtime is 0.027148707707722982 minutes
2023-07-06 17:10:55,368:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:55,368:INFO:Initializing create_model()
2023-07-06 17:10:55,368:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6a2ac0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197bd430>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:55,368:INFO:Checking exceptions
2023-07-06 17:10:55,368:INFO:Importing libraries
2023-07-06 17:10:55,368:INFO:Copying training dataset
2023-07-06 17:10:55,372:INFO:Defining folds
2023-07-06 17:10:55,372:INFO:Declaring metric variables
2023-07-06 17:10:55,374:INFO:Importing untrained model
2023-07-06 17:10:55,377:INFO:Elastic Net Imported successfully
2023-07-06 17:10:55,382:INFO:Starting cross validation
2023-07-06 17:10:55,383:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:55,439:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.316e+05, tolerance: 2.756e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:55,450:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.357e+05, tolerance: 2.822e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:55,455:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.351e+05, tolerance: 2.792e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:55,465:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.277e+05, tolerance: 2.780e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:55,477:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.306e+05, tolerance: 2.790e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:55,483:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.160e+05, tolerance: 2.764e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:55,501:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.404e+05, tolerance: 2.774e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:55,513:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.264e+05, tolerance: 2.801e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:55,514:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.101e+05, tolerance: 2.781e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:55,519:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.057e+05, tolerance: 2.783e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:10:55,565:INFO:Calculating mean and std
2023-07-06 17:10:55,567:INFO:Creating metrics dataframe
2023-07-06 17:10:55,606:INFO:Uploading results into container
2023-07-06 17:10:55,607:INFO:Uploading model into container now
2023-07-06 17:10:55,607:INFO:_master_model_container: 4
2023-07-06 17:10:55,607:INFO:_display_container: 2
2023-07-06 17:10:55,608:INFO:ElasticNet(random_state=6862)
2023-07-06 17:10:55,608:INFO:create_model() successfully completed......................................
2023-07-06 17:10:55,823:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:55,823:INFO:Creating metrics dataframe
2023-07-06 17:10:55,831:INFO:Initializing Least Angle Regression
2023-07-06 17:10:55,832:INFO:Total runtime is 0.03492536544799805 minutes
2023-07-06 17:10:55,834:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:55,835:INFO:Initializing create_model()
2023-07-06 17:10:55,835:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6a2ac0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197bd430>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:55,835:INFO:Checking exceptions
2023-07-06 17:10:55,835:INFO:Importing libraries
2023-07-06 17:10:55,835:INFO:Copying training dataset
2023-07-06 17:10:55,838:INFO:Defining folds
2023-07-06 17:10:55,838:INFO:Declaring metric variables
2023-07-06 17:10:55,841:INFO:Importing untrained model
2023-07-06 17:10:55,843:INFO:Least Angle Regression Imported successfully
2023-07-06 17:10:55,848:INFO:Starting cross validation
2023-07-06 17:10:55,849:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:56,061:INFO:Calculating mean and std
2023-07-06 17:10:56,063:INFO:Creating metrics dataframe
2023-07-06 17:10:56,102:INFO:Uploading results into container
2023-07-06 17:10:56,103:INFO:Uploading model into container now
2023-07-06 17:10:56,103:INFO:_master_model_container: 5
2023-07-06 17:10:56,103:INFO:_display_container: 2
2023-07-06 17:10:56,104:INFO:Lars(random_state=6862)
2023-07-06 17:10:56,104:INFO:create_model() successfully completed......................................
2023-07-06 17:10:56,319:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:56,319:INFO:Creating metrics dataframe
2023-07-06 17:10:56,328:INFO:Initializing Lasso Least Angle Regression
2023-07-06 17:10:56,328:INFO:Total runtime is 0.04319761196772258 minutes
2023-07-06 17:10:56,331:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:56,331:INFO:Initializing create_model()
2023-07-06 17:10:56,331:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6a2ac0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197bd430>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:56,331:INFO:Checking exceptions
2023-07-06 17:10:56,331:INFO:Importing libraries
2023-07-06 17:10:56,331:INFO:Copying training dataset
2023-07-06 17:10:56,335:INFO:Defining folds
2023-07-06 17:10:56,335:INFO:Declaring metric variables
2023-07-06 17:10:56,337:INFO:Importing untrained model
2023-07-06 17:10:56,340:INFO:Lasso Least Angle Regression Imported successfully
2023-07-06 17:10:56,345:INFO:Starting cross validation
2023-07-06 17:10:56,346:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:56,563:INFO:Calculating mean and std
2023-07-06 17:10:56,565:INFO:Creating metrics dataframe
2023-07-06 17:10:56,619:INFO:Uploading results into container
2023-07-06 17:10:56,620:INFO:Uploading model into container now
2023-07-06 17:10:56,621:INFO:_master_model_container: 6
2023-07-06 17:10:56,621:INFO:_display_container: 2
2023-07-06 17:10:56,621:INFO:LassoLars(random_state=6862)
2023-07-06 17:10:56,621:INFO:create_model() successfully completed......................................
2023-07-06 17:10:56,831:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:56,831:INFO:Creating metrics dataframe
2023-07-06 17:10:56,840:INFO:Initializing Orthogonal Matching Pursuit
2023-07-06 17:10:56,840:INFO:Total runtime is 0.051733132203420004 minutes
2023-07-06 17:10:56,843:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:56,843:INFO:Initializing create_model()
2023-07-06 17:10:56,843:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6a2ac0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197bd430>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:56,843:INFO:Checking exceptions
2023-07-06 17:10:56,843:INFO:Importing libraries
2023-07-06 17:10:56,843:INFO:Copying training dataset
2023-07-06 17:10:56,846:INFO:Defining folds
2023-07-06 17:10:56,847:INFO:Declaring metric variables
2023-07-06 17:10:56,849:INFO:Importing untrained model
2023-07-06 17:10:56,852:INFO:Orthogonal Matching Pursuit Imported successfully
2023-07-06 17:10:56,856:INFO:Starting cross validation
2023-07-06 17:10:56,857:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:57,111:INFO:Calculating mean and std
2023-07-06 17:10:57,114:INFO:Creating metrics dataframe
2023-07-06 17:10:57,156:INFO:Uploading results into container
2023-07-06 17:10:57,157:INFO:Uploading model into container now
2023-07-06 17:10:57,158:INFO:_master_model_container: 7
2023-07-06 17:10:57,158:INFO:_display_container: 2
2023-07-06 17:10:57,158:INFO:OrthogonalMatchingPursuit()
2023-07-06 17:10:57,158:INFO:create_model() successfully completed......................................
2023-07-06 17:10:57,412:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:57,412:INFO:Creating metrics dataframe
2023-07-06 17:10:57,422:INFO:Initializing Bayesian Ridge
2023-07-06 17:10:57,422:INFO:Total runtime is 0.061437280972798665 minutes
2023-07-06 17:10:57,425:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:57,425:INFO:Initializing create_model()
2023-07-06 17:10:57,425:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6a2ac0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197bd430>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:57,426:INFO:Checking exceptions
2023-07-06 17:10:57,426:INFO:Importing libraries
2023-07-06 17:10:57,426:INFO:Copying training dataset
2023-07-06 17:10:57,429:INFO:Defining folds
2023-07-06 17:10:57,429:INFO:Declaring metric variables
2023-07-06 17:10:57,432:INFO:Importing untrained model
2023-07-06 17:10:57,434:INFO:Bayesian Ridge Imported successfully
2023-07-06 17:10:57,439:INFO:Starting cross validation
2023-07-06 17:10:57,440:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:57,632:INFO:Calculating mean and std
2023-07-06 17:10:57,634:INFO:Creating metrics dataframe
2023-07-06 17:10:57,690:INFO:Uploading results into container
2023-07-06 17:10:57,690:INFO:Uploading model into container now
2023-07-06 17:10:57,691:INFO:_master_model_container: 8
2023-07-06 17:10:57,691:INFO:_display_container: 2
2023-07-06 17:10:57,691:INFO:BayesianRidge()
2023-07-06 17:10:57,692:INFO:create_model() successfully completed......................................
2023-07-06 17:10:57,905:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:57,905:INFO:Creating metrics dataframe
2023-07-06 17:10:57,915:INFO:Initializing Passive Aggressive Regressor
2023-07-06 17:10:57,915:INFO:Total runtime is 0.06964311599731446 minutes
2023-07-06 17:10:57,917:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:57,918:INFO:Initializing create_model()
2023-07-06 17:10:57,918:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6a2ac0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197bd430>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:57,918:INFO:Checking exceptions
2023-07-06 17:10:57,918:INFO:Importing libraries
2023-07-06 17:10:57,918:INFO:Copying training dataset
2023-07-06 17:10:57,921:INFO:Defining folds
2023-07-06 17:10:57,921:INFO:Declaring metric variables
2023-07-06 17:10:57,924:INFO:Importing untrained model
2023-07-06 17:10:57,927:INFO:Passive Aggressive Regressor Imported successfully
2023-07-06 17:10:57,931:INFO:Starting cross validation
2023-07-06 17:10:57,932:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:58,152:INFO:Calculating mean and std
2023-07-06 17:10:58,154:INFO:Creating metrics dataframe
2023-07-06 17:10:58,207:INFO:Uploading results into container
2023-07-06 17:10:58,208:INFO:Uploading model into container now
2023-07-06 17:10:58,209:INFO:_master_model_container: 9
2023-07-06 17:10:58,209:INFO:_display_container: 2
2023-07-06 17:10:58,209:INFO:PassiveAggressiveRegressor(random_state=6862)
2023-07-06 17:10:58,209:INFO:create_model() successfully completed......................................
2023-07-06 17:10:58,423:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:58,423:INFO:Creating metrics dataframe
2023-07-06 17:10:58,433:INFO:Initializing Huber Regressor
2023-07-06 17:10:58,433:INFO:Total runtime is 0.07827813625335694 minutes
2023-07-06 17:10:58,435:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:58,436:INFO:Initializing create_model()
2023-07-06 17:10:58,436:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6a2ac0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197bd430>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:58,436:INFO:Checking exceptions
2023-07-06 17:10:58,436:INFO:Importing libraries
2023-07-06 17:10:58,436:INFO:Copying training dataset
2023-07-06 17:10:58,439:INFO:Defining folds
2023-07-06 17:10:58,440:INFO:Declaring metric variables
2023-07-06 17:10:58,442:INFO:Importing untrained model
2023-07-06 17:10:58,445:INFO:Huber Regressor Imported successfully
2023-07-06 17:10:58,449:INFO:Starting cross validation
2023-07-06 17:10:58,450:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:58,554:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:58,555:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:58,569:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:58,571:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:58,573:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:58,581:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:58,583:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:58,590:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:58,590:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:58,620:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:10:58,674:INFO:Calculating mean and std
2023-07-06 17:10:58,676:INFO:Creating metrics dataframe
2023-07-06 17:10:58,732:INFO:Uploading results into container
2023-07-06 17:10:58,733:INFO:Uploading model into container now
2023-07-06 17:10:58,734:INFO:_master_model_container: 10
2023-07-06 17:10:58,734:INFO:_display_container: 2
2023-07-06 17:10:58,734:INFO:HuberRegressor()
2023-07-06 17:10:58,734:INFO:create_model() successfully completed......................................
2023-07-06 17:10:58,953:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:58,953:INFO:Creating metrics dataframe
2023-07-06 17:10:58,963:INFO:Initializing K Neighbors Regressor
2023-07-06 17:10:58,963:INFO:Total runtime is 0.08711008628209432 minutes
2023-07-06 17:10:58,965:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:58,966:INFO:Initializing create_model()
2023-07-06 17:10:58,966:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6a2ac0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197bd430>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:58,966:INFO:Checking exceptions
2023-07-06 17:10:58,966:INFO:Importing libraries
2023-07-06 17:10:58,966:INFO:Copying training dataset
2023-07-06 17:10:58,969:INFO:Defining folds
2023-07-06 17:10:58,970:INFO:Declaring metric variables
2023-07-06 17:10:58,972:INFO:Importing untrained model
2023-07-06 17:10:58,975:INFO:K Neighbors Regressor Imported successfully
2023-07-06 17:10:58,979:INFO:Starting cross validation
2023-07-06 17:10:58,980:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:59,233:INFO:Calculating mean and std
2023-07-06 17:10:59,235:INFO:Creating metrics dataframe
2023-07-06 17:10:59,305:INFO:Uploading results into container
2023-07-06 17:10:59,305:INFO:Uploading model into container now
2023-07-06 17:10:59,306:INFO:_master_model_container: 11
2023-07-06 17:10:59,306:INFO:_display_container: 2
2023-07-06 17:10:59,306:INFO:KNeighborsRegressor(n_jobs=-1)
2023-07-06 17:10:59,307:INFO:create_model() successfully completed......................................
2023-07-06 17:10:59,499:INFO:SubProcess create_model() end ==================================
2023-07-06 17:10:59,499:INFO:Creating metrics dataframe
2023-07-06 17:10:59,509:INFO:Initializing Decision Tree Regressor
2023-07-06 17:10:59,509:INFO:Total runtime is 0.09621598720550538 minutes
2023-07-06 17:10:59,512:INFO:SubProcess create_model() called ==================================
2023-07-06 17:10:59,512:INFO:Initializing create_model()
2023-07-06 17:10:59,512:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6a2ac0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197bd430>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:10:59,512:INFO:Checking exceptions
2023-07-06 17:10:59,512:INFO:Importing libraries
2023-07-06 17:10:59,512:INFO:Copying training dataset
2023-07-06 17:10:59,516:INFO:Defining folds
2023-07-06 17:10:59,516:INFO:Declaring metric variables
2023-07-06 17:10:59,518:INFO:Importing untrained model
2023-07-06 17:10:59,521:INFO:Decision Tree Regressor Imported successfully
2023-07-06 17:10:59,526:INFO:Starting cross validation
2023-07-06 17:10:59,527:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:10:59,771:INFO:Calculating mean and std
2023-07-06 17:10:59,773:INFO:Creating metrics dataframe
2023-07-06 17:10:59,811:INFO:Uploading results into container
2023-07-06 17:10:59,812:INFO:Uploading model into container now
2023-07-06 17:10:59,813:INFO:_master_model_container: 12
2023-07-06 17:10:59,813:INFO:_display_container: 2
2023-07-06 17:10:59,813:INFO:DecisionTreeRegressor(random_state=6862)
2023-07-06 17:10:59,813:INFO:create_model() successfully completed......................................
2023-07-06 17:11:00,011:INFO:SubProcess create_model() end ==================================
2023-07-06 17:11:00,012:INFO:Creating metrics dataframe
2023-07-06 17:11:00,022:INFO:Initializing Random Forest Regressor
2023-07-06 17:11:00,022:INFO:Total runtime is 0.10476030906041464 minutes
2023-07-06 17:11:00,024:INFO:SubProcess create_model() called ==================================
2023-07-06 17:11:00,025:INFO:Initializing create_model()
2023-07-06 17:11:00,025:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6a2ac0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197bd430>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:11:00,025:INFO:Checking exceptions
2023-07-06 17:11:00,025:INFO:Importing libraries
2023-07-06 17:11:00,025:INFO:Copying training dataset
2023-07-06 17:11:00,028:INFO:Defining folds
2023-07-06 17:11:00,028:INFO:Declaring metric variables
2023-07-06 17:11:00,031:INFO:Importing untrained model
2023-07-06 17:11:00,033:INFO:Random Forest Regressor Imported successfully
2023-07-06 17:11:00,038:INFO:Starting cross validation
2023-07-06 17:11:00,039:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:11:00,638:INFO:Calculating mean and std
2023-07-06 17:11:00,640:INFO:Creating metrics dataframe
2023-07-06 17:11:00,686:INFO:Uploading results into container
2023-07-06 17:11:00,686:INFO:Uploading model into container now
2023-07-06 17:11:00,687:INFO:_master_model_container: 13
2023-07-06 17:11:00,687:INFO:_display_container: 2
2023-07-06 17:11:00,687:INFO:RandomForestRegressor(n_jobs=-1, random_state=6862)
2023-07-06 17:11:00,687:INFO:create_model() successfully completed......................................
2023-07-06 17:11:00,863:INFO:SubProcess create_model() end ==================================
2023-07-06 17:11:00,864:INFO:Creating metrics dataframe
2023-07-06 17:11:00,874:INFO:Initializing Extra Trees Regressor
2023-07-06 17:11:00,874:INFO:Total runtime is 0.11896030505498251 minutes
2023-07-06 17:11:00,876:INFO:SubProcess create_model() called ==================================
2023-07-06 17:11:00,877:INFO:Initializing create_model()
2023-07-06 17:11:00,877:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6a2ac0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197bd430>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:11:00,877:INFO:Checking exceptions
2023-07-06 17:11:00,877:INFO:Importing libraries
2023-07-06 17:11:00,877:INFO:Copying training dataset
2023-07-06 17:11:00,880:INFO:Defining folds
2023-07-06 17:11:00,880:INFO:Declaring metric variables
2023-07-06 17:11:00,883:INFO:Importing untrained model
2023-07-06 17:11:00,885:INFO:Extra Trees Regressor Imported successfully
2023-07-06 17:11:00,890:INFO:Starting cross validation
2023-07-06 17:11:00,891:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:11:01,414:INFO:Calculating mean and std
2023-07-06 17:11:01,415:INFO:Creating metrics dataframe
2023-07-06 17:11:01,478:INFO:Uploading results into container
2023-07-06 17:11:01,478:INFO:Uploading model into container now
2023-07-06 17:11:01,478:INFO:_master_model_container: 14
2023-07-06 17:11:01,478:INFO:_display_container: 2
2023-07-06 17:11:01,479:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6862)
2023-07-06 17:11:01,479:INFO:create_model() successfully completed......................................
2023-07-06 17:11:01,654:INFO:SubProcess create_model() end ==================================
2023-07-06 17:11:01,654:INFO:Creating metrics dataframe
2023-07-06 17:11:01,665:INFO:Initializing AdaBoost Regressor
2023-07-06 17:11:01,665:INFO:Total runtime is 0.1321486790974935 minutes
2023-07-06 17:11:01,668:INFO:SubProcess create_model() called ==================================
2023-07-06 17:11:01,668:INFO:Initializing create_model()
2023-07-06 17:11:01,668:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6a2ac0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197bd430>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:11:01,668:INFO:Checking exceptions
2023-07-06 17:11:01,668:INFO:Importing libraries
2023-07-06 17:11:01,668:INFO:Copying training dataset
2023-07-06 17:11:01,671:INFO:Defining folds
2023-07-06 17:11:01,672:INFO:Declaring metric variables
2023-07-06 17:11:01,674:INFO:Importing untrained model
2023-07-06 17:11:01,677:INFO:AdaBoost Regressor Imported successfully
2023-07-06 17:11:01,681:INFO:Starting cross validation
2023-07-06 17:11:01,682:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:11:02,133:INFO:Calculating mean and std
2023-07-06 17:11:02,135:INFO:Creating metrics dataframe
2023-07-06 17:11:02,213:INFO:Uploading results into container
2023-07-06 17:11:02,214:INFO:Uploading model into container now
2023-07-06 17:11:02,214:INFO:_master_model_container: 15
2023-07-06 17:11:02,214:INFO:_display_container: 2
2023-07-06 17:11:02,215:INFO:AdaBoostRegressor(random_state=6862)
2023-07-06 17:11:02,215:INFO:create_model() successfully completed......................................
2023-07-06 17:11:02,399:INFO:SubProcess create_model() end ==================================
2023-07-06 17:11:02,399:INFO:Creating metrics dataframe
2023-07-06 17:11:02,409:INFO:Initializing Gradient Boosting Regressor
2023-07-06 17:11:02,409:INFO:Total runtime is 0.14455066521962484 minutes
2023-07-06 17:11:02,412:INFO:SubProcess create_model() called ==================================
2023-07-06 17:11:02,412:INFO:Initializing create_model()
2023-07-06 17:11:02,412:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6a2ac0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197bd430>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:11:02,412:INFO:Checking exceptions
2023-07-06 17:11:02,412:INFO:Importing libraries
2023-07-06 17:11:02,412:INFO:Copying training dataset
2023-07-06 17:11:02,415:INFO:Defining folds
2023-07-06 17:11:02,416:INFO:Declaring metric variables
2023-07-06 17:11:02,418:INFO:Importing untrained model
2023-07-06 17:11:02,421:INFO:Gradient Boosting Regressor Imported successfully
2023-07-06 17:11:02,425:INFO:Starting cross validation
2023-07-06 17:11:02,426:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:11:03,278:INFO:Calculating mean and std
2023-07-06 17:11:03,280:INFO:Creating metrics dataframe
2023-07-06 17:11:03,348:INFO:Uploading results into container
2023-07-06 17:11:03,348:INFO:Uploading model into container now
2023-07-06 17:11:03,349:INFO:_master_model_container: 16
2023-07-06 17:11:03,349:INFO:_display_container: 2
2023-07-06 17:11:03,350:INFO:GradientBoostingRegressor(random_state=6862)
2023-07-06 17:11:03,350:INFO:create_model() successfully completed......................................
2023-07-06 17:11:03,552:INFO:SubProcess create_model() end ==================================
2023-07-06 17:11:03,552:INFO:Creating metrics dataframe
2023-07-06 17:11:03,562:INFO:Initializing Light Gradient Boosting Machine
2023-07-06 17:11:03,563:INFO:Total runtime is 0.16377248366673788 minutes
2023-07-06 17:11:03,565:INFO:SubProcess create_model() called ==================================
2023-07-06 17:11:03,565:INFO:Initializing create_model()
2023-07-06 17:11:03,566:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6a2ac0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197bd430>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:11:03,566:INFO:Checking exceptions
2023-07-06 17:11:03,566:INFO:Importing libraries
2023-07-06 17:11:03,566:INFO:Copying training dataset
2023-07-06 17:11:03,569:INFO:Defining folds
2023-07-06 17:11:03,569:INFO:Declaring metric variables
2023-07-06 17:11:03,572:INFO:Importing untrained model
2023-07-06 17:11:03,574:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-06 17:11:03,579:INFO:Starting cross validation
2023-07-06 17:11:03,580:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:11:04,120:INFO:Calculating mean and std
2023-07-06 17:11:04,122:INFO:Creating metrics dataframe
2023-07-06 17:11:04,209:INFO:Uploading results into container
2023-07-06 17:11:04,210:INFO:Uploading model into container now
2023-07-06 17:11:04,210:INFO:_master_model_container: 17
2023-07-06 17:11:04,210:INFO:_display_container: 2
2023-07-06 17:11:04,211:INFO:LGBMRegressor(random_state=6862)
2023-07-06 17:11:04,211:INFO:create_model() successfully completed......................................
2023-07-06 17:11:04,413:INFO:SubProcess create_model() end ==================================
2023-07-06 17:11:04,413:INFO:Creating metrics dataframe
2023-07-06 17:11:04,424:INFO:Initializing Dummy Regressor
2023-07-06 17:11:04,424:INFO:Total runtime is 0.17813384930292767 minutes
2023-07-06 17:11:04,427:INFO:SubProcess create_model() called ==================================
2023-07-06 17:11:04,427:INFO:Initializing create_model()
2023-07-06 17:11:04,427:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6a2ac0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f27197bd430>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:11:04,427:INFO:Checking exceptions
2023-07-06 17:11:04,427:INFO:Importing libraries
2023-07-06 17:11:04,428:INFO:Copying training dataset
2023-07-06 17:11:04,431:INFO:Defining folds
2023-07-06 17:11:04,431:INFO:Declaring metric variables
2023-07-06 17:11:04,433:INFO:Importing untrained model
2023-07-06 17:11:04,436:INFO:Dummy Regressor Imported successfully
2023-07-06 17:11:04,441:INFO:Starting cross validation
2023-07-06 17:11:04,442:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:11:04,667:INFO:Calculating mean and std
2023-07-06 17:11:04,669:INFO:Creating metrics dataframe
2023-07-06 17:11:04,714:INFO:Uploading results into container
2023-07-06 17:11:04,715:INFO:Uploading model into container now
2023-07-06 17:11:04,715:INFO:_master_model_container: 18
2023-07-06 17:11:04,715:INFO:_display_container: 2
2023-07-06 17:11:04,716:INFO:DummyRegressor()
2023-07-06 17:11:04,716:INFO:create_model() successfully completed......................................
2023-07-06 17:11:04,927:INFO:SubProcess create_model() end ==================================
2023-07-06 17:11:04,927:INFO:Creating metrics dataframe
2023-07-06 17:11:04,945:INFO:Initializing create_model()
2023-07-06 17:11:04,945:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25ae6a2ac0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6862), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:11:04,945:INFO:Checking exceptions
2023-07-06 17:11:04,947:INFO:Importing libraries
2023-07-06 17:11:04,947:INFO:Copying training dataset
2023-07-06 17:11:04,950:INFO:Defining folds
2023-07-06 17:11:04,950:INFO:Declaring metric variables
2023-07-06 17:11:04,950:INFO:Importing untrained model
2023-07-06 17:11:04,950:INFO:Declaring custom model
2023-07-06 17:11:04,950:INFO:Extra Trees Regressor Imported successfully
2023-07-06 17:11:04,951:INFO:Cross validation set to False
2023-07-06 17:11:04,951:INFO:Fitting Model
2023-07-06 17:11:05,285:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6862)
2023-07-06 17:11:05,285:INFO:create_model() successfully completed......................................
2023-07-06 17:11:05,520:INFO:_master_model_container: 18
2023-07-06 17:11:05,520:INFO:_display_container: 2
2023-07-06 17:11:05,521:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6862)
2023-07-06 17:11:05,521:INFO:compare_models() successfully completed......................................
2023-07-06 17:11:05,610:INFO:PyCaret RegressionExperiment
2023-07-06 17:11:05,610:INFO:Logging name: reg-default-name
2023-07-06 17:11:05,610:INFO:ML Usecase: MLUsecase.REGRESSION
2023-07-06 17:11:05,610:INFO:version 3.0.4
2023-07-06 17:11:05,610:INFO:Initializing setup()
2023-07-06 17:11:05,610:INFO:self.USI: 8b40
2023-07-06 17:11:05,610:INFO:self._variable_keys: {'pipeline', 'fold_groups_param', 'log_plots_param', '_ml_usecase', 'memory', 'transform_target_param', 'logging_param', 'y', 'USI', 'data', 'target_param', 'html_param', 'fold_generator', 'X', 'n_jobs_param', 'X_test', 'y_test', 'exp_id', 'X_train', 'exp_name_log', 'gpu_n_jobs_param', 'seed', 'idx', 'gpu_param', 'y_train', '_available_plots', 'fold_shuffle_param'}
2023-07-06 17:11:05,610:INFO:Checking environment
2023-07-06 17:11:05,610:INFO:python_version: 3.9.16
2023-07-06 17:11:05,610:INFO:python_build: ('main', 'Feb  1 2023 21:39:03')
2023-07-06 17:11:05,610:INFO:machine: x86_64
2023-07-06 17:11:05,610:INFO:platform: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 17:11:05,611:INFO:Memory: svmem(total=540878073856, available=520712380416, percent=3.7, used=16620294144, free=15876485120, active=32097480704, inactive=476439867392, buffers=2690572288, cached=505690722304, shared=22040576, slab=14279184384)
2023-07-06 17:11:05,612:INFO:Physical Core: 64
2023-07-06 17:11:05,612:INFO:Logical Core: 64
2023-07-06 17:11:05,612:INFO:Checking libraries
2023-07-06 17:11:05,612:INFO:System:
2023-07-06 17:11:05,612:INFO:    python: 3.9.16 | packaged by conda-forge | (main, Feb  1 2023, 21:39:03)  [GCC 11.3.0]
2023-07-06 17:11:05,612:INFO:executable: /home/mirlab/anaconda3/envs/misc/bin/python
2023-07-06 17:11:05,612:INFO:   machine: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 17:11:05,612:INFO:PyCaret required dependencies:
2023-07-06 17:11:05,613:INFO:                 pip: 23.1.2
2023-07-06 17:11:05,613:INFO:          setuptools: 67.7.2
2023-07-06 17:11:05,613:INFO:             pycaret: 3.0.4
2023-07-06 17:11:05,613:INFO:             IPython: 8.14.0
2023-07-06 17:11:05,613:INFO:          ipywidgets: 8.0.7
2023-07-06 17:11:05,613:INFO:                tqdm: 4.64.1
2023-07-06 17:11:05,613:INFO:               numpy: 1.23.5
2023-07-06 17:11:05,613:INFO:              pandas: 1.5.3
2023-07-06 17:11:05,613:INFO:              jinja2: 3.1.2
2023-07-06 17:11:05,613:INFO:               scipy: 1.10.1
2023-07-06 17:11:05,613:INFO:              joblib: 1.2.0
2023-07-06 17:11:05,613:INFO:             sklearn: 1.2.2
2023-07-06 17:11:05,613:INFO:                pyod: 1.1.0
2023-07-06 17:11:05,613:INFO:            imblearn: 0.10.1
2023-07-06 17:11:05,613:INFO:   category_encoders: 2.6.1
2023-07-06 17:11:05,613:INFO:            lightgbm: 3.3.5
2023-07-06 17:11:05,613:INFO:               numba: 0.57.0
2023-07-06 17:11:05,613:INFO:            requests: 2.28.1
2023-07-06 17:11:05,613:INFO:          matplotlib: 3.7.1
2023-07-06 17:11:05,613:INFO:          scikitplot: 0.3.7
2023-07-06 17:11:05,613:INFO:         yellowbrick: 1.5
2023-07-06 17:11:05,613:INFO:              plotly: 5.15.0
2023-07-06 17:11:05,613:INFO:    plotly-resampler: Not installed
2023-07-06 17:11:05,613:INFO:             kaleido: 0.2.1
2023-07-06 17:11:05,613:INFO:           schemdraw: 0.15
2023-07-06 17:11:05,613:INFO:         statsmodels: 0.14.0
2023-07-06 17:11:05,613:INFO:              sktime: 0.20.0
2023-07-06 17:11:05,613:INFO:               tbats: 1.1.3
2023-07-06 17:11:05,613:INFO:            pmdarima: 2.0.3
2023-07-06 17:11:05,613:INFO:              psutil: 5.9.5
2023-07-06 17:11:05,613:INFO:          markupsafe: 2.1.2
2023-07-06 17:11:05,613:INFO:             pickle5: Not installed
2023-07-06 17:11:05,613:INFO:         cloudpickle: 2.2.1
2023-07-06 17:11:05,613:INFO:         deprecation: 2.1.0
2023-07-06 17:11:05,613:INFO:              xxhash: 3.2.0
2023-07-06 17:11:05,613:INFO:           wurlitzer: 3.0.3
2023-07-06 17:11:05,613:INFO:PyCaret optional dependencies:
2023-07-06 17:11:05,613:INFO:                shap: Not installed
2023-07-06 17:11:05,613:INFO:           interpret: Not installed
2023-07-06 17:11:05,613:INFO:                umap: Not installed
2023-07-06 17:11:05,613:INFO:    pandas_profiling: 3.6.6
2023-07-06 17:11:05,613:INFO:  explainerdashboard: Not installed
2023-07-06 17:11:05,613:INFO:             autoviz: Not installed
2023-07-06 17:11:05,613:INFO:           fairlearn: Not installed
2023-07-06 17:11:05,613:INFO:          deepchecks: Not installed
2023-07-06 17:11:05,613:INFO:             xgboost: Not installed
2023-07-06 17:11:05,613:INFO:            catboost: Not installed
2023-07-06 17:11:05,613:INFO:              kmodes: Not installed
2023-07-06 17:11:05,613:INFO:             mlxtend: Not installed
2023-07-06 17:11:05,613:INFO:       statsforecast: Not installed
2023-07-06 17:11:05,613:INFO:        tune_sklearn: Not installed
2023-07-06 17:11:05,613:INFO:                 ray: Not installed
2023-07-06 17:11:05,613:INFO:            hyperopt: Not installed
2023-07-06 17:11:05,614:INFO:              optuna: 3.1.1
2023-07-06 17:11:05,614:INFO:               skopt: Not installed
2023-07-06 17:11:05,614:INFO:              mlflow: Not installed
2023-07-06 17:11:05,614:INFO:              gradio: Not installed
2023-07-06 17:11:05,614:INFO:             fastapi: Not installed
2023-07-06 17:11:05,614:INFO:             uvicorn: Not installed
2023-07-06 17:11:05,614:INFO:              m2cgen: Not installed
2023-07-06 17:11:05,614:INFO:           evidently: Not installed
2023-07-06 17:11:05,614:INFO:               fugue: Not installed
2023-07-06 17:11:05,614:INFO:           streamlit: 1.24.0
2023-07-06 17:11:05,614:INFO:             prophet: Not installed
2023-07-06 17:11:05,614:INFO:None
2023-07-06 17:11:05,614:INFO:Set up data.
2023-07-06 17:11:05,619:INFO:Set up train/test split.
2023-07-06 17:11:05,621:INFO:Set up index.
2023-07-06 17:11:05,621:INFO:Set up folding strategy.
2023-07-06 17:11:05,621:INFO:Assigning column types.
2023-07-06 17:11:05,624:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-06 17:11:05,624:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 17:11:05,629:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:11:05,634:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:11:05,694:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:11:05,741:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:11:05,741:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:11:05,742:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:11:05,742:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 17:11:05,747:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:11:05,752:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:11:05,811:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:11:05,858:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:11:05,858:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:11:05,859:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:11:05,859:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-07-06 17:11:05,864:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:11:05,868:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:11:05,927:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:11:05,975:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:11:05,975:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:11:05,975:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:11:05,980:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:11:05,985:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:11:06,045:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:11:06,092:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:11:06,092:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:11:06,092:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:11:06,093:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-07-06 17:11:06,102:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:11:06,162:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:11:06,209:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:11:06,210:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:11:06,210:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:11:06,220:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:11:06,279:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:11:06,326:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:11:06,327:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:11:06,327:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:11:06,327:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-07-06 17:11:06,396:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:11:06,443:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:11:06,443:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:11:06,443:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:11:06,513:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:11:06,560:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:11:06,561:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:11:06,561:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:11:06,561:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-06 17:11:06,629:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:11:06,677:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:11:06,677:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:11:06,746:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:11:06,794:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:11:06,794:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:11:06,794:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-07-06 17:11:06,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:11:06,911:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:11:07,028:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:11:07,028:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:11:07,028:INFO:Preparing preprocessing pipeline...
2023-07-06 17:11:07,028:INFO:Set up simple imputation.
2023-07-06 17:11:07,029:INFO:Set up column name cleaning.
2023-07-06 17:11:07,051:INFO:Finished creating preprocessing pipeline.
2023-07-06 17:11:07,055:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['PTemp_C_Max', 'AirTC_Avg', 'RH',
                                             'WS_ms_Avg', 'TPM1', 'TPM2.5',
                                             'TPM10', 'GeffRef', 'TempRef',
                                             'Daylight', 'DN_Voltage2_back_1h',
                                             'DN_Voltage2_back_2h',
                                             'DN_Voltage2_back_3h',
                                             'DN_Voltage2_back_4h',
                                             'DN_Voltage2_back_5h',
                                             'DN_Voltage2_back_6h'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-07-06 17:11:07,055:INFO:Creating final display dataframe.
2023-07-06 17:11:07,155:INFO:Setup _display_container:                     Description             Value
0                    Session id               958
1                        Target       DN_Voltage2
2                   Target type        Regression
3           Original data shape        (2394, 17)
4        Transformed data shape        (2394, 17)
5   Transformed train set shape        (1675, 17)
6    Transformed test set shape         (719, 17)
7              Numeric features                16
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              8b40
2023-07-06 17:11:07,283:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:11:07,284:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:11:07,401:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:11:07,401:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:11:07,402:INFO:setup() successfully completed in 1.8s...............
2023-07-06 17:11:07,402:INFO:Initializing compare_models()
2023-07-06 17:11:07,402:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b149bf70>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f25b149bf70>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-07-06 17:11:07,402:INFO:Checking exceptions
2023-07-06 17:11:07,403:INFO:Preparing display monitor
2023-07-06 17:11:07,420:INFO:Initializing Linear Regression
2023-07-06 17:11:07,421:INFO:Total runtime is 2.562999725341797e-06 minutes
2023-07-06 17:11:07,423:INFO:SubProcess create_model() called ==================================
2023-07-06 17:11:07,423:INFO:Initializing create_model()
2023-07-06 17:11:07,423:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b149bf70>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea94ee0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:11:07,423:INFO:Checking exceptions
2023-07-06 17:11:07,423:INFO:Importing libraries
2023-07-06 17:11:07,423:INFO:Copying training dataset
2023-07-06 17:11:07,426:INFO:Defining folds
2023-07-06 17:11:07,426:INFO:Declaring metric variables
2023-07-06 17:11:07,428:INFO:Importing untrained model
2023-07-06 17:11:07,431:INFO:Linear Regression Imported successfully
2023-07-06 17:11:07,435:INFO:Starting cross validation
2023-07-06 17:11:07,436:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:11:07,683:INFO:Calculating mean and std
2023-07-06 17:11:07,684:INFO:Creating metrics dataframe
2023-07-06 17:11:07,754:INFO:Uploading results into container
2023-07-06 17:11:07,754:INFO:Uploading model into container now
2023-07-06 17:11:07,755:INFO:_master_model_container: 1
2023-07-06 17:11:07,755:INFO:_display_container: 2
2023-07-06 17:11:07,756:INFO:LinearRegression(n_jobs=-1)
2023-07-06 17:11:07,756:INFO:create_model() successfully completed......................................
2023-07-06 17:11:08,017:INFO:SubProcess create_model() end ==================================
2023-07-06 17:11:08,017:INFO:Creating metrics dataframe
2023-07-06 17:11:08,025:INFO:Initializing Lasso Regression
2023-07-06 17:11:08,025:INFO:Total runtime is 0.010074810187021891 minutes
2023-07-06 17:11:08,028:INFO:SubProcess create_model() called ==================================
2023-07-06 17:11:08,028:INFO:Initializing create_model()
2023-07-06 17:11:08,028:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b149bf70>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea94ee0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:11:08,028:INFO:Checking exceptions
2023-07-06 17:11:08,028:INFO:Importing libraries
2023-07-06 17:11:08,028:INFO:Copying training dataset
2023-07-06 17:11:08,031:INFO:Defining folds
2023-07-06 17:11:08,031:INFO:Declaring metric variables
2023-07-06 17:11:08,033:INFO:Importing untrained model
2023-07-06 17:11:08,036:INFO:Lasso Regression Imported successfully
2023-07-06 17:11:08,041:INFO:Starting cross validation
2023-07-06 17:11:08,042:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:11:08,097:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.663e+05, tolerance: 2.644e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:11:08,103:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.727e+05, tolerance: 2.648e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:11:08,119:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.784e+05, tolerance: 2.686e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:11:08,133:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.757e+05, tolerance: 2.678e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:11:08,138:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.561e+05, tolerance: 2.644e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:11:08,139:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.694e+05, tolerance: 2.686e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:11:08,148:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.719e+05, tolerance: 2.665e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:11:08,171:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.643e+05, tolerance: 2.656e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:11:08,177:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.880e+05, tolerance: 2.639e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:11:08,180:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.697e+05, tolerance: 2.668e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:11:08,273:INFO:Calculating mean and std
2023-07-06 17:11:08,273:INFO:Creating metrics dataframe
2023-07-06 17:11:08,345:INFO:Uploading results into container
2023-07-06 17:11:08,346:INFO:Uploading model into container now
2023-07-06 17:11:08,346:INFO:_master_model_container: 2
2023-07-06 17:11:08,346:INFO:_display_container: 2
2023-07-06 17:11:08,347:INFO:Lasso(random_state=958)
2023-07-06 17:11:08,347:INFO:create_model() successfully completed......................................
2023-07-06 17:11:08,562:INFO:SubProcess create_model() end ==================================
2023-07-06 17:11:08,563:INFO:Creating metrics dataframe
2023-07-06 17:11:08,571:INFO:Initializing Ridge Regression
2023-07-06 17:11:08,571:INFO:Total runtime is 0.019180440902709962 minutes
2023-07-06 17:11:08,574:INFO:SubProcess create_model() called ==================================
2023-07-06 17:11:08,574:INFO:Initializing create_model()
2023-07-06 17:11:08,574:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b149bf70>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea94ee0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:11:08,574:INFO:Checking exceptions
2023-07-06 17:11:08,574:INFO:Importing libraries
2023-07-06 17:11:08,574:INFO:Copying training dataset
2023-07-06 17:11:08,578:INFO:Defining folds
2023-07-06 17:11:08,578:INFO:Declaring metric variables
2023-07-06 17:11:08,581:INFO:Importing untrained model
2023-07-06 17:11:08,583:INFO:Ridge Regression Imported successfully
2023-07-06 17:11:08,588:INFO:Starting cross validation
2023-07-06 17:11:08,589:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:11:08,697:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=5.6203e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-07-06 17:11:08,804:INFO:Calculating mean and std
2023-07-06 17:11:08,806:INFO:Creating metrics dataframe
2023-07-06 17:11:08,851:INFO:Uploading results into container
2023-07-06 17:11:08,852:INFO:Uploading model into container now
2023-07-06 17:11:08,853:INFO:_master_model_container: 3
2023-07-06 17:11:08,853:INFO:_display_container: 2
2023-07-06 17:11:08,853:INFO:Ridge(random_state=958)
2023-07-06 17:11:08,853:INFO:create_model() successfully completed......................................
2023-07-06 17:11:09,072:INFO:SubProcess create_model() end ==================================
2023-07-06 17:11:09,073:INFO:Creating metrics dataframe
2023-07-06 17:11:09,081:INFO:Initializing Elastic Net
2023-07-06 17:11:09,081:INFO:Total runtime is 0.027680504322052005 minutes
2023-07-06 17:11:09,084:INFO:SubProcess create_model() called ==================================
2023-07-06 17:11:09,084:INFO:Initializing create_model()
2023-07-06 17:11:09,084:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b149bf70>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea94ee0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:11:09,084:INFO:Checking exceptions
2023-07-06 17:11:09,084:INFO:Importing libraries
2023-07-06 17:11:09,084:INFO:Copying training dataset
2023-07-06 17:11:09,088:INFO:Defining folds
2023-07-06 17:11:09,088:INFO:Declaring metric variables
2023-07-06 17:11:09,091:INFO:Importing untrained model
2023-07-06 17:11:09,093:INFO:Elastic Net Imported successfully
2023-07-06 17:11:09,098:INFO:Starting cross validation
2023-07-06 17:11:09,099:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:11:09,155:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.105e+05, tolerance: 2.644e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:11:09,164:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.179e+05, tolerance: 2.648e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:11:09,173:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.172e+05, tolerance: 2.678e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:11:09,182:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.163e+05, tolerance: 2.686e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:11:09,194:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.135e+05, tolerance: 2.665e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:11:09,200:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.135e+05, tolerance: 2.686e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:11:09,212:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.005e+05, tolerance: 2.644e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:11:09,219:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.044e+05, tolerance: 2.656e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:11:09,227:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.247e+05, tolerance: 2.639e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:11:09,233:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.105e+05, tolerance: 2.668e+04
  model = cd_fast.enet_coordinate_descent(

2023-07-06 17:11:09,359:INFO:Calculating mean and std
2023-07-06 17:11:09,361:INFO:Creating metrics dataframe
2023-07-06 17:11:09,430:INFO:Uploading results into container
2023-07-06 17:11:09,431:INFO:Uploading model into container now
2023-07-06 17:11:09,432:INFO:_master_model_container: 4
2023-07-06 17:11:09,432:INFO:_display_container: 2
2023-07-06 17:11:09,432:INFO:ElasticNet(random_state=958)
2023-07-06 17:11:09,432:INFO:create_model() successfully completed......................................
2023-07-06 17:11:09,639:INFO:SubProcess create_model() end ==================================
2023-07-06 17:11:09,639:INFO:Creating metrics dataframe
2023-07-06 17:11:09,647:INFO:Initializing Least Angle Regression
2023-07-06 17:11:09,648:INFO:Total runtime is 0.037120230992635096 minutes
2023-07-06 17:11:09,650:INFO:SubProcess create_model() called ==================================
2023-07-06 17:11:09,651:INFO:Initializing create_model()
2023-07-06 17:11:09,651:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b149bf70>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea94ee0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:11:09,651:INFO:Checking exceptions
2023-07-06 17:11:09,651:INFO:Importing libraries
2023-07-06 17:11:09,651:INFO:Copying training dataset
2023-07-06 17:11:09,654:INFO:Defining folds
2023-07-06 17:11:09,654:INFO:Declaring metric variables
2023-07-06 17:11:09,657:INFO:Importing untrained model
2023-07-06 17:11:09,659:INFO:Least Angle Regression Imported successfully
2023-07-06 17:11:09,664:INFO:Starting cross validation
2023-07-06 17:11:09,665:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:11:09,893:INFO:Calculating mean and std
2023-07-06 17:11:09,895:INFO:Creating metrics dataframe
2023-07-06 17:11:09,961:INFO:Uploading results into container
2023-07-06 17:11:09,962:INFO:Uploading model into container now
2023-07-06 17:11:09,962:INFO:_master_model_container: 5
2023-07-06 17:11:09,963:INFO:_display_container: 2
2023-07-06 17:11:09,963:INFO:Lars(random_state=958)
2023-07-06 17:11:09,963:INFO:create_model() successfully completed......................................
2023-07-06 17:11:10,174:INFO:SubProcess create_model() end ==================================
2023-07-06 17:11:10,175:INFO:Creating metrics dataframe
2023-07-06 17:11:10,183:INFO:Initializing Lasso Least Angle Regression
2023-07-06 17:11:10,184:INFO:Total runtime is 0.04605238437652588 minutes
2023-07-06 17:11:10,186:INFO:SubProcess create_model() called ==================================
2023-07-06 17:11:10,187:INFO:Initializing create_model()
2023-07-06 17:11:10,187:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b149bf70>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea94ee0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:11:10,187:INFO:Checking exceptions
2023-07-06 17:11:10,187:INFO:Importing libraries
2023-07-06 17:11:10,187:INFO:Copying training dataset
2023-07-06 17:11:10,190:INFO:Defining folds
2023-07-06 17:11:10,190:INFO:Declaring metric variables
2023-07-06 17:11:10,193:INFO:Importing untrained model
2023-07-06 17:11:10,195:INFO:Lasso Least Angle Regression Imported successfully
2023-07-06 17:11:10,200:INFO:Starting cross validation
2023-07-06 17:11:10,201:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:11:10,457:INFO:Calculating mean and std
2023-07-06 17:11:10,459:INFO:Creating metrics dataframe
2023-07-06 17:11:10,504:INFO:Uploading results into container
2023-07-06 17:11:10,505:INFO:Uploading model into container now
2023-07-06 17:11:10,505:INFO:_master_model_container: 6
2023-07-06 17:11:10,506:INFO:_display_container: 2
2023-07-06 17:11:10,506:INFO:LassoLars(random_state=958)
2023-07-06 17:11:10,506:INFO:create_model() successfully completed......................................
2023-07-06 17:11:10,716:INFO:SubProcess create_model() end ==================================
2023-07-06 17:11:10,716:INFO:Creating metrics dataframe
2023-07-06 17:11:10,726:INFO:Initializing Orthogonal Matching Pursuit
2023-07-06 17:11:10,726:INFO:Total runtime is 0.05509169499079387 minutes
2023-07-06 17:11:10,729:INFO:SubProcess create_model() called ==================================
2023-07-06 17:11:10,729:INFO:Initializing create_model()
2023-07-06 17:11:10,729:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b149bf70>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea94ee0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:11:10,729:INFO:Checking exceptions
2023-07-06 17:11:10,729:INFO:Importing libraries
2023-07-06 17:11:10,729:INFO:Copying training dataset
2023-07-06 17:11:10,732:INFO:Defining folds
2023-07-06 17:11:10,733:INFO:Declaring metric variables
2023-07-06 17:11:10,735:INFO:Importing untrained model
2023-07-06 17:11:10,738:INFO:Orthogonal Matching Pursuit Imported successfully
2023-07-06 17:11:10,742:INFO:Starting cross validation
2023-07-06 17:11:10,743:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:11:10,941:INFO:Calculating mean and std
2023-07-06 17:11:10,943:INFO:Creating metrics dataframe
2023-07-06 17:11:10,988:INFO:Uploading results into container
2023-07-06 17:11:10,989:INFO:Uploading model into container now
2023-07-06 17:11:10,989:INFO:_master_model_container: 7
2023-07-06 17:11:10,989:INFO:_display_container: 2
2023-07-06 17:11:10,990:INFO:OrthogonalMatchingPursuit()
2023-07-06 17:11:10,990:INFO:create_model() successfully completed......................................
2023-07-06 17:11:11,191:INFO:SubProcess create_model() end ==================================
2023-07-06 17:11:11,191:INFO:Creating metrics dataframe
2023-07-06 17:11:11,201:INFO:Initializing Bayesian Ridge
2023-07-06 17:11:11,201:INFO:Total runtime is 0.06300464471181234 minutes
2023-07-06 17:11:11,203:INFO:SubProcess create_model() called ==================================
2023-07-06 17:11:11,204:INFO:Initializing create_model()
2023-07-06 17:11:11,204:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b149bf70>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea94ee0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:11:11,204:INFO:Checking exceptions
2023-07-06 17:11:11,204:INFO:Importing libraries
2023-07-06 17:11:11,204:INFO:Copying training dataset
2023-07-06 17:11:11,207:INFO:Defining folds
2023-07-06 17:11:11,207:INFO:Declaring metric variables
2023-07-06 17:11:11,210:INFO:Importing untrained model
2023-07-06 17:11:11,212:INFO:Bayesian Ridge Imported successfully
2023-07-06 17:11:11,217:INFO:Starting cross validation
2023-07-06 17:11:11,218:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:11:11,488:INFO:Calculating mean and std
2023-07-06 17:11:11,489:INFO:Creating metrics dataframe
2023-07-06 17:11:11,536:INFO:Uploading results into container
2023-07-06 17:11:11,537:INFO:Uploading model into container now
2023-07-06 17:11:11,537:INFO:_master_model_container: 8
2023-07-06 17:11:11,537:INFO:_display_container: 2
2023-07-06 17:11:11,538:INFO:BayesianRidge()
2023-07-06 17:11:11,538:INFO:create_model() successfully completed......................................
2023-07-06 17:11:11,736:INFO:SubProcess create_model() end ==================================
2023-07-06 17:11:11,737:INFO:Creating metrics dataframe
2023-07-06 17:11:11,746:INFO:Initializing Passive Aggressive Regressor
2023-07-06 17:11:11,746:INFO:Total runtime is 0.07209117015202841 minutes
2023-07-06 17:11:11,748:INFO:SubProcess create_model() called ==================================
2023-07-06 17:11:11,749:INFO:Initializing create_model()
2023-07-06 17:11:11,749:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b149bf70>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea94ee0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:11:11,749:INFO:Checking exceptions
2023-07-06 17:11:11,749:INFO:Importing libraries
2023-07-06 17:11:11,749:INFO:Copying training dataset
2023-07-06 17:11:11,752:INFO:Defining folds
2023-07-06 17:11:11,752:INFO:Declaring metric variables
2023-07-06 17:11:11,755:INFO:Importing untrained model
2023-07-06 17:11:11,757:INFO:Passive Aggressive Regressor Imported successfully
2023-07-06 17:11:11,762:INFO:Starting cross validation
2023-07-06 17:11:11,763:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:11:11,974:INFO:Calculating mean and std
2023-07-06 17:11:11,976:INFO:Creating metrics dataframe
2023-07-06 17:11:12,038:INFO:Uploading results into container
2023-07-06 17:11:12,039:INFO:Uploading model into container now
2023-07-06 17:11:12,040:INFO:_master_model_container: 9
2023-07-06 17:11:12,040:INFO:_display_container: 2
2023-07-06 17:11:12,040:INFO:PassiveAggressiveRegressor(random_state=958)
2023-07-06 17:11:12,040:INFO:create_model() successfully completed......................................
2023-07-06 17:11:12,241:INFO:SubProcess create_model() end ==================================
2023-07-06 17:11:12,242:INFO:Creating metrics dataframe
2023-07-06 17:11:12,251:INFO:Initializing Huber Regressor
2023-07-06 17:11:12,251:INFO:Total runtime is 0.0805149555206299 minutes
2023-07-06 17:11:12,254:INFO:SubProcess create_model() called ==================================
2023-07-06 17:11:12,254:INFO:Initializing create_model()
2023-07-06 17:11:12,254:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b149bf70>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea94ee0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:11:12,254:INFO:Checking exceptions
2023-07-06 17:11:12,255:INFO:Importing libraries
2023-07-06 17:11:12,255:INFO:Copying training dataset
2023-07-06 17:11:12,258:INFO:Defining folds
2023-07-06 17:11:12,258:INFO:Declaring metric variables
2023-07-06 17:11:12,260:INFO:Importing untrained model
2023-07-06 17:11:12,263:INFO:Huber Regressor Imported successfully
2023-07-06 17:11:12,267:INFO:Starting cross validation
2023-07-06 17:11:12,268:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:11:12,352:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:11:12,359:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:11:12,365:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:11:12,374:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:11:12,405:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:11:12,412:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:11:12,417:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:11:12,431:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:11:12,447:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:11:12,450:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:11:12,477:INFO:Calculating mean and std
2023-07-06 17:11:12,478:INFO:Creating metrics dataframe
2023-07-06 17:11:12,524:INFO:Uploading results into container
2023-07-06 17:11:12,524:INFO:Uploading model into container now
2023-07-06 17:11:12,525:INFO:_master_model_container: 10
2023-07-06 17:11:12,525:INFO:_display_container: 2
2023-07-06 17:11:12,525:INFO:HuberRegressor()
2023-07-06 17:11:12,526:INFO:create_model() successfully completed......................................
2023-07-06 17:11:12,721:INFO:SubProcess create_model() end ==================================
2023-07-06 17:11:12,722:INFO:Creating metrics dataframe
2023-07-06 17:11:12,731:INFO:Initializing K Neighbors Regressor
2023-07-06 17:11:12,732:INFO:Total runtime is 0.08851864735285443 minutes
2023-07-06 17:11:12,734:INFO:SubProcess create_model() called ==================================
2023-07-06 17:11:12,735:INFO:Initializing create_model()
2023-07-06 17:11:12,735:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b149bf70>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea94ee0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:11:12,735:INFO:Checking exceptions
2023-07-06 17:11:12,735:INFO:Importing libraries
2023-07-06 17:11:12,735:INFO:Copying training dataset
2023-07-06 17:11:12,738:INFO:Defining folds
2023-07-06 17:11:12,738:INFO:Declaring metric variables
2023-07-06 17:11:12,741:INFO:Importing untrained model
2023-07-06 17:11:12,743:INFO:K Neighbors Regressor Imported successfully
2023-07-06 17:11:12,748:INFO:Starting cross validation
2023-07-06 17:11:12,749:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:11:13,026:INFO:Calculating mean and std
2023-07-06 17:11:13,028:INFO:Creating metrics dataframe
2023-07-06 17:11:13,116:INFO:Uploading results into container
2023-07-06 17:11:13,117:INFO:Uploading model into container now
2023-07-06 17:11:13,118:INFO:_master_model_container: 11
2023-07-06 17:11:13,118:INFO:_display_container: 2
2023-07-06 17:11:13,118:INFO:KNeighborsRegressor(n_jobs=-1)
2023-07-06 17:11:13,118:INFO:create_model() successfully completed......................................
2023-07-06 17:11:13,304:INFO:SubProcess create_model() end ==================================
2023-07-06 17:11:13,304:INFO:Creating metrics dataframe
2023-07-06 17:11:13,315:INFO:Initializing Decision Tree Regressor
2023-07-06 17:11:13,315:INFO:Total runtime is 0.09823958873748781 minutes
2023-07-06 17:11:13,318:INFO:SubProcess create_model() called ==================================
2023-07-06 17:11:13,318:INFO:Initializing create_model()
2023-07-06 17:11:13,318:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b149bf70>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea94ee0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:11:13,319:INFO:Checking exceptions
2023-07-06 17:11:13,319:INFO:Importing libraries
2023-07-06 17:11:13,319:INFO:Copying training dataset
2023-07-06 17:11:13,322:INFO:Defining folds
2023-07-06 17:11:13,323:INFO:Declaring metric variables
2023-07-06 17:11:13,325:INFO:Importing untrained model
2023-07-06 17:11:13,329:INFO:Decision Tree Regressor Imported successfully
2023-07-06 17:11:13,334:INFO:Starting cross validation
2023-07-06 17:11:13,335:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:11:13,599:INFO:Calculating mean and std
2023-07-06 17:11:13,601:INFO:Creating metrics dataframe
2023-07-06 17:11:13,647:INFO:Uploading results into container
2023-07-06 17:11:13,648:INFO:Uploading model into container now
2023-07-06 17:11:13,649:INFO:_master_model_container: 12
2023-07-06 17:11:13,649:INFO:_display_container: 2
2023-07-06 17:11:13,649:INFO:DecisionTreeRegressor(random_state=958)
2023-07-06 17:11:13,649:INFO:create_model() successfully completed......................................
2023-07-06 17:11:13,860:INFO:SubProcess create_model() end ==================================
2023-07-06 17:11:13,860:INFO:Creating metrics dataframe
2023-07-06 17:11:13,870:INFO:Initializing Random Forest Regressor
2023-07-06 17:11:13,870:INFO:Total runtime is 0.10749448537826539 minutes
2023-07-06 17:11:13,873:INFO:SubProcess create_model() called ==================================
2023-07-06 17:11:13,873:INFO:Initializing create_model()
2023-07-06 17:11:13,873:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b149bf70>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea94ee0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:11:13,873:INFO:Checking exceptions
2023-07-06 17:11:13,873:INFO:Importing libraries
2023-07-06 17:11:13,873:INFO:Copying training dataset
2023-07-06 17:11:13,876:INFO:Defining folds
2023-07-06 17:11:13,877:INFO:Declaring metric variables
2023-07-06 17:11:13,879:INFO:Importing untrained model
2023-07-06 17:11:13,882:INFO:Random Forest Regressor Imported successfully
2023-07-06 17:11:13,886:INFO:Starting cross validation
2023-07-06 17:11:13,887:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:11:14,502:INFO:Calculating mean and std
2023-07-06 17:11:14,504:INFO:Creating metrics dataframe
2023-07-06 17:11:14,551:INFO:Uploading results into container
2023-07-06 17:11:14,552:INFO:Uploading model into container now
2023-07-06 17:11:14,553:INFO:_master_model_container: 13
2023-07-06 17:11:14,553:INFO:_display_container: 2
2023-07-06 17:11:14,553:INFO:RandomForestRegressor(n_jobs=-1, random_state=958)
2023-07-06 17:11:14,553:INFO:create_model() successfully completed......................................
2023-07-06 17:11:14,988:INFO:SubProcess create_model() end ==================================
2023-07-06 17:11:14,989:INFO:Creating metrics dataframe
2023-07-06 17:11:15,001:INFO:Initializing Extra Trees Regressor
2023-07-06 17:11:15,002:INFO:Total runtime is 0.1263520876566569 minutes
2023-07-06 17:11:15,004:INFO:SubProcess create_model() called ==================================
2023-07-06 17:11:15,005:INFO:Initializing create_model()
2023-07-06 17:11:15,005:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b149bf70>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea94ee0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:11:15,005:INFO:Checking exceptions
2023-07-06 17:11:15,005:INFO:Importing libraries
2023-07-06 17:11:15,005:INFO:Copying training dataset
2023-07-06 17:11:15,008:INFO:Defining folds
2023-07-06 17:11:15,008:INFO:Declaring metric variables
2023-07-06 17:11:15,011:INFO:Importing untrained model
2023-07-06 17:11:15,014:INFO:Extra Trees Regressor Imported successfully
2023-07-06 17:11:15,018:INFO:Starting cross validation
2023-07-06 17:11:15,019:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:11:15,596:INFO:Calculating mean and std
2023-07-06 17:11:15,598:INFO:Creating metrics dataframe
2023-07-06 17:11:15,657:INFO:Uploading results into container
2023-07-06 17:11:15,657:INFO:Uploading model into container now
2023-07-06 17:11:15,658:INFO:_master_model_container: 14
2023-07-06 17:11:15,658:INFO:_display_container: 2
2023-07-06 17:11:15,659:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=958)
2023-07-06 17:11:15,659:INFO:create_model() successfully completed......................................
2023-07-06 17:11:15,833:INFO:SubProcess create_model() end ==================================
2023-07-06 17:11:15,834:INFO:Creating metrics dataframe
2023-07-06 17:11:15,844:INFO:Initializing AdaBoost Regressor
2023-07-06 17:11:15,844:INFO:Total runtime is 0.14038997093836467 minutes
2023-07-06 17:11:15,846:INFO:SubProcess create_model() called ==================================
2023-07-06 17:11:15,847:INFO:Initializing create_model()
2023-07-06 17:11:15,847:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b149bf70>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea94ee0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:11:15,847:INFO:Checking exceptions
2023-07-06 17:11:15,847:INFO:Importing libraries
2023-07-06 17:11:15,847:INFO:Copying training dataset
2023-07-06 17:11:15,850:INFO:Defining folds
2023-07-06 17:11:15,850:INFO:Declaring metric variables
2023-07-06 17:11:15,853:INFO:Importing untrained model
2023-07-06 17:11:15,855:INFO:AdaBoost Regressor Imported successfully
2023-07-06 17:11:15,860:INFO:Starting cross validation
2023-07-06 17:11:15,861:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:11:16,352:INFO:Calculating mean and std
2023-07-06 17:11:16,354:INFO:Creating metrics dataframe
2023-07-06 17:11:16,438:INFO:Uploading results into container
2023-07-06 17:11:16,439:INFO:Uploading model into container now
2023-07-06 17:11:16,439:INFO:_master_model_container: 15
2023-07-06 17:11:16,440:INFO:_display_container: 2
2023-07-06 17:11:16,440:INFO:AdaBoostRegressor(random_state=958)
2023-07-06 17:11:16,440:INFO:create_model() successfully completed......................................
2023-07-06 17:11:16,624:INFO:SubProcess create_model() end ==================================
2023-07-06 17:11:16,625:INFO:Creating metrics dataframe
2023-07-06 17:11:16,635:INFO:Initializing Gradient Boosting Regressor
2023-07-06 17:11:16,635:INFO:Total runtime is 0.15357986688613892 minutes
2023-07-06 17:11:16,638:INFO:SubProcess create_model() called ==================================
2023-07-06 17:11:16,638:INFO:Initializing create_model()
2023-07-06 17:11:16,638:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b149bf70>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea94ee0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:11:16,638:INFO:Checking exceptions
2023-07-06 17:11:16,638:INFO:Importing libraries
2023-07-06 17:11:16,638:INFO:Copying training dataset
2023-07-06 17:11:16,641:INFO:Defining folds
2023-07-06 17:11:16,641:INFO:Declaring metric variables
2023-07-06 17:11:16,644:INFO:Importing untrained model
2023-07-06 17:11:16,646:INFO:Gradient Boosting Regressor Imported successfully
2023-07-06 17:11:16,650:INFO:Starting cross validation
2023-07-06 17:11:16,651:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:11:17,502:INFO:Calculating mean and std
2023-07-06 17:11:17,504:INFO:Creating metrics dataframe
2023-07-06 17:11:17,567:INFO:Uploading results into container
2023-07-06 17:11:17,568:INFO:Uploading model into container now
2023-07-06 17:11:17,569:INFO:_master_model_container: 16
2023-07-06 17:11:17,569:INFO:_display_container: 2
2023-07-06 17:11:17,569:INFO:GradientBoostingRegressor(random_state=958)
2023-07-06 17:11:17,569:INFO:create_model() successfully completed......................................
2023-07-06 17:11:17,763:INFO:SubProcess create_model() end ==================================
2023-07-06 17:11:17,763:INFO:Creating metrics dataframe
2023-07-06 17:11:17,774:INFO:Initializing Light Gradient Boosting Machine
2023-07-06 17:11:17,775:INFO:Total runtime is 0.1725696126619975 minutes
2023-07-06 17:11:17,777:INFO:SubProcess create_model() called ==================================
2023-07-06 17:11:17,778:INFO:Initializing create_model()
2023-07-06 17:11:17,778:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b149bf70>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea94ee0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:11:17,778:INFO:Checking exceptions
2023-07-06 17:11:17,778:INFO:Importing libraries
2023-07-06 17:11:17,778:INFO:Copying training dataset
2023-07-06 17:11:17,781:INFO:Defining folds
2023-07-06 17:11:17,781:INFO:Declaring metric variables
2023-07-06 17:11:17,783:INFO:Importing untrained model
2023-07-06 17:11:17,786:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-06 17:11:17,790:INFO:Starting cross validation
2023-07-06 17:11:17,791:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:11:18,363:INFO:Calculating mean and std
2023-07-06 17:11:18,366:INFO:Creating metrics dataframe
2023-07-06 17:11:18,412:INFO:Uploading results into container
2023-07-06 17:11:18,413:INFO:Uploading model into container now
2023-07-06 17:11:18,414:INFO:_master_model_container: 17
2023-07-06 17:11:18,414:INFO:_display_container: 2
2023-07-06 17:11:18,414:INFO:LGBMRegressor(random_state=958)
2023-07-06 17:11:18,415:INFO:create_model() successfully completed......................................
2023-07-06 17:11:18,614:INFO:SubProcess create_model() end ==================================
2023-07-06 17:11:18,615:INFO:Creating metrics dataframe
2023-07-06 17:11:18,625:INFO:Initializing Dummy Regressor
2023-07-06 17:11:18,625:INFO:Total runtime is 0.1867460568745931 minutes
2023-07-06 17:11:18,628:INFO:SubProcess create_model() called ==================================
2023-07-06 17:11:18,628:INFO:Initializing create_model()
2023-07-06 17:11:18,628:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b149bf70>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aea94ee0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:11:18,628:INFO:Checking exceptions
2023-07-06 17:11:18,628:INFO:Importing libraries
2023-07-06 17:11:18,628:INFO:Copying training dataset
2023-07-06 17:11:18,631:INFO:Defining folds
2023-07-06 17:11:18,631:INFO:Declaring metric variables
2023-07-06 17:11:18,634:INFO:Importing untrained model
2023-07-06 17:11:18,636:INFO:Dummy Regressor Imported successfully
2023-07-06 17:11:18,640:INFO:Starting cross validation
2023-07-06 17:11:18,641:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:11:18,879:INFO:Calculating mean and std
2023-07-06 17:11:18,881:INFO:Creating metrics dataframe
2023-07-06 17:11:18,933:INFO:Uploading results into container
2023-07-06 17:11:18,935:INFO:Uploading model into container now
2023-07-06 17:11:18,935:INFO:_master_model_container: 18
2023-07-06 17:11:18,935:INFO:_display_container: 2
2023-07-06 17:11:18,936:INFO:DummyRegressor()
2023-07-06 17:11:18,936:INFO:create_model() successfully completed......................................
2023-07-06 17:11:19,143:INFO:SubProcess create_model() end ==================================
2023-07-06 17:11:19,143:INFO:Creating metrics dataframe
2023-07-06 17:11:19,161:INFO:Initializing create_model()
2023-07-06 17:11:19,161:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b149bf70>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=958), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:11:19,161:INFO:Checking exceptions
2023-07-06 17:11:19,162:INFO:Importing libraries
2023-07-06 17:11:19,163:INFO:Copying training dataset
2023-07-06 17:11:19,165:INFO:Defining folds
2023-07-06 17:11:19,165:INFO:Declaring metric variables
2023-07-06 17:11:19,165:INFO:Importing untrained model
2023-07-06 17:11:19,165:INFO:Declaring custom model
2023-07-06 17:11:19,166:INFO:Extra Trees Regressor Imported successfully
2023-07-06 17:11:19,166:INFO:Cross validation set to False
2023-07-06 17:11:19,167:INFO:Fitting Model
2023-07-06 17:11:19,495:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=958)
2023-07-06 17:11:19,496:INFO:create_model() successfully completed......................................
2023-07-06 17:11:19,750:INFO:_master_model_container: 18
2023-07-06 17:11:19,750:INFO:_display_container: 2
2023-07-06 17:11:19,751:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=958)
2023-07-06 17:11:19,751:INFO:compare_models() successfully completed......................................
2023-07-06 17:14:01,477:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,478:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,479:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,479:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,480:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,481:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,482:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,482:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,483:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,484:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,484:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,485:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,486:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,487:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,487:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,488:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,489:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,490:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,490:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,491:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,492:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,492:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,493:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,494:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,495:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,495:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,496:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,497:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,498:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,499:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,500:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,500:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,501:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,502:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,502:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,503:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,504:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,505:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,505:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,506:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,507:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,508:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,508:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,509:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,510:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,510:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,511:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,512:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,513:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,513:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,514:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,515:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,516:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,516:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,517:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,518:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,519:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,519:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,520:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,521:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,522:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,522:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,523:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,524:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,524:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,525:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,526:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,527:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,527:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,528:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,529:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,530:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,530:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,531:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,532:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,533:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,533:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,534:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,535:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,536:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,536:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,537:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,538:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,538:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,539:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,540:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,541:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,541:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,542:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,543:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,544:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,544:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,545:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,546:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,547:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,547:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,548:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,549:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,550:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,550:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,551:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,552:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,553:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,553:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,554:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,555:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,555:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,556:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,557:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,558:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,558:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,559:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,560:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,561:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,561:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,562:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,563:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,564:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,565:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,565:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,566:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,567:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,568:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,568:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,569:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,570:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,571:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,571:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,572:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,573:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,574:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,574:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,575:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,576:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,577:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,577:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,578:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,579:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,580:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,580:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:01,581:WARNING:/tmp/ipykernel_743737/3023117811.py:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df_min[col_name + '_back_' + str(i) + 'min'] = df_min[col_name].shift(i)

2023-07-06 17:14:51,344:INFO:PyCaret RegressionExperiment
2023-07-06 17:14:51,344:INFO:Logging name: reg-default-name
2023-07-06 17:14:51,344:INFO:ML Usecase: MLUsecase.REGRESSION
2023-07-06 17:14:51,344:INFO:version 3.0.4
2023-07-06 17:14:51,344:INFO:Initializing setup()
2023-07-06 17:14:51,344:INFO:self.USI: 52ea
2023-07-06 17:14:51,344:INFO:self._variable_keys: {'pipeline', 'fold_groups_param', 'log_plots_param', '_ml_usecase', 'memory', 'transform_target_param', 'logging_param', 'y', 'USI', 'data', 'target_param', 'html_param', 'fold_generator', 'X', 'n_jobs_param', 'X_test', 'y_test', 'exp_id', 'X_train', 'exp_name_log', 'gpu_n_jobs_param', 'seed', 'idx', 'gpu_param', 'y_train', '_available_plots', 'fold_shuffle_param'}
2023-07-06 17:14:51,344:INFO:Checking environment
2023-07-06 17:14:51,344:INFO:python_version: 3.9.16
2023-07-06 17:14:51,344:INFO:python_build: ('main', 'Feb  1 2023 21:39:03')
2023-07-06 17:14:51,344:INFO:machine: x86_64
2023-07-06 17:14:51,344:INFO:platform: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 17:14:51,344:INFO:Memory: svmem(total=540878073856, available=520126156800, percent=3.8, used=17206517760, free=15708626944, active=32098000896, inactive=476567560192, buffers=2691084288, cached=505271844864, shared=22040576, slab=14280822784)
2023-07-06 17:14:51,346:INFO:Physical Core: 64
2023-07-06 17:14:51,346:INFO:Logical Core: 64
2023-07-06 17:14:51,346:INFO:Checking libraries
2023-07-06 17:14:51,346:INFO:System:
2023-07-06 17:14:51,346:INFO:    python: 3.9.16 | packaged by conda-forge | (main, Feb  1 2023, 21:39:03)  [GCC 11.3.0]
2023-07-06 17:14:51,346:INFO:executable: /home/mirlab/anaconda3/envs/misc/bin/python
2023-07-06 17:14:51,346:INFO:   machine: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 17:14:51,346:INFO:PyCaret required dependencies:
2023-07-06 17:14:51,346:INFO:                 pip: 23.1.2
2023-07-06 17:14:51,346:INFO:          setuptools: 67.7.2
2023-07-06 17:14:51,346:INFO:             pycaret: 3.0.4
2023-07-06 17:14:51,346:INFO:             IPython: 8.14.0
2023-07-06 17:14:51,346:INFO:          ipywidgets: 8.0.7
2023-07-06 17:14:51,346:INFO:                tqdm: 4.64.1
2023-07-06 17:14:51,346:INFO:               numpy: 1.23.5
2023-07-06 17:14:51,346:INFO:              pandas: 1.5.3
2023-07-06 17:14:51,347:INFO:              jinja2: 3.1.2
2023-07-06 17:14:51,347:INFO:               scipy: 1.10.1
2023-07-06 17:14:51,347:INFO:              joblib: 1.2.0
2023-07-06 17:14:51,347:INFO:             sklearn: 1.2.2
2023-07-06 17:14:51,347:INFO:                pyod: 1.1.0
2023-07-06 17:14:51,347:INFO:            imblearn: 0.10.1
2023-07-06 17:14:51,347:INFO:   category_encoders: 2.6.1
2023-07-06 17:14:51,347:INFO:            lightgbm: 3.3.5
2023-07-06 17:14:51,347:INFO:               numba: 0.57.0
2023-07-06 17:14:51,347:INFO:            requests: 2.28.1
2023-07-06 17:14:51,347:INFO:          matplotlib: 3.7.1
2023-07-06 17:14:51,347:INFO:          scikitplot: 0.3.7
2023-07-06 17:14:51,347:INFO:         yellowbrick: 1.5
2023-07-06 17:14:51,347:INFO:              plotly: 5.15.0
2023-07-06 17:14:51,347:INFO:    plotly-resampler: Not installed
2023-07-06 17:14:51,347:INFO:             kaleido: 0.2.1
2023-07-06 17:14:51,347:INFO:           schemdraw: 0.15
2023-07-06 17:14:51,347:INFO:         statsmodels: 0.14.0
2023-07-06 17:14:51,347:INFO:              sktime: 0.20.0
2023-07-06 17:14:51,347:INFO:               tbats: 1.1.3
2023-07-06 17:14:51,347:INFO:            pmdarima: 2.0.3
2023-07-06 17:14:51,347:INFO:              psutil: 5.9.5
2023-07-06 17:14:51,347:INFO:          markupsafe: 2.1.2
2023-07-06 17:14:51,347:INFO:             pickle5: Not installed
2023-07-06 17:14:51,347:INFO:         cloudpickle: 2.2.1
2023-07-06 17:14:51,347:INFO:         deprecation: 2.1.0
2023-07-06 17:14:51,347:INFO:              xxhash: 3.2.0
2023-07-06 17:14:51,347:INFO:           wurlitzer: 3.0.3
2023-07-06 17:14:51,347:INFO:PyCaret optional dependencies:
2023-07-06 17:14:51,347:INFO:                shap: Not installed
2023-07-06 17:14:51,347:INFO:           interpret: Not installed
2023-07-06 17:14:51,347:INFO:                umap: Not installed
2023-07-06 17:14:51,347:INFO:    pandas_profiling: 3.6.6
2023-07-06 17:14:51,347:INFO:  explainerdashboard: Not installed
2023-07-06 17:14:51,347:INFO:             autoviz: Not installed
2023-07-06 17:14:51,347:INFO:           fairlearn: Not installed
2023-07-06 17:14:51,347:INFO:          deepchecks: Not installed
2023-07-06 17:14:51,347:INFO:             xgboost: Not installed
2023-07-06 17:14:51,347:INFO:            catboost: Not installed
2023-07-06 17:14:51,347:INFO:              kmodes: Not installed
2023-07-06 17:14:51,347:INFO:             mlxtend: Not installed
2023-07-06 17:14:51,347:INFO:       statsforecast: Not installed
2023-07-06 17:14:51,347:INFO:        tune_sklearn: Not installed
2023-07-06 17:14:51,347:INFO:                 ray: Not installed
2023-07-06 17:14:51,347:INFO:            hyperopt: Not installed
2023-07-06 17:14:51,347:INFO:              optuna: 3.1.1
2023-07-06 17:14:51,347:INFO:               skopt: Not installed
2023-07-06 17:14:51,347:INFO:              mlflow: Not installed
2023-07-06 17:14:51,347:INFO:              gradio: Not installed
2023-07-06 17:14:51,347:INFO:             fastapi: Not installed
2023-07-06 17:14:51,348:INFO:             uvicorn: Not installed
2023-07-06 17:14:51,348:INFO:              m2cgen: Not installed
2023-07-06 17:14:51,348:INFO:           evidently: Not installed
2023-07-06 17:14:51,348:INFO:               fugue: Not installed
2023-07-06 17:14:51,348:INFO:           streamlit: 1.24.0
2023-07-06 17:14:51,348:INFO:             prophet: Not installed
2023-07-06 17:14:51,348:INFO:None
2023-07-06 17:14:51,348:INFO:Set up data.
2023-07-06 17:14:51,472:INFO:Set up train/test split.
2023-07-06 17:14:51,567:INFO:Set up index.
2023-07-06 17:14:51,583:INFO:Set up folding strategy.
2023-07-06 17:14:51,583:INFO:Assigning column types.
2023-07-06 17:14:51,639:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-06 17:14:51,639:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 17:14:51,644:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:14:51,649:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:14:51,795:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:14:51,842:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:14:51,843:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:14:51,843:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:14:51,844:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 17:14:51,848:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:14:51,853:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:14:51,993:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:14:52,041:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:14:52,041:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:14:52,042:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:14:52,042:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-07-06 17:14:52,047:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:14:52,051:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:14:52,192:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:14:52,239:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:14:52,240:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:14:52,240:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:14:52,245:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:14:52,250:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:14:52,389:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:14:52,437:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:14:52,437:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:14:52,437:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:14:52,438:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-07-06 17:14:52,447:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:14:52,587:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:14:52,635:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:14:52,636:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:14:52,636:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:14:52,646:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:14:52,785:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:14:52,833:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:14:52,833:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:14:52,833:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:14:52,833:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-07-06 17:14:52,983:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:14:53,031:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:14:53,031:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:14:53,031:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:14:53,185:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:14:53,233:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:14:53,233:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:14:53,234:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:14:53,234:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-06 17:14:53,384:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:14:53,432:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:14:53,432:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:14:53,582:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:14:53,630:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:14:53,630:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:14:53,630:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-07-06 17:14:53,828:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:14:53,829:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:14:54,026:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:14:54,026:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:14:54,028:INFO:Preparing preprocessing pipeline...
2023-07-06 17:14:54,028:INFO:Set up simple imputation.
2023-07-06 17:14:54,036:INFO:Set up column name cleaning.
2023-07-06 17:14:54,906:INFO:Finished creating preprocessing pipeline.
2023-07-06 17:14:54,911:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['PTemp_C_Max', 'AirTC_Avg', 'RH',
                                             'WS_ms_Avg', 'WindDir', 'TPM1',
                                             'TPM2.5', 'TPM10', 'GeffRef',
                                             'TempRef', 'Daylight',
                                             'FT_Voltage1_back_1min',
                                             'FT_Voltage1_back_2min',
                                             'FT_Voltage1_back_3min',
                                             'FT_Voltage1_back_4min',
                                             'FT_Voltage1_back_5min',
                                             'FT_Voltage1_back...
                                             'FT_Voltage1_back_14min',
                                             'FT_Voltage1_back_15min',
                                             'FT_Voltage1_back_16min',
                                             'FT_Voltage1_back_17min',
                                             'FT_Voltage1_back_18min',
                                             'FT_Voltage1_back_19min', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-07-06 17:14:54,911:INFO:Creating final display dataframe.
2023-07-06 17:14:56,748:INFO:Setup _display_container:                     Description             Value
0                    Session id              5039
1                        Target       FT_Voltage1
2                   Target type        Regression
3           Original data shape      (143940, 72)
4        Transformed data shape      (143940, 72)
5   Transformed train set shape      (100758, 72)
6    Transformed test set shape       (43182, 72)
7              Numeric features                71
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              52ea
2023-07-06 17:14:56,952:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:14:56,952:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:14:57,151:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:14:57,151:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:14:57,152:INFO:setup() successfully completed in 5.82s...............
2023-07-06 17:14:57,152:INFO:Initializing compare_models()
2023-07-06 17:14:57,152:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d9c70>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d9c70>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-07-06 17:14:57,152:INFO:Checking exceptions
2023-07-06 17:14:57,195:INFO:Preparing display monitor
2023-07-06 17:14:57,214:INFO:Initializing Linear Regression
2023-07-06 17:14:57,214:INFO:Total runtime is 1.227855682373047e-06 minutes
2023-07-06 17:14:57,216:INFO:SubProcess create_model() called ==================================
2023-07-06 17:14:57,217:INFO:Initializing create_model()
2023-07-06 17:14:57,217:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d9c70>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25c09556d0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:14:57,217:INFO:Checking exceptions
2023-07-06 17:14:57,217:INFO:Importing libraries
2023-07-06 17:14:57,217:INFO:Copying training dataset
2023-07-06 17:14:57,333:INFO:Defining folds
2023-07-06 17:14:57,333:INFO:Declaring metric variables
2023-07-06 17:14:57,337:INFO:Importing untrained model
2023-07-06 17:14:57,339:INFO:Linear Regression Imported successfully
2023-07-06 17:14:57,344:INFO:Starting cross validation
2023-07-06 17:14:57,345:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:14:59,684:INFO:Calculating mean and std
2023-07-06 17:14:59,687:INFO:Creating metrics dataframe
2023-07-06 17:14:59,722:INFO:Uploading results into container
2023-07-06 17:14:59,723:INFO:Uploading model into container now
2023-07-06 17:14:59,724:INFO:_master_model_container: 1
2023-07-06 17:14:59,724:INFO:_display_container: 2
2023-07-06 17:14:59,724:INFO:LinearRegression(n_jobs=-1)
2023-07-06 17:14:59,724:INFO:create_model() successfully completed......................................
2023-07-06 17:14:59,944:INFO:SubProcess create_model() end ==================================
2023-07-06 17:14:59,945:INFO:Creating metrics dataframe
2023-07-06 17:14:59,952:INFO:Initializing Lasso Regression
2023-07-06 17:14:59,952:INFO:Total runtime is 0.04563775857289632 minutes
2023-07-06 17:14:59,955:INFO:SubProcess create_model() called ==================================
2023-07-06 17:14:59,955:INFO:Initializing create_model()
2023-07-06 17:14:59,955:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d9c70>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25c09556d0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:14:59,955:INFO:Checking exceptions
2023-07-06 17:14:59,956:INFO:Importing libraries
2023-07-06 17:14:59,956:INFO:Copying training dataset
2023-07-06 17:15:00,109:INFO:Defining folds
2023-07-06 17:15:00,109:INFO:Declaring metric variables
2023-07-06 17:15:00,112:INFO:Importing untrained model
2023-07-06 17:15:00,115:INFO:Lasso Regression Imported successfully
2023-07-06 17:15:00,120:INFO:Starting cross validation
2023-07-06 17:15:00,121:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:15:02,616:INFO:Calculating mean and std
2023-07-06 17:15:02,617:INFO:Creating metrics dataframe
2023-07-06 17:15:02,651:INFO:Uploading results into container
2023-07-06 17:15:02,652:INFO:Uploading model into container now
2023-07-06 17:15:02,652:INFO:_master_model_container: 2
2023-07-06 17:15:02,653:INFO:_display_container: 2
2023-07-06 17:15:02,653:INFO:Lasso(random_state=5039)
2023-07-06 17:15:02,653:INFO:create_model() successfully completed......................................
2023-07-06 17:15:02,851:INFO:SubProcess create_model() end ==================================
2023-07-06 17:15:02,851:INFO:Creating metrics dataframe
2023-07-06 17:15:02,859:INFO:Initializing Ridge Regression
2023-07-06 17:15:02,859:INFO:Total runtime is 0.09408722321192423 minutes
2023-07-06 17:15:02,862:INFO:SubProcess create_model() called ==================================
2023-07-06 17:15:02,862:INFO:Initializing create_model()
2023-07-06 17:15:02,862:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d9c70>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25c09556d0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:15:02,862:INFO:Checking exceptions
2023-07-06 17:15:02,862:INFO:Importing libraries
2023-07-06 17:15:02,862:INFO:Copying training dataset
2023-07-06 17:15:03,009:INFO:Defining folds
2023-07-06 17:15:03,010:INFO:Declaring metric variables
2023-07-06 17:15:03,013:INFO:Importing untrained model
2023-07-06 17:15:03,016:INFO:Ridge Regression Imported successfully
2023-07-06 17:15:03,020:INFO:Starting cross validation
2023-07-06 17:15:03,021:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:15:05,119:INFO:Calculating mean and std
2023-07-06 17:15:05,121:INFO:Creating metrics dataframe
2023-07-06 17:15:05,155:INFO:Uploading results into container
2023-07-06 17:15:05,155:INFO:Uploading model into container now
2023-07-06 17:15:05,156:INFO:_master_model_container: 3
2023-07-06 17:15:05,156:INFO:_display_container: 2
2023-07-06 17:15:05,156:INFO:Ridge(random_state=5039)
2023-07-06 17:15:05,156:INFO:create_model() successfully completed......................................
2023-07-06 17:15:05,342:INFO:SubProcess create_model() end ==================================
2023-07-06 17:15:05,342:INFO:Creating metrics dataframe
2023-07-06 17:15:05,350:INFO:Initializing Elastic Net
2023-07-06 17:15:05,350:INFO:Total runtime is 0.13560855388641357 minutes
2023-07-06 17:15:05,353:INFO:SubProcess create_model() called ==================================
2023-07-06 17:15:05,353:INFO:Initializing create_model()
2023-07-06 17:15:05,353:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d9c70>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25c09556d0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:15:05,354:INFO:Checking exceptions
2023-07-06 17:15:05,354:INFO:Importing libraries
2023-07-06 17:15:05,354:INFO:Copying training dataset
2023-07-06 17:15:05,501:INFO:Defining folds
2023-07-06 17:15:05,502:INFO:Declaring metric variables
2023-07-06 17:15:05,505:INFO:Importing untrained model
2023-07-06 17:15:05,508:INFO:Elastic Net Imported successfully
2023-07-06 17:15:05,513:INFO:Starting cross validation
2023-07-06 17:15:05,514:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:15:10,303:INFO:Calculating mean and std
2023-07-06 17:15:10,306:INFO:Creating metrics dataframe
2023-07-06 17:15:10,344:INFO:Uploading results into container
2023-07-06 17:15:10,345:INFO:Uploading model into container now
2023-07-06 17:15:10,346:INFO:_master_model_container: 4
2023-07-06 17:15:10,346:INFO:_display_container: 2
2023-07-06 17:15:10,347:INFO:ElasticNet(random_state=5039)
2023-07-06 17:15:10,347:INFO:create_model() successfully completed......................................
2023-07-06 17:15:10,565:INFO:SubProcess create_model() end ==================================
2023-07-06 17:15:10,565:INFO:Creating metrics dataframe
2023-07-06 17:15:10,574:INFO:Initializing Least Angle Regression
2023-07-06 17:15:10,574:INFO:Total runtime is 0.22266736030578613 minutes
2023-07-06 17:15:10,577:INFO:SubProcess create_model() called ==================================
2023-07-06 17:15:10,577:INFO:Initializing create_model()
2023-07-06 17:15:10,577:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d9c70>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25c09556d0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:15:10,577:INFO:Checking exceptions
2023-07-06 17:15:10,577:INFO:Importing libraries
2023-07-06 17:15:10,577:INFO:Copying training dataset
2023-07-06 17:15:10,728:INFO:Defining folds
2023-07-06 17:15:10,728:INFO:Declaring metric variables
2023-07-06 17:15:10,732:INFO:Importing untrained model
2023-07-06 17:15:10,735:INFO:Least Angle Regression Imported successfully
2023-07-06 17:15:10,739:INFO:Starting cross validation
2023-07-06 17:15:10,741:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:15:12,535:INFO:Calculating mean and std
2023-07-06 17:15:12,537:INFO:Creating metrics dataframe
2023-07-06 17:15:12,571:INFO:Uploading results into container
2023-07-06 17:15:12,572:INFO:Uploading model into container now
2023-07-06 17:15:12,573:INFO:_master_model_container: 5
2023-07-06 17:15:12,573:INFO:_display_container: 2
2023-07-06 17:15:12,573:INFO:Lars(random_state=5039)
2023-07-06 17:15:12,573:INFO:create_model() successfully completed......................................
2023-07-06 17:15:12,758:INFO:SubProcess create_model() end ==================================
2023-07-06 17:15:12,758:INFO:Creating metrics dataframe
2023-07-06 17:15:12,767:INFO:Initializing Lasso Least Angle Regression
2023-07-06 17:15:12,767:INFO:Total runtime is 0.25922245979309083 minutes
2023-07-06 17:15:12,770:INFO:SubProcess create_model() called ==================================
2023-07-06 17:15:12,770:INFO:Initializing create_model()
2023-07-06 17:15:12,770:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d9c70>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25c09556d0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:15:12,770:INFO:Checking exceptions
2023-07-06 17:15:12,771:INFO:Importing libraries
2023-07-06 17:15:12,771:INFO:Copying training dataset
2023-07-06 17:15:12,922:INFO:Defining folds
2023-07-06 17:15:12,923:INFO:Declaring metric variables
2023-07-06 17:15:12,926:INFO:Importing untrained model
2023-07-06 17:15:12,929:INFO:Lasso Least Angle Regression Imported successfully
2023-07-06 17:15:12,934:INFO:Starting cross validation
2023-07-06 17:15:12,935:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:15:15,047:INFO:Calculating mean and std
2023-07-06 17:15:15,049:INFO:Creating metrics dataframe
2023-07-06 17:15:15,084:INFO:Uploading results into container
2023-07-06 17:15:15,085:INFO:Uploading model into container now
2023-07-06 17:15:15,086:INFO:_master_model_container: 6
2023-07-06 17:15:15,086:INFO:_display_container: 2
2023-07-06 17:15:15,086:INFO:LassoLars(random_state=5039)
2023-07-06 17:15:15,087:INFO:create_model() successfully completed......................................
2023-07-06 17:15:15,272:INFO:SubProcess create_model() end ==================================
2023-07-06 17:15:15,272:INFO:Creating metrics dataframe
2023-07-06 17:15:15,281:INFO:Initializing Orthogonal Matching Pursuit
2023-07-06 17:15:15,282:INFO:Total runtime is 0.30112664302190145 minutes
2023-07-06 17:15:15,284:INFO:SubProcess create_model() called ==================================
2023-07-06 17:15:15,285:INFO:Initializing create_model()
2023-07-06 17:15:15,285:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d9c70>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25c09556d0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:15:15,285:INFO:Checking exceptions
2023-07-06 17:15:15,285:INFO:Importing libraries
2023-07-06 17:15:15,285:INFO:Copying training dataset
2023-07-06 17:15:15,441:INFO:Defining folds
2023-07-06 17:15:15,442:INFO:Declaring metric variables
2023-07-06 17:15:15,445:INFO:Importing untrained model
2023-07-06 17:15:15,448:INFO:Orthogonal Matching Pursuit Imported successfully
2023-07-06 17:15:15,453:INFO:Starting cross validation
2023-07-06 17:15:15,454:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:15:17,534:INFO:Calculating mean and std
2023-07-06 17:15:17,540:INFO:Creating metrics dataframe
2023-07-06 17:15:17,584:INFO:Uploading results into container
2023-07-06 17:15:17,586:INFO:Uploading model into container now
2023-07-06 17:15:17,586:INFO:_master_model_container: 7
2023-07-06 17:15:17,586:INFO:_display_container: 2
2023-07-06 17:15:17,587:INFO:OrthogonalMatchingPursuit()
2023-07-06 17:15:17,587:INFO:create_model() successfully completed......................................
2023-07-06 17:15:17,811:INFO:SubProcess create_model() end ==================================
2023-07-06 17:15:17,811:INFO:Creating metrics dataframe
2023-07-06 17:15:17,821:INFO:Initializing Bayesian Ridge
2023-07-06 17:15:17,821:INFO:Total runtime is 0.3434511423110962 minutes
2023-07-06 17:15:17,824:INFO:SubProcess create_model() called ==================================
2023-07-06 17:15:17,824:INFO:Initializing create_model()
2023-07-06 17:15:17,824:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d9c70>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25c09556d0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:15:17,824:INFO:Checking exceptions
2023-07-06 17:15:17,824:INFO:Importing libraries
2023-07-06 17:15:17,824:INFO:Copying training dataset
2023-07-06 17:15:17,972:INFO:Defining folds
2023-07-06 17:15:17,973:INFO:Declaring metric variables
2023-07-06 17:15:17,976:INFO:Importing untrained model
2023-07-06 17:15:17,979:INFO:Bayesian Ridge Imported successfully
2023-07-06 17:15:17,983:INFO:Starting cross validation
2023-07-06 17:15:17,985:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:15:20,850:INFO:Calculating mean and std
2023-07-06 17:15:20,852:INFO:Creating metrics dataframe
2023-07-06 17:15:20,888:INFO:Uploading results into container
2023-07-06 17:15:20,889:INFO:Uploading model into container now
2023-07-06 17:15:20,889:INFO:_master_model_container: 8
2023-07-06 17:15:20,889:INFO:_display_container: 2
2023-07-06 17:15:20,890:INFO:BayesianRidge()
2023-07-06 17:15:20,890:INFO:create_model() successfully completed......................................
2023-07-06 17:15:21,079:INFO:SubProcess create_model() end ==================================
2023-07-06 17:15:21,079:INFO:Creating metrics dataframe
2023-07-06 17:15:21,088:INFO:Initializing Passive Aggressive Regressor
2023-07-06 17:15:21,088:INFO:Total runtime is 0.39790846904118854 minutes
2023-07-06 17:15:21,091:INFO:SubProcess create_model() called ==================================
2023-07-06 17:15:21,091:INFO:Initializing create_model()
2023-07-06 17:15:21,091:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d9c70>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25c09556d0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:15:21,091:INFO:Checking exceptions
2023-07-06 17:15:21,091:INFO:Importing libraries
2023-07-06 17:15:21,091:INFO:Copying training dataset
2023-07-06 17:15:21,243:INFO:Defining folds
2023-07-06 17:15:21,243:INFO:Declaring metric variables
2023-07-06 17:15:21,246:INFO:Importing untrained model
2023-07-06 17:15:21,249:INFO:Passive Aggressive Regressor Imported successfully
2023-07-06 17:15:21,254:INFO:Starting cross validation
2023-07-06 17:15:21,255:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:15:23,968:INFO:Calculating mean and std
2023-07-06 17:15:23,970:INFO:Creating metrics dataframe
2023-07-06 17:15:24,103:INFO:Uploading results into container
2023-07-06 17:15:24,104:INFO:Uploading model into container now
2023-07-06 17:15:24,105:INFO:_master_model_container: 9
2023-07-06 17:15:24,105:INFO:_display_container: 2
2023-07-06 17:15:24,106:INFO:PassiveAggressiveRegressor(random_state=5039)
2023-07-06 17:15:24,106:INFO:create_model() successfully completed......................................
2023-07-06 17:15:24,294:INFO:SubProcess create_model() end ==================================
2023-07-06 17:15:24,294:INFO:Creating metrics dataframe
2023-07-06 17:15:24,304:INFO:Initializing Huber Regressor
2023-07-06 17:15:24,304:INFO:Total runtime is 0.45150038003921505 minutes
2023-07-06 17:15:24,306:INFO:SubProcess create_model() called ==================================
2023-07-06 17:15:24,307:INFO:Initializing create_model()
2023-07-06 17:15:24,307:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d9c70>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25c09556d0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:15:24,307:INFO:Checking exceptions
2023-07-06 17:15:24,307:INFO:Importing libraries
2023-07-06 17:15:24,307:INFO:Copying training dataset
2023-07-06 17:15:24,446:INFO:Defining folds
2023-07-06 17:15:24,447:INFO:Declaring metric variables
2023-07-06 17:15:24,450:INFO:Importing untrained model
2023-07-06 17:15:24,453:INFO:Huber Regressor Imported successfully
2023-07-06 17:15:24,457:INFO:Starting cross validation
2023-07-06 17:15:24,458:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:15:31,512:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:15:31,870:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:15:31,982:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:15:34,168:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:15:35,070:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:15:35,248:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:15:35,392:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:15:35,503:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:15:35,913:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:15:36,586:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:15:36,860:INFO:Calculating mean and std
2023-07-06 17:15:36,863:INFO:Creating metrics dataframe
2023-07-06 17:15:36,905:INFO:Uploading results into container
2023-07-06 17:15:36,906:INFO:Uploading model into container now
2023-07-06 17:15:36,907:INFO:_master_model_container: 10
2023-07-06 17:15:36,907:INFO:_display_container: 2
2023-07-06 17:15:36,908:INFO:HuberRegressor()
2023-07-06 17:15:36,908:INFO:create_model() successfully completed......................................
2023-07-06 17:15:37,146:INFO:SubProcess create_model() end ==================================
2023-07-06 17:15:37,146:INFO:Creating metrics dataframe
2023-07-06 17:15:37,156:INFO:Initializing K Neighbors Regressor
2023-07-06 17:15:37,156:INFO:Total runtime is 0.6657062371571858 minutes
2023-07-06 17:15:37,159:INFO:SubProcess create_model() called ==================================
2023-07-06 17:15:37,159:INFO:Initializing create_model()
2023-07-06 17:15:37,159:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d9c70>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25c09556d0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:15:37,159:INFO:Checking exceptions
2023-07-06 17:15:37,159:INFO:Importing libraries
2023-07-06 17:15:37,159:INFO:Copying training dataset
2023-07-06 17:15:37,312:INFO:Defining folds
2023-07-06 17:15:37,313:INFO:Declaring metric variables
2023-07-06 17:15:37,316:INFO:Importing untrained model
2023-07-06 17:15:37,319:INFO:K Neighbors Regressor Imported successfully
2023-07-06 17:15:37,323:INFO:Starting cross validation
2023-07-06 17:15:37,324:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:15:45,197:INFO:Calculating mean and std
2023-07-06 17:15:45,202:INFO:Creating metrics dataframe
2023-07-06 17:15:45,248:INFO:Uploading results into container
2023-07-06 17:15:45,249:INFO:Uploading model into container now
2023-07-06 17:15:45,250:INFO:_master_model_container: 11
2023-07-06 17:15:45,250:INFO:_display_container: 2
2023-07-06 17:15:45,250:INFO:KNeighborsRegressor(n_jobs=-1)
2023-07-06 17:15:45,250:INFO:create_model() successfully completed......................................
2023-07-06 17:15:45,474:INFO:SubProcess create_model() end ==================================
2023-07-06 17:15:45,474:INFO:Creating metrics dataframe
2023-07-06 17:15:45,485:INFO:Initializing Decision Tree Regressor
2023-07-06 17:15:45,485:INFO:Total runtime is 0.8045204718907674 minutes
2023-07-06 17:15:45,488:INFO:SubProcess create_model() called ==================================
2023-07-06 17:15:45,488:INFO:Initializing create_model()
2023-07-06 17:15:45,488:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d9c70>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25c09556d0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:15:45,488:INFO:Checking exceptions
2023-07-06 17:15:45,488:INFO:Importing libraries
2023-07-06 17:15:45,488:INFO:Copying training dataset
2023-07-06 17:15:45,634:INFO:Defining folds
2023-07-06 17:15:45,635:INFO:Declaring metric variables
2023-07-06 17:15:45,638:INFO:Importing untrained model
2023-07-06 17:15:45,640:INFO:Decision Tree Regressor Imported successfully
2023-07-06 17:15:45,645:INFO:Starting cross validation
2023-07-06 17:15:45,646:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:15:51,866:INFO:Calculating mean and std
2023-07-06 17:15:51,869:INFO:Creating metrics dataframe
2023-07-06 17:15:51,911:INFO:Uploading results into container
2023-07-06 17:15:51,912:INFO:Uploading model into container now
2023-07-06 17:15:51,913:INFO:_master_model_container: 12
2023-07-06 17:15:51,913:INFO:_display_container: 2
2023-07-06 17:15:51,913:INFO:DecisionTreeRegressor(random_state=5039)
2023-07-06 17:15:51,913:INFO:create_model() successfully completed......................................
2023-07-06 17:15:52,126:INFO:SubProcess create_model() end ==================================
2023-07-06 17:15:52,127:INFO:Creating metrics dataframe
2023-07-06 17:15:52,137:INFO:Initializing Random Forest Regressor
2023-07-06 17:15:52,137:INFO:Total runtime is 0.9153828938802083 minutes
2023-07-06 17:15:52,139:INFO:SubProcess create_model() called ==================================
2023-07-06 17:15:52,140:INFO:Initializing create_model()
2023-07-06 17:15:52,140:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d9c70>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25c09556d0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:15:52,140:INFO:Checking exceptions
2023-07-06 17:15:52,140:INFO:Importing libraries
2023-07-06 17:15:52,140:INFO:Copying training dataset
2023-07-06 17:15:52,283:INFO:Defining folds
2023-07-06 17:15:52,283:INFO:Declaring metric variables
2023-07-06 17:15:52,287:INFO:Importing untrained model
2023-07-06 17:15:52,289:INFO:Random Forest Regressor Imported successfully
2023-07-06 17:15:52,294:INFO:Starting cross validation
2023-07-06 17:15:52,295:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:16:50,332:INFO:Calculating mean and std
2023-07-06 17:16:50,335:INFO:Creating metrics dataframe
2023-07-06 17:16:50,375:INFO:Uploading results into container
2023-07-06 17:16:50,376:INFO:Uploading model into container now
2023-07-06 17:16:50,377:INFO:_master_model_container: 13
2023-07-06 17:16:50,377:INFO:_display_container: 2
2023-07-06 17:16:50,377:INFO:RandomForestRegressor(n_jobs=-1, random_state=5039)
2023-07-06 17:16:50,377:INFO:create_model() successfully completed......................................
2023-07-06 17:16:50,597:INFO:SubProcess create_model() end ==================================
2023-07-06 17:16:50,598:INFO:Creating metrics dataframe
2023-07-06 17:16:50,608:INFO:Initializing Extra Trees Regressor
2023-07-06 17:16:50,608:INFO:Total runtime is 1.8899066050847373 minutes
2023-07-06 17:16:50,611:INFO:SubProcess create_model() called ==================================
2023-07-06 17:16:50,611:INFO:Initializing create_model()
2023-07-06 17:16:50,611:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d9c70>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25c09556d0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:16:50,611:INFO:Checking exceptions
2023-07-06 17:16:50,611:INFO:Importing libraries
2023-07-06 17:16:50,611:INFO:Copying training dataset
2023-07-06 17:16:50,731:INFO:Defining folds
2023-07-06 17:16:50,731:INFO:Declaring metric variables
2023-07-06 17:16:50,734:INFO:Importing untrained model
2023-07-06 17:16:50,736:INFO:Extra Trees Regressor Imported successfully
2023-07-06 17:16:50,741:INFO:Starting cross validation
2023-07-06 17:16:50,742:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:16:51,197:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/joblib/externals/loky/process_executor.py:700: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  warnings.warn(

2023-07-06 17:16:55,609:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.50s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-07-06 17:16:56,023:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.81s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-07-06 17:17:14,412:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 1.16s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-07-06 17:17:15,808:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-07-06 17:17:18,112:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 1.09s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-07-06 17:17:18,657:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.75s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-07-06 17:17:22,595:INFO:Calculating mean and std
2023-07-06 17:17:22,598:INFO:Creating metrics dataframe
2023-07-06 17:17:22,639:INFO:Uploading results into container
2023-07-06 17:17:22,640:INFO:Uploading model into container now
2023-07-06 17:17:22,641:INFO:_master_model_container: 14
2023-07-06 17:17:22,641:INFO:_display_container: 2
2023-07-06 17:17:22,642:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5039)
2023-07-06 17:17:22,642:INFO:create_model() successfully completed......................................
2023-07-06 17:17:22,855:INFO:SubProcess create_model() end ==================================
2023-07-06 17:17:22,855:INFO:Creating metrics dataframe
2023-07-06 17:17:22,866:INFO:Initializing AdaBoost Regressor
2023-07-06 17:17:22,866:INFO:Total runtime is 2.4275328397750857 minutes
2023-07-06 17:17:22,868:INFO:SubProcess create_model() called ==================================
2023-07-06 17:17:22,869:INFO:Initializing create_model()
2023-07-06 17:17:22,869:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d9c70>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25c09556d0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:17:22,869:INFO:Checking exceptions
2023-07-06 17:17:22,869:INFO:Importing libraries
2023-07-06 17:17:22,869:INFO:Copying training dataset
2023-07-06 17:17:23,017:INFO:Defining folds
2023-07-06 17:17:23,017:INFO:Declaring metric variables
2023-07-06 17:17:23,021:INFO:Importing untrained model
2023-07-06 17:17:23,023:INFO:AdaBoost Regressor Imported successfully
2023-07-06 17:17:23,028:INFO:Starting cross validation
2023-07-06 17:17:23,029:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:17:59,761:INFO:Calculating mean and std
2023-07-06 17:17:59,764:INFO:Creating metrics dataframe
2023-07-06 17:17:59,806:INFO:Uploading results into container
2023-07-06 17:17:59,807:INFO:Uploading model into container now
2023-07-06 17:17:59,808:INFO:_master_model_container: 15
2023-07-06 17:17:59,808:INFO:_display_container: 2
2023-07-06 17:17:59,808:INFO:AdaBoostRegressor(random_state=5039)
2023-07-06 17:17:59,808:INFO:create_model() successfully completed......................................
2023-07-06 17:18:00,019:INFO:SubProcess create_model() end ==================================
2023-07-06 17:18:00,019:INFO:Creating metrics dataframe
2023-07-06 17:18:00,031:INFO:Initializing Gradient Boosting Regressor
2023-07-06 17:18:00,031:INFO:Total runtime is 3.046946259339651 minutes
2023-07-06 17:18:00,033:INFO:SubProcess create_model() called ==================================
2023-07-06 17:18:00,033:INFO:Initializing create_model()
2023-07-06 17:18:00,034:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d9c70>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25c09556d0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:18:00,034:INFO:Checking exceptions
2023-07-06 17:18:00,034:INFO:Importing libraries
2023-07-06 17:18:00,034:INFO:Copying training dataset
2023-07-06 17:18:00,184:INFO:Defining folds
2023-07-06 17:18:00,185:INFO:Declaring metric variables
2023-07-06 17:18:00,188:INFO:Importing untrained model
2023-07-06 17:18:00,191:INFO:Gradient Boosting Regressor Imported successfully
2023-07-06 17:18:00,195:INFO:Starting cross validation
2023-07-06 17:18:00,196:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:19:31,694:INFO:Calculating mean and std
2023-07-06 17:19:31,697:INFO:Creating metrics dataframe
2023-07-06 17:19:31,739:INFO:Uploading results into container
2023-07-06 17:19:31,740:INFO:Uploading model into container now
2023-07-06 17:19:31,740:INFO:_master_model_container: 16
2023-07-06 17:19:31,741:INFO:_display_container: 2
2023-07-06 17:19:31,741:INFO:GradientBoostingRegressor(random_state=5039)
2023-07-06 17:19:31,741:INFO:create_model() successfully completed......................................
2023-07-06 17:19:31,965:INFO:SubProcess create_model() end ==================================
2023-07-06 17:19:31,965:INFO:Creating metrics dataframe
2023-07-06 17:19:31,976:INFO:Initializing Light Gradient Boosting Machine
2023-07-06 17:19:31,976:INFO:Total runtime is 4.579371960957845 minutes
2023-07-06 17:19:31,979:INFO:SubProcess create_model() called ==================================
2023-07-06 17:19:31,979:INFO:Initializing create_model()
2023-07-06 17:19:31,979:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d9c70>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25c09556d0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:19:31,979:INFO:Checking exceptions
2023-07-06 17:19:31,979:INFO:Importing libraries
2023-07-06 17:19:31,979:INFO:Copying training dataset
2023-07-06 17:19:32,132:INFO:Defining folds
2023-07-06 17:19:32,132:INFO:Declaring metric variables
2023-07-06 17:19:32,135:INFO:Importing untrained model
2023-07-06 17:19:32,138:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-06 17:19:32,143:INFO:Starting cross validation
2023-07-06 17:19:32,144:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:19:36,882:INFO:Calculating mean and std
2023-07-06 17:19:36,884:INFO:Creating metrics dataframe
2023-07-06 17:19:36,925:INFO:Uploading results into container
2023-07-06 17:19:36,925:INFO:Uploading model into container now
2023-07-06 17:19:36,926:INFO:_master_model_container: 17
2023-07-06 17:19:36,926:INFO:_display_container: 2
2023-07-06 17:19:36,927:INFO:LGBMRegressor(random_state=5039)
2023-07-06 17:19:36,927:INFO:create_model() successfully completed......................................
2023-07-06 17:19:37,121:INFO:SubProcess create_model() end ==================================
2023-07-06 17:19:37,121:INFO:Creating metrics dataframe
2023-07-06 17:19:37,132:INFO:Initializing Dummy Regressor
2023-07-06 17:19:37,133:INFO:Total runtime is 4.665309802691142 minutes
2023-07-06 17:19:37,135:INFO:SubProcess create_model() called ==================================
2023-07-06 17:19:37,135:INFO:Initializing create_model()
2023-07-06 17:19:37,135:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d9c70>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25c09556d0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:19:37,135:INFO:Checking exceptions
2023-07-06 17:19:37,135:INFO:Importing libraries
2023-07-06 17:19:37,136:INFO:Copying training dataset
2023-07-06 17:19:37,286:INFO:Defining folds
2023-07-06 17:19:37,286:INFO:Declaring metric variables
2023-07-06 17:19:37,289:INFO:Importing untrained model
2023-07-06 17:19:37,292:INFO:Dummy Regressor Imported successfully
2023-07-06 17:19:37,296:INFO:Starting cross validation
2023-07-06 17:19:37,297:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:19:39,222:INFO:Calculating mean and std
2023-07-06 17:19:39,225:INFO:Creating metrics dataframe
2023-07-06 17:19:39,321:INFO:Uploading results into container
2023-07-06 17:19:39,322:INFO:Uploading model into container now
2023-07-06 17:19:39,324:INFO:_master_model_container: 18
2023-07-06 17:19:39,324:INFO:_display_container: 2
2023-07-06 17:19:39,324:INFO:DummyRegressor()
2023-07-06 17:19:39,325:INFO:create_model() successfully completed......................................
2023-07-06 17:19:39,553:INFO:SubProcess create_model() end ==================================
2023-07-06 17:19:39,554:INFO:Creating metrics dataframe
2023-07-06 17:19:39,572:INFO:Initializing create_model()
2023-07-06 17:19:39,572:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d9c70>, estimator=OrthogonalMatchingPursuit(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:19:39,572:INFO:Checking exceptions
2023-07-06 17:19:39,573:INFO:Importing libraries
2023-07-06 17:19:39,573:INFO:Copying training dataset
2023-07-06 17:19:39,730:INFO:Defining folds
2023-07-06 17:19:39,730:INFO:Declaring metric variables
2023-07-06 17:19:39,730:INFO:Importing untrained model
2023-07-06 17:19:39,730:INFO:Declaring custom model
2023-07-06 17:19:39,731:INFO:Orthogonal Matching Pursuit Imported successfully
2023-07-06 17:19:39,732:INFO:Cross validation set to False
2023-07-06 17:19:39,732:INFO:Fitting Model
2023-07-06 17:19:41,160:INFO:OrthogonalMatchingPursuit()
2023-07-06 17:19:41,160:INFO:create_model() successfully completed......................................
2023-07-06 17:19:41,377:INFO:_master_model_container: 18
2023-07-06 17:19:41,377:INFO:_display_container: 2
2023-07-06 17:19:41,377:INFO:OrthogonalMatchingPursuit()
2023-07-06 17:19:41,377:INFO:compare_models() successfully completed......................................
2023-07-06 17:19:47,267:INFO:PyCaret RegressionExperiment
2023-07-06 17:19:47,267:INFO:Logging name: reg-default-name
2023-07-06 17:19:47,267:INFO:ML Usecase: MLUsecase.REGRESSION
2023-07-06 17:19:47,267:INFO:version 3.0.4
2023-07-06 17:19:47,267:INFO:Initializing setup()
2023-07-06 17:19:47,267:INFO:self.USI: 2458
2023-07-06 17:19:47,267:INFO:self._variable_keys: {'pipeline', 'fold_groups_param', 'log_plots_param', '_ml_usecase', 'memory', 'transform_target_param', 'logging_param', 'y', 'USI', 'data', 'target_param', 'html_param', 'fold_generator', 'X', 'n_jobs_param', 'X_test', 'y_test', 'exp_id', 'X_train', 'exp_name_log', 'gpu_n_jobs_param', 'seed', 'idx', 'gpu_param', 'y_train', '_available_plots', 'fold_shuffle_param'}
2023-07-06 17:19:47,267:INFO:Checking environment
2023-07-06 17:19:47,267:INFO:python_version: 3.9.16
2023-07-06 17:19:47,267:INFO:python_build: ('main', 'Feb  1 2023 21:39:03')
2023-07-06 17:19:47,267:INFO:machine: x86_64
2023-07-06 17:19:47,267:INFO:platform: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 17:19:47,268:INFO:Memory: svmem(total=540878073856, available=519333367808, percent=4.0, used=17986727936, free=17244336128, active=32113512448, inactive=474921254912, buffers=2690699264, cached=502956310528, shared=22040576, slab=14234337280)
2023-07-06 17:19:47,269:INFO:Physical Core: 64
2023-07-06 17:19:47,269:INFO:Logical Core: 64
2023-07-06 17:19:47,269:INFO:Checking libraries
2023-07-06 17:19:47,269:INFO:System:
2023-07-06 17:19:47,269:INFO:    python: 3.9.16 | packaged by conda-forge | (main, Feb  1 2023, 21:39:03)  [GCC 11.3.0]
2023-07-06 17:19:47,269:INFO:executable: /home/mirlab/anaconda3/envs/misc/bin/python
2023-07-06 17:19:47,269:INFO:   machine: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 17:19:47,269:INFO:PyCaret required dependencies:
2023-07-06 17:19:47,270:INFO:                 pip: 23.1.2
2023-07-06 17:19:47,270:INFO:          setuptools: 67.7.2
2023-07-06 17:19:47,270:INFO:             pycaret: 3.0.4
2023-07-06 17:19:47,270:INFO:             IPython: 8.14.0
2023-07-06 17:19:47,270:INFO:          ipywidgets: 8.0.7
2023-07-06 17:19:47,270:INFO:                tqdm: 4.64.1
2023-07-06 17:19:47,270:INFO:               numpy: 1.23.5
2023-07-06 17:19:47,270:INFO:              pandas: 1.5.3
2023-07-06 17:19:47,270:INFO:              jinja2: 3.1.2
2023-07-06 17:19:47,270:INFO:               scipy: 1.10.1
2023-07-06 17:19:47,270:INFO:              joblib: 1.2.0
2023-07-06 17:19:47,270:INFO:             sklearn: 1.2.2
2023-07-06 17:19:47,270:INFO:                pyod: 1.1.0
2023-07-06 17:19:47,270:INFO:            imblearn: 0.10.1
2023-07-06 17:19:47,270:INFO:   category_encoders: 2.6.1
2023-07-06 17:19:47,270:INFO:            lightgbm: 3.3.5
2023-07-06 17:19:47,270:INFO:               numba: 0.57.0
2023-07-06 17:19:47,270:INFO:            requests: 2.28.1
2023-07-06 17:19:47,270:INFO:          matplotlib: 3.7.1
2023-07-06 17:19:47,270:INFO:          scikitplot: 0.3.7
2023-07-06 17:19:47,270:INFO:         yellowbrick: 1.5
2023-07-06 17:19:47,270:INFO:              plotly: 5.15.0
2023-07-06 17:19:47,270:INFO:    plotly-resampler: Not installed
2023-07-06 17:19:47,270:INFO:             kaleido: 0.2.1
2023-07-06 17:19:47,270:INFO:           schemdraw: 0.15
2023-07-06 17:19:47,270:INFO:         statsmodels: 0.14.0
2023-07-06 17:19:47,270:INFO:              sktime: 0.20.0
2023-07-06 17:19:47,270:INFO:               tbats: 1.1.3
2023-07-06 17:19:47,270:INFO:            pmdarima: 2.0.3
2023-07-06 17:19:47,270:INFO:              psutil: 5.9.5
2023-07-06 17:19:47,270:INFO:          markupsafe: 2.1.2
2023-07-06 17:19:47,270:INFO:             pickle5: Not installed
2023-07-06 17:19:47,270:INFO:         cloudpickle: 2.2.1
2023-07-06 17:19:47,270:INFO:         deprecation: 2.1.0
2023-07-06 17:19:47,270:INFO:              xxhash: 3.2.0
2023-07-06 17:19:47,270:INFO:           wurlitzer: 3.0.3
2023-07-06 17:19:47,270:INFO:PyCaret optional dependencies:
2023-07-06 17:19:47,270:INFO:                shap: Not installed
2023-07-06 17:19:47,270:INFO:           interpret: Not installed
2023-07-06 17:19:47,270:INFO:                umap: Not installed
2023-07-06 17:19:47,270:INFO:    pandas_profiling: 3.6.6
2023-07-06 17:19:47,270:INFO:  explainerdashboard: Not installed
2023-07-06 17:19:47,270:INFO:             autoviz: Not installed
2023-07-06 17:19:47,270:INFO:           fairlearn: Not installed
2023-07-06 17:19:47,270:INFO:          deepchecks: Not installed
2023-07-06 17:19:47,270:INFO:             xgboost: Not installed
2023-07-06 17:19:47,270:INFO:            catboost: Not installed
2023-07-06 17:19:47,270:INFO:              kmodes: Not installed
2023-07-06 17:19:47,270:INFO:             mlxtend: Not installed
2023-07-06 17:19:47,270:INFO:       statsforecast: Not installed
2023-07-06 17:19:47,270:INFO:        tune_sklearn: Not installed
2023-07-06 17:19:47,271:INFO:                 ray: Not installed
2023-07-06 17:19:47,271:INFO:            hyperopt: Not installed
2023-07-06 17:19:47,271:INFO:              optuna: 3.1.1
2023-07-06 17:19:47,271:INFO:               skopt: Not installed
2023-07-06 17:19:47,271:INFO:              mlflow: Not installed
2023-07-06 17:19:47,271:INFO:              gradio: Not installed
2023-07-06 17:19:47,271:INFO:             fastapi: Not installed
2023-07-06 17:19:47,271:INFO:             uvicorn: Not installed
2023-07-06 17:19:47,271:INFO:              m2cgen: Not installed
2023-07-06 17:19:47,271:INFO:           evidently: Not installed
2023-07-06 17:19:47,271:INFO:               fugue: Not installed
2023-07-06 17:19:47,271:INFO:           streamlit: 1.24.0
2023-07-06 17:19:47,271:INFO:             prophet: Not installed
2023-07-06 17:19:47,271:INFO:None
2023-07-06 17:19:47,271:INFO:Set up data.
2023-07-06 17:19:47,402:INFO:Set up train/test split.
2023-07-06 17:19:47,497:INFO:Set up index.
2023-07-06 17:19:47,524:INFO:Set up folding strategy.
2023-07-06 17:19:47,524:INFO:Assigning column types.
2023-07-06 17:19:47,568:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-06 17:19:47,569:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 17:19:47,574:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:19:47,579:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:19:47,740:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:19:47,788:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:19:47,789:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:19:47,789:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:19:47,789:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 17:19:47,794:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:19:47,799:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:19:47,952:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:19:48,000:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:19:48,000:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:19:48,000:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:19:48,001:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-07-06 17:19:48,006:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:19:48,010:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:19:48,165:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:19:48,213:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:19:48,213:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:19:48,213:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:19:48,219:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:19:48,223:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:19:48,376:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:19:48,424:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:19:48,425:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:19:48,425:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:19:48,426:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-07-06 17:19:48,435:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:19:48,590:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:19:48,639:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:19:48,639:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:19:48,640:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:19:48,649:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:19:48,802:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:19:48,850:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:19:48,851:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:19:48,851:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:19:48,851:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-07-06 17:19:49,014:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:19:49,062:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:19:49,063:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:19:49,063:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:19:49,228:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:19:49,276:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:19:49,276:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:19:49,277:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:19:49,277:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-06 17:19:49,443:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:19:49,491:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:19:49,491:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:19:49,653:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:19:49,702:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:19:49,702:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:19:49,702:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-07-06 17:19:49,913:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:19:49,913:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:19:50,124:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:19:50,125:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:19:50,125:INFO:Preparing preprocessing pipeline...
2023-07-06 17:19:50,126:INFO:Set up simple imputation.
2023-07-06 17:19:50,131:INFO:Set up column name cleaning.
2023-07-06 17:19:51,256:INFO:Finished creating preprocessing pipeline.
2023-07-06 17:19:51,260:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['PTemp_C_Max', 'AirTC_Avg', 'RH',
                                             'WS_ms_Avg', 'WindDir', 'TPM1',
                                             'TPM2.5', 'TPM10', 'GeffRef',
                                             'TempRef', 'Daylight',
                                             'FT_Voltage2_back_1min',
                                             'FT_Voltage2_back_2min',
                                             'FT_Voltage2_back_3min',
                                             'FT_Voltage2_back_4min',
                                             'FT_Voltage2_back_5min',
                                             'FT_Voltage2_back...
                                             'FT_Voltage2_back_14min',
                                             'FT_Voltage2_back_15min',
                                             'FT_Voltage2_back_16min',
                                             'FT_Voltage2_back_17min',
                                             'FT_Voltage2_back_18min',
                                             'FT_Voltage2_back_19min', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-07-06 17:19:51,260:INFO:Creating final display dataframe.
2023-07-06 17:19:53,487:INFO:Setup _display_container:                     Description             Value
0                    Session id              8486
1                        Target       FT_Voltage2
2                   Target type        Regression
3           Original data shape      (143940, 72)
4        Transformed data shape      (143940, 72)
5   Transformed train set shape      (100758, 72)
6    Transformed test set shape       (43182, 72)
7              Numeric features                71
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              2458
2023-07-06 17:19:53,705:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:19:53,706:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:19:53,917:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:19:53,917:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:19:53,918:INFO:setup() successfully completed in 6.67s...............
2023-07-06 17:19:53,918:INFO:Initializing compare_models()
2023-07-06 17:19:53,918:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3040>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3040>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-07-06 17:19:53,918:INFO:Checking exceptions
2023-07-06 17:19:53,966:INFO:Preparing display monitor
2023-07-06 17:19:53,984:INFO:Initializing Linear Regression
2023-07-06 17:19:53,984:INFO:Total runtime is 1.637140909830729e-06 minutes
2023-07-06 17:19:53,986:INFO:SubProcess create_model() called ==================================
2023-07-06 17:19:53,987:INFO:Initializing create_model()
2023-07-06 17:19:53,987:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3040>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb84c40>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:19:53,987:INFO:Checking exceptions
2023-07-06 17:19:53,987:INFO:Importing libraries
2023-07-06 17:19:53,987:INFO:Copying training dataset
2023-07-06 17:19:54,122:INFO:Defining folds
2023-07-06 17:19:54,122:INFO:Declaring metric variables
2023-07-06 17:19:54,125:INFO:Importing untrained model
2023-07-06 17:19:54,128:INFO:Linear Regression Imported successfully
2023-07-06 17:19:54,132:INFO:Starting cross validation
2023-07-06 17:19:54,133:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:19:57,373:INFO:Calculating mean and std
2023-07-06 17:19:57,375:INFO:Creating metrics dataframe
2023-07-06 17:19:57,418:INFO:Uploading results into container
2023-07-06 17:19:57,419:INFO:Uploading model into container now
2023-07-06 17:19:57,419:INFO:_master_model_container: 1
2023-07-06 17:19:57,419:INFO:_display_container: 2
2023-07-06 17:19:57,420:INFO:LinearRegression(n_jobs=-1)
2023-07-06 17:19:57,420:INFO:create_model() successfully completed......................................
2023-07-06 17:19:57,612:INFO:SubProcess create_model() end ==================================
2023-07-06 17:19:57,612:INFO:Creating metrics dataframe
2023-07-06 17:19:57,620:INFO:Initializing Lasso Regression
2023-07-06 17:19:57,620:INFO:Total runtime is 0.06059517860412598 minutes
2023-07-06 17:19:57,622:INFO:SubProcess create_model() called ==================================
2023-07-06 17:19:57,623:INFO:Initializing create_model()
2023-07-06 17:19:57,623:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3040>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb84c40>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:19:57,623:INFO:Checking exceptions
2023-07-06 17:19:57,623:INFO:Importing libraries
2023-07-06 17:19:57,623:INFO:Copying training dataset
2023-07-06 17:19:57,763:INFO:Defining folds
2023-07-06 17:19:57,763:INFO:Declaring metric variables
2023-07-06 17:19:57,767:INFO:Importing untrained model
2023-07-06 17:19:57,769:INFO:Lasso Regression Imported successfully
2023-07-06 17:19:57,774:INFO:Starting cross validation
2023-07-06 17:19:57,775:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:20:00,842:INFO:Calculating mean and std
2023-07-06 17:20:00,844:INFO:Creating metrics dataframe
2023-07-06 17:20:00,869:INFO:Uploading results into container
2023-07-06 17:20:00,869:INFO:Uploading model into container now
2023-07-06 17:20:00,870:INFO:_master_model_container: 2
2023-07-06 17:20:00,870:INFO:_display_container: 2
2023-07-06 17:20:00,870:INFO:Lasso(random_state=8486)
2023-07-06 17:20:00,870:INFO:create_model() successfully completed......................................
2023-07-06 17:20:01,089:INFO:SubProcess create_model() end ==================================
2023-07-06 17:20:01,090:INFO:Creating metrics dataframe
2023-07-06 17:20:01,098:INFO:Initializing Ridge Regression
2023-07-06 17:20:01,098:INFO:Total runtime is 0.11856146653493246 minutes
2023-07-06 17:20:01,100:INFO:SubProcess create_model() called ==================================
2023-07-06 17:20:01,101:INFO:Initializing create_model()
2023-07-06 17:20:01,101:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3040>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb84c40>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:20:01,101:INFO:Checking exceptions
2023-07-06 17:20:01,101:INFO:Importing libraries
2023-07-06 17:20:01,101:INFO:Copying training dataset
2023-07-06 17:20:01,211:INFO:Defining folds
2023-07-06 17:20:01,211:INFO:Declaring metric variables
2023-07-06 17:20:01,215:INFO:Importing untrained model
2023-07-06 17:20:01,217:INFO:Ridge Regression Imported successfully
2023-07-06 17:20:01,221:INFO:Starting cross validation
2023-07-06 17:20:01,223:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:20:03,508:INFO:Calculating mean and std
2023-07-06 17:20:03,511:INFO:Creating metrics dataframe
2023-07-06 17:20:03,559:INFO:Uploading results into container
2023-07-06 17:20:03,560:INFO:Uploading model into container now
2023-07-06 17:20:03,561:INFO:_master_model_container: 3
2023-07-06 17:20:03,561:INFO:_display_container: 2
2023-07-06 17:20:03,562:INFO:Ridge(random_state=8486)
2023-07-06 17:20:03,562:INFO:create_model() successfully completed......................................
2023-07-06 17:20:03,788:INFO:SubProcess create_model() end ==================================
2023-07-06 17:20:03,789:INFO:Creating metrics dataframe
2023-07-06 17:20:03,797:INFO:Initializing Elastic Net
2023-07-06 17:20:03,797:INFO:Total runtime is 0.16354809999465944 minutes
2023-07-06 17:20:03,800:INFO:SubProcess create_model() called ==================================
2023-07-06 17:20:03,800:INFO:Initializing create_model()
2023-07-06 17:20:03,800:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3040>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb84c40>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:20:03,800:INFO:Checking exceptions
2023-07-06 17:20:03,800:INFO:Importing libraries
2023-07-06 17:20:03,800:INFO:Copying training dataset
2023-07-06 17:20:03,921:INFO:Defining folds
2023-07-06 17:20:03,922:INFO:Declaring metric variables
2023-07-06 17:20:03,925:INFO:Importing untrained model
2023-07-06 17:20:03,928:INFO:Elastic Net Imported successfully
2023-07-06 17:20:03,932:INFO:Starting cross validation
2023-07-06 17:20:03,933:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:20:09,304:INFO:Calculating mean and std
2023-07-06 17:20:09,307:INFO:Creating metrics dataframe
2023-07-06 17:20:09,351:INFO:Uploading results into container
2023-07-06 17:20:09,352:INFO:Uploading model into container now
2023-07-06 17:20:09,353:INFO:_master_model_container: 4
2023-07-06 17:20:09,353:INFO:_display_container: 2
2023-07-06 17:20:09,354:INFO:ElasticNet(random_state=8486)
2023-07-06 17:20:09,354:INFO:create_model() successfully completed......................................
2023-07-06 17:20:09,571:INFO:SubProcess create_model() end ==================================
2023-07-06 17:20:09,571:INFO:Creating metrics dataframe
2023-07-06 17:20:09,580:INFO:Initializing Least Angle Regression
2023-07-06 17:20:09,580:INFO:Total runtime is 0.2599248806635539 minutes
2023-07-06 17:20:09,582:INFO:SubProcess create_model() called ==================================
2023-07-06 17:20:09,583:INFO:Initializing create_model()
2023-07-06 17:20:09,583:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3040>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb84c40>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:20:09,583:INFO:Checking exceptions
2023-07-06 17:20:09,583:INFO:Importing libraries
2023-07-06 17:20:09,583:INFO:Copying training dataset
2023-07-06 17:20:09,701:INFO:Defining folds
2023-07-06 17:20:09,702:INFO:Declaring metric variables
2023-07-06 17:20:09,705:INFO:Importing untrained model
2023-07-06 17:20:09,707:INFO:Least Angle Regression Imported successfully
2023-07-06 17:20:09,712:INFO:Starting cross validation
2023-07-06 17:20:09,713:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:20:11,819:INFO:Calculating mean and std
2023-07-06 17:20:11,821:INFO:Creating metrics dataframe
2023-07-06 17:20:11,867:INFO:Uploading results into container
2023-07-06 17:20:11,868:INFO:Uploading model into container now
2023-07-06 17:20:11,868:INFO:_master_model_container: 5
2023-07-06 17:20:11,868:INFO:_display_container: 2
2023-07-06 17:20:11,869:INFO:Lars(random_state=8486)
2023-07-06 17:20:11,869:INFO:create_model() successfully completed......................................
2023-07-06 17:20:12,070:INFO:SubProcess create_model() end ==================================
2023-07-06 17:20:12,071:INFO:Creating metrics dataframe
2023-07-06 17:20:12,079:INFO:Initializing Lasso Least Angle Regression
2023-07-06 17:20:12,080:INFO:Total runtime is 0.30158943335215255 minutes
2023-07-06 17:20:12,082:INFO:SubProcess create_model() called ==================================
2023-07-06 17:20:12,082:INFO:Initializing create_model()
2023-07-06 17:20:12,082:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3040>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb84c40>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:20:12,083:INFO:Checking exceptions
2023-07-06 17:20:12,083:INFO:Importing libraries
2023-07-06 17:20:12,083:INFO:Copying training dataset
2023-07-06 17:20:12,228:INFO:Defining folds
2023-07-06 17:20:12,229:INFO:Declaring metric variables
2023-07-06 17:20:12,232:INFO:Importing untrained model
2023-07-06 17:20:12,235:INFO:Lasso Least Angle Regression Imported successfully
2023-07-06 17:20:12,239:INFO:Starting cross validation
2023-07-06 17:20:12,240:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:20:14,253:INFO:Calculating mean and std
2023-07-06 17:20:14,255:INFO:Creating metrics dataframe
2023-07-06 17:20:14,300:INFO:Uploading results into container
2023-07-06 17:20:14,301:INFO:Uploading model into container now
2023-07-06 17:20:14,301:INFO:_master_model_container: 6
2023-07-06 17:20:14,301:INFO:_display_container: 2
2023-07-06 17:20:14,302:INFO:LassoLars(random_state=8486)
2023-07-06 17:20:14,302:INFO:create_model() successfully completed......................................
2023-07-06 17:20:14,492:INFO:SubProcess create_model() end ==================================
2023-07-06 17:20:14,493:INFO:Creating metrics dataframe
2023-07-06 17:20:14,502:INFO:Initializing Orthogonal Matching Pursuit
2023-07-06 17:20:14,502:INFO:Total runtime is 0.34195857842763266 minutes
2023-07-06 17:20:14,504:INFO:SubProcess create_model() called ==================================
2023-07-06 17:20:14,505:INFO:Initializing create_model()
2023-07-06 17:20:14,505:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3040>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb84c40>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:20:14,505:INFO:Checking exceptions
2023-07-06 17:20:14,505:INFO:Importing libraries
2023-07-06 17:20:14,505:INFO:Copying training dataset
2023-07-06 17:20:14,615:INFO:Defining folds
2023-07-06 17:20:14,615:INFO:Declaring metric variables
2023-07-06 17:20:14,619:INFO:Importing untrained model
2023-07-06 17:20:14,621:INFO:Orthogonal Matching Pursuit Imported successfully
2023-07-06 17:20:14,626:INFO:Starting cross validation
2023-07-06 17:20:14,627:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:20:16,633:INFO:Calculating mean and std
2023-07-06 17:20:16,645:INFO:Creating metrics dataframe
2023-07-06 17:20:16,693:INFO:Uploading results into container
2023-07-06 17:20:16,694:INFO:Uploading model into container now
2023-07-06 17:20:16,694:INFO:_master_model_container: 7
2023-07-06 17:20:16,695:INFO:_display_container: 2
2023-07-06 17:20:16,695:INFO:OrthogonalMatchingPursuit()
2023-07-06 17:20:16,695:INFO:create_model() successfully completed......................................
2023-07-06 17:20:16,920:INFO:SubProcess create_model() end ==================================
2023-07-06 17:20:16,920:INFO:Creating metrics dataframe
2023-07-06 17:20:16,929:INFO:Initializing Bayesian Ridge
2023-07-06 17:20:16,930:INFO:Total runtime is 0.38242239952087403 minutes
2023-07-06 17:20:16,932:INFO:SubProcess create_model() called ==================================
2023-07-06 17:20:16,932:INFO:Initializing create_model()
2023-07-06 17:20:16,932:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3040>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb84c40>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:20:16,933:INFO:Checking exceptions
2023-07-06 17:20:16,933:INFO:Importing libraries
2023-07-06 17:20:16,933:INFO:Copying training dataset
2023-07-06 17:20:17,068:INFO:Defining folds
2023-07-06 17:20:17,069:INFO:Declaring metric variables
2023-07-06 17:20:17,072:INFO:Importing untrained model
2023-07-06 17:20:17,074:INFO:Bayesian Ridge Imported successfully
2023-07-06 17:20:17,079:INFO:Starting cross validation
2023-07-06 17:20:17,080:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:20:19,991:INFO:Calculating mean and std
2023-07-06 17:20:19,995:INFO:Creating metrics dataframe
2023-07-06 17:20:20,168:INFO:Uploading results into container
2023-07-06 17:20:20,169:INFO:Uploading model into container now
2023-07-06 17:20:20,170:INFO:_master_model_container: 8
2023-07-06 17:20:20,170:INFO:_display_container: 2
2023-07-06 17:20:20,171:INFO:BayesianRidge()
2023-07-06 17:20:20,171:INFO:create_model() successfully completed......................................
2023-07-06 17:20:20,376:INFO:SubProcess create_model() end ==================================
2023-07-06 17:20:20,376:INFO:Creating metrics dataframe
2023-07-06 17:20:20,386:INFO:Initializing Passive Aggressive Regressor
2023-07-06 17:20:20,386:INFO:Total runtime is 0.44003405968348186 minutes
2023-07-06 17:20:20,389:INFO:SubProcess create_model() called ==================================
2023-07-06 17:20:20,389:INFO:Initializing create_model()
2023-07-06 17:20:20,389:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3040>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb84c40>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:20:20,390:INFO:Checking exceptions
2023-07-06 17:20:20,390:INFO:Importing libraries
2023-07-06 17:20:20,390:INFO:Copying training dataset
2023-07-06 17:20:20,542:INFO:Defining folds
2023-07-06 17:20:20,543:INFO:Declaring metric variables
2023-07-06 17:20:20,546:INFO:Importing untrained model
2023-07-06 17:20:20,549:INFO:Passive Aggressive Regressor Imported successfully
2023-07-06 17:20:20,554:INFO:Starting cross validation
2023-07-06 17:20:20,555:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:20:23,468:INFO:Calculating mean and std
2023-07-06 17:20:23,470:INFO:Creating metrics dataframe
2023-07-06 17:20:23,517:INFO:Uploading results into container
2023-07-06 17:20:23,518:INFO:Uploading model into container now
2023-07-06 17:20:23,518:INFO:_master_model_container: 9
2023-07-06 17:20:23,518:INFO:_display_container: 2
2023-07-06 17:20:23,519:INFO:PassiveAggressiveRegressor(random_state=8486)
2023-07-06 17:20:23,519:INFO:create_model() successfully completed......................................
2023-07-06 17:20:23,682:INFO:SubProcess create_model() end ==================================
2023-07-06 17:20:23,682:INFO:Creating metrics dataframe
2023-07-06 17:20:23,692:INFO:Initializing Huber Regressor
2023-07-06 17:20:23,692:INFO:Total runtime is 0.49513084888458253 minutes
2023-07-06 17:20:23,695:INFO:SubProcess create_model() called ==================================
2023-07-06 17:20:23,695:INFO:Initializing create_model()
2023-07-06 17:20:23,695:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3040>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb84c40>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:20:23,695:INFO:Checking exceptions
2023-07-06 17:20:23,695:INFO:Importing libraries
2023-07-06 17:20:23,695:INFO:Copying training dataset
2023-07-06 17:20:23,838:INFO:Defining folds
2023-07-06 17:20:23,839:INFO:Declaring metric variables
2023-07-06 17:20:23,842:INFO:Importing untrained model
2023-07-06 17:20:23,845:INFO:Huber Regressor Imported successfully
2023-07-06 17:20:23,850:INFO:Starting cross validation
2023-07-06 17:20:23,851:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:20:31,810:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:20:32,506:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:20:32,845:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:20:33,012:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:20:33,765:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:20:33,933:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:20:34,259:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:20:34,505:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:20:34,697:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:20:34,893:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:20:35,177:INFO:Calculating mean and std
2023-07-06 17:20:35,180:INFO:Creating metrics dataframe
2023-07-06 17:20:35,228:INFO:Uploading results into container
2023-07-06 17:20:35,229:INFO:Uploading model into container now
2023-07-06 17:20:35,230:INFO:_master_model_container: 10
2023-07-06 17:20:35,230:INFO:_display_container: 2
2023-07-06 17:20:35,231:INFO:HuberRegressor()
2023-07-06 17:20:35,231:INFO:create_model() successfully completed......................................
2023-07-06 17:20:35,432:INFO:SubProcess create_model() end ==================================
2023-07-06 17:20:35,432:INFO:Creating metrics dataframe
2023-07-06 17:20:35,442:INFO:Initializing K Neighbors Regressor
2023-07-06 17:20:35,442:INFO:Total runtime is 0.6909664710362753 minutes
2023-07-06 17:20:35,445:INFO:SubProcess create_model() called ==================================
2023-07-06 17:20:35,445:INFO:Initializing create_model()
2023-07-06 17:20:35,445:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3040>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb84c40>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:20:35,446:INFO:Checking exceptions
2023-07-06 17:20:35,446:INFO:Importing libraries
2023-07-06 17:20:35,446:INFO:Copying training dataset
2023-07-06 17:20:35,590:INFO:Defining folds
2023-07-06 17:20:35,590:INFO:Declaring metric variables
2023-07-06 17:20:35,594:INFO:Importing untrained model
2023-07-06 17:20:35,596:INFO:K Neighbors Regressor Imported successfully
2023-07-06 17:20:35,601:INFO:Starting cross validation
2023-07-06 17:20:35,602:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:20:43,556:INFO:Calculating mean and std
2023-07-06 17:20:43,559:INFO:Creating metrics dataframe
2023-07-06 17:20:43,609:INFO:Uploading results into container
2023-07-06 17:20:43,609:INFO:Uploading model into container now
2023-07-06 17:20:43,610:INFO:_master_model_container: 11
2023-07-06 17:20:43,610:INFO:_display_container: 2
2023-07-06 17:20:43,611:INFO:KNeighborsRegressor(n_jobs=-1)
2023-07-06 17:20:43,611:INFO:create_model() successfully completed......................................
2023-07-06 17:20:43,812:INFO:SubProcess create_model() end ==================================
2023-07-06 17:20:43,812:INFO:Creating metrics dataframe
2023-07-06 17:20:43,822:INFO:Initializing Decision Tree Regressor
2023-07-06 17:20:43,822:INFO:Total runtime is 0.8306361476580303 minutes
2023-07-06 17:20:43,825:INFO:SubProcess create_model() called ==================================
2023-07-06 17:20:43,825:INFO:Initializing create_model()
2023-07-06 17:20:43,825:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3040>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb84c40>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:20:43,826:INFO:Checking exceptions
2023-07-06 17:20:43,826:INFO:Importing libraries
2023-07-06 17:20:43,826:INFO:Copying training dataset
2023-07-06 17:20:43,967:INFO:Defining folds
2023-07-06 17:20:43,967:INFO:Declaring metric variables
2023-07-06 17:20:43,970:INFO:Importing untrained model
2023-07-06 17:20:43,973:INFO:Decision Tree Regressor Imported successfully
2023-07-06 17:20:43,978:INFO:Starting cross validation
2023-07-06 17:20:43,979:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:20:50,244:INFO:Calculating mean and std
2023-07-06 17:20:50,247:INFO:Creating metrics dataframe
2023-07-06 17:20:50,299:INFO:Uploading results into container
2023-07-06 17:20:50,300:INFO:Uploading model into container now
2023-07-06 17:20:50,300:INFO:_master_model_container: 12
2023-07-06 17:20:50,301:INFO:_display_container: 2
2023-07-06 17:20:50,301:INFO:DecisionTreeRegressor(random_state=8486)
2023-07-06 17:20:50,301:INFO:create_model() successfully completed......................................
2023-07-06 17:20:50,500:INFO:SubProcess create_model() end ==================================
2023-07-06 17:20:50,501:INFO:Creating metrics dataframe
2023-07-06 17:20:50,511:INFO:Initializing Random Forest Regressor
2023-07-06 17:20:50,511:INFO:Total runtime is 0.9421090205510458 minutes
2023-07-06 17:20:50,513:INFO:SubProcess create_model() called ==================================
2023-07-06 17:20:50,514:INFO:Initializing create_model()
2023-07-06 17:20:50,514:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3040>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb84c40>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:20:50,514:INFO:Checking exceptions
2023-07-06 17:20:50,514:INFO:Importing libraries
2023-07-06 17:20:50,514:INFO:Copying training dataset
2023-07-06 17:20:50,654:INFO:Defining folds
2023-07-06 17:20:50,654:INFO:Declaring metric variables
2023-07-06 17:20:50,658:INFO:Importing untrained model
2023-07-06 17:20:50,661:INFO:Random Forest Regressor Imported successfully
2023-07-06 17:20:50,665:INFO:Starting cross validation
2023-07-06 17:20:50,667:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:20:53,183:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-07-06 17:20:56,184:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 1.29s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-07-06 17:21:45,968:INFO:Calculating mean and std
2023-07-06 17:21:45,972:INFO:Creating metrics dataframe
2023-07-06 17:21:46,099:INFO:Uploading results into container
2023-07-06 17:21:46,100:INFO:Uploading model into container now
2023-07-06 17:21:46,101:INFO:_master_model_container: 13
2023-07-06 17:21:46,101:INFO:_display_container: 2
2023-07-06 17:21:46,102:INFO:RandomForestRegressor(n_jobs=-1, random_state=8486)
2023-07-06 17:21:46,102:INFO:create_model() successfully completed......................................
2023-07-06 17:21:46,322:INFO:SubProcess create_model() end ==================================
2023-07-06 17:21:46,323:INFO:Creating metrics dataframe
2023-07-06 17:21:46,333:INFO:Initializing Extra Trees Regressor
2023-07-06 17:21:46,334:INFO:Total runtime is 1.8724903821945191 minutes
2023-07-06 17:21:46,336:INFO:SubProcess create_model() called ==================================
2023-07-06 17:21:46,337:INFO:Initializing create_model()
2023-07-06 17:21:46,337:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3040>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb84c40>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:21:46,337:INFO:Checking exceptions
2023-07-06 17:21:46,337:INFO:Importing libraries
2023-07-06 17:21:46,337:INFO:Copying training dataset
2023-07-06 17:21:46,456:INFO:Defining folds
2023-07-06 17:21:46,456:INFO:Declaring metric variables
2023-07-06 17:21:46,459:INFO:Importing untrained model
2023-07-06 17:21:46,462:INFO:Extra Trees Regressor Imported successfully
2023-07-06 17:21:46,467:INFO:Starting cross validation
2023-07-06 17:21:46,468:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:21:50,908:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 1.77s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-07-06 17:21:53,531:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 1.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-07-06 17:21:53,843:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 2.09s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-07-06 17:21:58,368:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 3.04s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-07-06 17:22:04,554:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 2.63s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-07-06 17:22:08,239:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-07-06 17:22:13,876:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 4.20s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-07-06 17:22:15,934:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:108: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-07-06 17:22:17,781:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 17:22:17,917:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 3.42s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-07-06 17:22:29,166:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 2.71s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-07-06 17:22:29,870:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-07-06 17:22:32,726:INFO:Calculating mean and std
2023-07-06 17:22:32,729:INFO:Creating metrics dataframe
2023-07-06 17:22:32,791:INFO:Uploading results into container
2023-07-06 17:22:32,792:INFO:Uploading model into container now
2023-07-06 17:22:32,793:INFO:_master_model_container: 14
2023-07-06 17:22:32,793:INFO:_display_container: 2
2023-07-06 17:22:32,794:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8486)
2023-07-06 17:22:32,794:INFO:create_model() successfully completed......................................
2023-07-06 17:22:32,988:INFO:SubProcess create_model() end ==================================
2023-07-06 17:22:32,988:INFO:Creating metrics dataframe
2023-07-06 17:22:32,999:INFO:Initializing AdaBoost Regressor
2023-07-06 17:22:32,999:INFO:Total runtime is 2.6502463897069295 minutes
2023-07-06 17:22:33,002:INFO:SubProcess create_model() called ==================================
2023-07-06 17:22:33,002:INFO:Initializing create_model()
2023-07-06 17:22:33,002:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3040>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb84c40>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:22:33,002:INFO:Checking exceptions
2023-07-06 17:22:33,002:INFO:Importing libraries
2023-07-06 17:22:33,002:INFO:Copying training dataset
2023-07-06 17:22:33,156:INFO:Defining folds
2023-07-06 17:22:33,156:INFO:Declaring metric variables
2023-07-06 17:22:33,159:INFO:Importing untrained model
2023-07-06 17:22:33,162:INFO:AdaBoost Regressor Imported successfully
2023-07-06 17:22:33,167:INFO:Starting cross validation
2023-07-06 17:22:33,168:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:23:09,033:INFO:Calculating mean and std
2023-07-06 17:23:09,036:INFO:Creating metrics dataframe
2023-07-06 17:23:09,062:INFO:Uploading results into container
2023-07-06 17:23:09,063:INFO:Uploading model into container now
2023-07-06 17:23:09,064:INFO:_master_model_container: 15
2023-07-06 17:23:09,064:INFO:_display_container: 2
2023-07-06 17:23:09,065:INFO:AdaBoostRegressor(random_state=8486)
2023-07-06 17:23:09,065:INFO:create_model() successfully completed......................................
2023-07-06 17:23:09,287:INFO:SubProcess create_model() end ==================================
2023-07-06 17:23:09,287:INFO:Creating metrics dataframe
2023-07-06 17:23:09,299:INFO:Initializing Gradient Boosting Regressor
2023-07-06 17:23:09,299:INFO:Total runtime is 3.2552403092384337 minutes
2023-07-06 17:23:09,301:INFO:SubProcess create_model() called ==================================
2023-07-06 17:23:09,302:INFO:Initializing create_model()
2023-07-06 17:23:09,302:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3040>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb84c40>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:23:09,302:INFO:Checking exceptions
2023-07-06 17:23:09,302:INFO:Importing libraries
2023-07-06 17:23:09,302:INFO:Copying training dataset
2023-07-06 17:23:09,456:INFO:Defining folds
2023-07-06 17:23:09,457:INFO:Declaring metric variables
2023-07-06 17:23:09,460:INFO:Importing untrained model
2023-07-06 17:23:09,463:INFO:Gradient Boosting Regressor Imported successfully
2023-07-06 17:23:09,468:INFO:Starting cross validation
2023-07-06 17:23:09,469:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:24:40,355:INFO:Calculating mean and std
2023-07-06 17:24:40,359:INFO:Creating metrics dataframe
2023-07-06 17:24:40,384:INFO:Uploading results into container
2023-07-06 17:24:40,385:INFO:Uploading model into container now
2023-07-06 17:24:40,386:INFO:_master_model_container: 16
2023-07-06 17:24:40,386:INFO:_display_container: 2
2023-07-06 17:24:40,387:INFO:GradientBoostingRegressor(random_state=8486)
2023-07-06 17:24:40,387:INFO:create_model() successfully completed......................................
2023-07-06 17:24:40,596:INFO:SubProcess create_model() end ==================================
2023-07-06 17:24:40,596:INFO:Creating metrics dataframe
2023-07-06 17:24:40,607:INFO:Initializing Light Gradient Boosting Machine
2023-07-06 17:24:40,607:INFO:Total runtime is 4.7770460883776344 minutes
2023-07-06 17:24:40,610:INFO:SubProcess create_model() called ==================================
2023-07-06 17:24:40,610:INFO:Initializing create_model()
2023-07-06 17:24:40,610:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3040>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb84c40>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:24:40,610:INFO:Checking exceptions
2023-07-06 17:24:40,610:INFO:Importing libraries
2023-07-06 17:24:40,610:INFO:Copying training dataset
2023-07-06 17:24:40,718:INFO:Defining folds
2023-07-06 17:24:40,718:INFO:Declaring metric variables
2023-07-06 17:24:40,721:INFO:Importing untrained model
2023-07-06 17:24:40,724:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-06 17:24:40,729:INFO:Starting cross validation
2023-07-06 17:24:40,730:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:24:45,645:INFO:Calculating mean and std
2023-07-06 17:24:45,648:INFO:Creating metrics dataframe
2023-07-06 17:24:45,675:INFO:Uploading results into container
2023-07-06 17:24:45,676:INFO:Uploading model into container now
2023-07-06 17:24:45,677:INFO:_master_model_container: 17
2023-07-06 17:24:45,677:INFO:_display_container: 2
2023-07-06 17:24:45,678:INFO:LGBMRegressor(random_state=8486)
2023-07-06 17:24:45,678:INFO:create_model() successfully completed......................................
2023-07-06 17:24:45,887:INFO:SubProcess create_model() end ==================================
2023-07-06 17:24:45,887:INFO:Creating metrics dataframe
2023-07-06 17:24:45,898:INFO:Initializing Dummy Regressor
2023-07-06 17:24:45,899:INFO:Total runtime is 4.865239993731181 minutes
2023-07-06 17:24:45,901:INFO:SubProcess create_model() called ==================================
2023-07-06 17:24:45,902:INFO:Initializing create_model()
2023-07-06 17:24:45,902:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3040>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25aeb84c40>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:24:45,902:INFO:Checking exceptions
2023-07-06 17:24:45,902:INFO:Importing libraries
2023-07-06 17:24:45,902:INFO:Copying training dataset
2023-07-06 17:24:46,058:INFO:Defining folds
2023-07-06 17:24:46,058:INFO:Declaring metric variables
2023-07-06 17:24:46,062:INFO:Importing untrained model
2023-07-06 17:24:46,064:INFO:Dummy Regressor Imported successfully
2023-07-06 17:24:46,069:INFO:Starting cross validation
2023-07-06 17:24:46,071:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:24:48,283:INFO:Calculating mean and std
2023-07-06 17:24:48,284:INFO:Creating metrics dataframe
2023-07-06 17:24:48,308:INFO:Uploading results into container
2023-07-06 17:24:48,309:INFO:Uploading model into container now
2023-07-06 17:24:48,310:INFO:_master_model_container: 18
2023-07-06 17:24:48,310:INFO:_display_container: 2
2023-07-06 17:24:48,310:INFO:DummyRegressor()
2023-07-06 17:24:48,310:INFO:create_model() successfully completed......................................
2023-07-06 17:24:48,485:INFO:SubProcess create_model() end ==================================
2023-07-06 17:24:48,485:INFO:Creating metrics dataframe
2023-07-06 17:24:48,503:INFO:Initializing create_model()
2023-07-06 17:24:48,503:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3040>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:24:48,503:INFO:Checking exceptions
2023-07-06 17:24:48,504:INFO:Importing libraries
2023-07-06 17:24:48,505:INFO:Copying training dataset
2023-07-06 17:24:48,648:INFO:Defining folds
2023-07-06 17:24:48,648:INFO:Declaring metric variables
2023-07-06 17:24:48,648:INFO:Importing untrained model
2023-07-06 17:24:48,649:INFO:Declaring custom model
2023-07-06 17:24:48,649:INFO:Linear Regression Imported successfully
2023-07-06 17:24:48,650:INFO:Cross validation set to False
2023-07-06 17:24:48,650:INFO:Fitting Model
2023-07-06 17:24:50,361:INFO:LinearRegression(n_jobs=-1)
2023-07-06 17:24:50,362:INFO:create_model() successfully completed......................................
2023-07-06 17:24:50,549:INFO:_master_model_container: 18
2023-07-06 17:24:50,549:INFO:_display_container: 2
2023-07-06 17:24:50,549:INFO:LinearRegression(n_jobs=-1)
2023-07-06 17:24:50,549:INFO:compare_models() successfully completed......................................
2023-07-06 17:24:56,748:INFO:PyCaret RegressionExperiment
2023-07-06 17:24:56,749:INFO:Logging name: reg-default-name
2023-07-06 17:24:56,749:INFO:ML Usecase: MLUsecase.REGRESSION
2023-07-06 17:24:56,749:INFO:version 3.0.4
2023-07-06 17:24:56,749:INFO:Initializing setup()
2023-07-06 17:24:56,749:INFO:self.USI: 6bfe
2023-07-06 17:24:56,749:INFO:self._variable_keys: {'pipeline', 'fold_groups_param', 'log_plots_param', '_ml_usecase', 'memory', 'transform_target_param', 'logging_param', 'y', 'USI', 'data', 'target_param', 'html_param', 'fold_generator', 'X', 'n_jobs_param', 'X_test', 'y_test', 'exp_id', 'X_train', 'exp_name_log', 'gpu_n_jobs_param', 'seed', 'idx', 'gpu_param', 'y_train', '_available_plots', 'fold_shuffle_param'}
2023-07-06 17:24:56,749:INFO:Checking environment
2023-07-06 17:24:56,749:INFO:python_version: 3.9.16
2023-07-06 17:24:56,749:INFO:python_build: ('main', 'Feb  1 2023 21:39:03')
2023-07-06 17:24:56,749:INFO:machine: x86_64
2023-07-06 17:24:56,749:INFO:platform: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 17:24:56,749:INFO:Memory: svmem(total=540878073856, available=517819998208, percent=4.3, used=19512676352, free=15546032128, active=32373534720, inactive=476307693568, buffers=2692141056, cached=503127224320, shared=22040576, slab=14232633344)
2023-07-06 17:24:56,751:INFO:Physical Core: 64
2023-07-06 17:24:56,751:INFO:Logical Core: 64
2023-07-06 17:24:56,751:INFO:Checking libraries
2023-07-06 17:24:56,751:INFO:System:
2023-07-06 17:24:56,751:INFO:    python: 3.9.16 | packaged by conda-forge | (main, Feb  1 2023, 21:39:03)  [GCC 11.3.0]
2023-07-06 17:24:56,751:INFO:executable: /home/mirlab/anaconda3/envs/misc/bin/python
2023-07-06 17:24:56,751:INFO:   machine: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 17:24:56,751:INFO:PyCaret required dependencies:
2023-07-06 17:24:56,751:INFO:                 pip: 23.1.2
2023-07-06 17:24:56,751:INFO:          setuptools: 67.7.2
2023-07-06 17:24:56,751:INFO:             pycaret: 3.0.4
2023-07-06 17:24:56,751:INFO:             IPython: 8.14.0
2023-07-06 17:24:56,751:INFO:          ipywidgets: 8.0.7
2023-07-06 17:24:56,751:INFO:                tqdm: 4.64.1
2023-07-06 17:24:56,751:INFO:               numpy: 1.23.5
2023-07-06 17:24:56,751:INFO:              pandas: 1.5.3
2023-07-06 17:24:56,751:INFO:              jinja2: 3.1.2
2023-07-06 17:24:56,751:INFO:               scipy: 1.10.1
2023-07-06 17:24:56,751:INFO:              joblib: 1.2.0
2023-07-06 17:24:56,751:INFO:             sklearn: 1.2.2
2023-07-06 17:24:56,751:INFO:                pyod: 1.1.0
2023-07-06 17:24:56,751:INFO:            imblearn: 0.10.1
2023-07-06 17:24:56,751:INFO:   category_encoders: 2.6.1
2023-07-06 17:24:56,751:INFO:            lightgbm: 3.3.5
2023-07-06 17:24:56,751:INFO:               numba: 0.57.0
2023-07-06 17:24:56,751:INFO:            requests: 2.28.1
2023-07-06 17:24:56,751:INFO:          matplotlib: 3.7.1
2023-07-06 17:24:56,751:INFO:          scikitplot: 0.3.7
2023-07-06 17:24:56,751:INFO:         yellowbrick: 1.5
2023-07-06 17:24:56,751:INFO:              plotly: 5.15.0
2023-07-06 17:24:56,751:INFO:    plotly-resampler: Not installed
2023-07-06 17:24:56,751:INFO:             kaleido: 0.2.1
2023-07-06 17:24:56,751:INFO:           schemdraw: 0.15
2023-07-06 17:24:56,751:INFO:         statsmodels: 0.14.0
2023-07-06 17:24:56,751:INFO:              sktime: 0.20.0
2023-07-06 17:24:56,751:INFO:               tbats: 1.1.3
2023-07-06 17:24:56,751:INFO:            pmdarima: 2.0.3
2023-07-06 17:24:56,751:INFO:              psutil: 5.9.5
2023-07-06 17:24:56,751:INFO:          markupsafe: 2.1.2
2023-07-06 17:24:56,752:INFO:             pickle5: Not installed
2023-07-06 17:24:56,752:INFO:         cloudpickle: 2.2.1
2023-07-06 17:24:56,752:INFO:         deprecation: 2.1.0
2023-07-06 17:24:56,752:INFO:              xxhash: 3.2.0
2023-07-06 17:24:56,752:INFO:           wurlitzer: 3.0.3
2023-07-06 17:24:56,752:INFO:PyCaret optional dependencies:
2023-07-06 17:24:56,752:INFO:                shap: Not installed
2023-07-06 17:24:56,752:INFO:           interpret: Not installed
2023-07-06 17:24:56,752:INFO:                umap: Not installed
2023-07-06 17:24:56,752:INFO:    pandas_profiling: 3.6.6
2023-07-06 17:24:56,752:INFO:  explainerdashboard: Not installed
2023-07-06 17:24:56,752:INFO:             autoviz: Not installed
2023-07-06 17:24:56,752:INFO:           fairlearn: Not installed
2023-07-06 17:24:56,752:INFO:          deepchecks: Not installed
2023-07-06 17:24:56,752:INFO:             xgboost: Not installed
2023-07-06 17:24:56,752:INFO:            catboost: Not installed
2023-07-06 17:24:56,752:INFO:              kmodes: Not installed
2023-07-06 17:24:56,752:INFO:             mlxtend: Not installed
2023-07-06 17:24:56,752:INFO:       statsforecast: Not installed
2023-07-06 17:24:56,752:INFO:        tune_sklearn: Not installed
2023-07-06 17:24:56,752:INFO:                 ray: Not installed
2023-07-06 17:24:56,752:INFO:            hyperopt: Not installed
2023-07-06 17:24:56,752:INFO:              optuna: 3.1.1
2023-07-06 17:24:56,752:INFO:               skopt: Not installed
2023-07-06 17:24:56,752:INFO:              mlflow: Not installed
2023-07-06 17:24:56,752:INFO:              gradio: Not installed
2023-07-06 17:24:56,752:INFO:             fastapi: Not installed
2023-07-06 17:24:56,752:INFO:             uvicorn: Not installed
2023-07-06 17:24:56,752:INFO:              m2cgen: Not installed
2023-07-06 17:24:56,752:INFO:           evidently: Not installed
2023-07-06 17:24:56,752:INFO:               fugue: Not installed
2023-07-06 17:24:56,752:INFO:           streamlit: 1.24.0
2023-07-06 17:24:56,752:INFO:             prophet: Not installed
2023-07-06 17:24:56,752:INFO:None
2023-07-06 17:24:56,752:INFO:Set up data.
2023-07-06 17:24:56,887:INFO:Set up train/test split.
2023-07-06 17:24:56,983:INFO:Set up index.
2023-07-06 17:24:57,005:INFO:Set up folding strategy.
2023-07-06 17:24:57,005:INFO:Assigning column types.
2023-07-06 17:24:57,049:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-06 17:24:57,049:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 17:24:57,054:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:24:57,059:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:24:57,219:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:24:57,267:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:24:57,268:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:24:57,268:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:24:57,268:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 17:24:57,273:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:24:57,278:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:24:57,428:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:24:57,476:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:24:57,476:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:24:57,476:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:24:57,477:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-07-06 17:24:57,482:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:24:57,486:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:24:57,636:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:24:57,684:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:24:57,684:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:24:57,685:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:24:57,690:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:24:57,695:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:24:57,846:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:24:57,894:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:24:57,894:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:24:57,894:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:24:57,895:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-07-06 17:24:57,904:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:24:58,056:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:24:58,103:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:24:58,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:24:58,104:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:24:58,114:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:24:58,266:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:24:58,314:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:24:58,314:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:24:58,314:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:24:58,314:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-07-06 17:24:58,473:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:24:58,521:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:24:58,522:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:24:58,522:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:24:58,684:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:24:58,732:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:24:58,732:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:24:58,732:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:24:58,733:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-06 17:24:58,896:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:24:58,944:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:24:58,944:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:24:59,104:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:24:59,152:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:24:59,153:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:24:59,153:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-07-06 17:24:59,361:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:24:59,361:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:24:59,567:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:24:59,567:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:24:59,568:INFO:Preparing preprocessing pipeline...
2023-07-06 17:24:59,568:INFO:Set up simple imputation.
2023-07-06 17:24:59,574:INFO:Set up column name cleaning.
2023-07-06 17:25:00,622:INFO:Finished creating preprocessing pipeline.
2023-07-06 17:25:00,627:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['PTemp_C_Max', 'AirTC_Avg', 'RH',
                                             'WS_ms_Avg', 'WindDir', 'TPM1',
                                             'TPM2.5', 'TPM10', 'GeffRef',
                                             'TempRef', 'Daylight',
                                             'DN_Voltage1_back_1min',
                                             'DN_Voltage1_back_2min',
                                             'DN_Voltage1_back_3min',
                                             'DN_Voltage1_back_4min',
                                             'DN_Voltage1_back_5min',
                                             'DN_Voltage1_back...
                                             'DN_Voltage1_back_14min',
                                             'DN_Voltage1_back_15min',
                                             'DN_Voltage1_back_16min',
                                             'DN_Voltage1_back_17min',
                                             'DN_Voltage1_back_18min',
                                             'DN_Voltage1_back_19min', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-07-06 17:25:00,627:INFO:Creating final display dataframe.
2023-07-06 17:25:02,731:INFO:Setup _display_container:                     Description             Value
0                    Session id              1178
1                        Target       DN_Voltage1
2                   Target type        Regression
3           Original data shape      (143940, 72)
4        Transformed data shape      (143940, 72)
5   Transformed train set shape      (100758, 72)
6    Transformed test set shape       (43182, 72)
7              Numeric features                71
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              6bfe
2023-07-06 17:25:02,948:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:25:02,948:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:25:03,152:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:25:03,153:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:25:03,154:INFO:setup() successfully completed in 6.41s...............
2023-07-06 17:25:03,154:INFO:Initializing compare_models()
2023-07-06 17:25:03,154:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d6610>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d6610>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-07-06 17:25:03,154:INFO:Checking exceptions
2023-07-06 17:25:03,199:INFO:Preparing display monitor
2023-07-06 17:25:03,217:INFO:Initializing Linear Regression
2023-07-06 17:25:03,218:INFO:Total runtime is 4.581610361735026e-06 minutes
2023-07-06 17:25:03,220:INFO:SubProcess create_model() called ==================================
2023-07-06 17:25:03,220:INFO:Initializing create_model()
2023-07-06 17:25:03,220:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d6610>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae6f4df0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:25:03,220:INFO:Checking exceptions
2023-07-06 17:25:03,221:INFO:Importing libraries
2023-07-06 17:25:03,221:INFO:Copying training dataset
2023-07-06 17:25:03,354:INFO:Defining folds
2023-07-06 17:25:03,354:INFO:Declaring metric variables
2023-07-06 17:25:03,358:INFO:Importing untrained model
2023-07-06 17:25:03,360:INFO:Linear Regression Imported successfully
2023-07-06 17:25:03,365:INFO:Starting cross validation
2023-07-06 17:25:03,366:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:25:06,654:INFO:Calculating mean and std
2023-07-06 17:25:06,657:INFO:Creating metrics dataframe
2023-07-06 17:25:06,686:INFO:Uploading results into container
2023-07-06 17:25:06,687:INFO:Uploading model into container now
2023-07-06 17:25:06,688:INFO:_master_model_container: 1
2023-07-06 17:25:06,688:INFO:_display_container: 2
2023-07-06 17:25:06,689:INFO:LinearRegression(n_jobs=-1)
2023-07-06 17:25:06,689:INFO:create_model() successfully completed......................................
2023-07-06 17:25:06,900:INFO:SubProcess create_model() end ==================================
2023-07-06 17:25:06,901:INFO:Creating metrics dataframe
2023-07-06 17:25:06,908:INFO:Initializing Lasso Regression
2023-07-06 17:25:06,908:INFO:Total runtime is 0.06151688496271769 minutes
2023-07-06 17:25:06,911:INFO:SubProcess create_model() called ==================================
2023-07-06 17:25:06,911:INFO:Initializing create_model()
2023-07-06 17:25:06,911:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d6610>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae6f4df0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:25:06,911:INFO:Checking exceptions
2023-07-06 17:25:06,911:INFO:Importing libraries
2023-07-06 17:25:06,911:INFO:Copying training dataset
2023-07-06 17:25:07,060:INFO:Defining folds
2023-07-06 17:25:07,061:INFO:Declaring metric variables
2023-07-06 17:25:07,064:INFO:Importing untrained model
2023-07-06 17:25:07,067:INFO:Lasso Regression Imported successfully
2023-07-06 17:25:07,072:INFO:Starting cross validation
2023-07-06 17:25:07,073:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:25:10,042:INFO:Calculating mean and std
2023-07-06 17:25:10,044:INFO:Creating metrics dataframe
2023-07-06 17:25:10,071:INFO:Uploading results into container
2023-07-06 17:25:10,072:INFO:Uploading model into container now
2023-07-06 17:25:10,073:INFO:_master_model_container: 2
2023-07-06 17:25:10,073:INFO:_display_container: 2
2023-07-06 17:25:10,073:INFO:Lasso(random_state=1178)
2023-07-06 17:25:10,073:INFO:create_model() successfully completed......................................
2023-07-06 17:25:10,255:INFO:SubProcess create_model() end ==================================
2023-07-06 17:25:10,256:INFO:Creating metrics dataframe
2023-07-06 17:25:10,264:INFO:Initializing Ridge Regression
2023-07-06 17:25:10,264:INFO:Total runtime is 0.1174423853556315 minutes
2023-07-06 17:25:10,266:INFO:SubProcess create_model() called ==================================
2023-07-06 17:25:10,267:INFO:Initializing create_model()
2023-07-06 17:25:10,267:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d6610>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae6f4df0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:25:10,267:INFO:Checking exceptions
2023-07-06 17:25:10,267:INFO:Importing libraries
2023-07-06 17:25:10,267:INFO:Copying training dataset
2023-07-06 17:25:10,411:INFO:Defining folds
2023-07-06 17:25:10,412:INFO:Declaring metric variables
2023-07-06 17:25:10,415:INFO:Importing untrained model
2023-07-06 17:25:10,418:INFO:Ridge Regression Imported successfully
2023-07-06 17:25:10,423:INFO:Starting cross validation
2023-07-06 17:25:10,424:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:25:12,645:INFO:Calculating mean and std
2023-07-06 17:25:12,647:INFO:Creating metrics dataframe
2023-07-06 17:25:12,673:INFO:Uploading results into container
2023-07-06 17:25:12,674:INFO:Uploading model into container now
2023-07-06 17:25:12,674:INFO:_master_model_container: 3
2023-07-06 17:25:12,674:INFO:_display_container: 2
2023-07-06 17:25:12,675:INFO:Ridge(random_state=1178)
2023-07-06 17:25:12,675:INFO:create_model() successfully completed......................................
2023-07-06 17:25:12,854:INFO:SubProcess create_model() end ==================================
2023-07-06 17:25:12,854:INFO:Creating metrics dataframe
2023-07-06 17:25:12,863:INFO:Initializing Elastic Net
2023-07-06 17:25:12,863:INFO:Total runtime is 0.16076100269953408 minutes
2023-07-06 17:25:12,866:INFO:SubProcess create_model() called ==================================
2023-07-06 17:25:12,866:INFO:Initializing create_model()
2023-07-06 17:25:12,866:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d6610>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae6f4df0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:25:12,866:INFO:Checking exceptions
2023-07-06 17:25:12,866:INFO:Importing libraries
2023-07-06 17:25:12,866:INFO:Copying training dataset
2023-07-06 17:25:13,006:INFO:Defining folds
2023-07-06 17:25:13,007:INFO:Declaring metric variables
2023-07-06 17:25:13,010:INFO:Importing untrained model
2023-07-06 17:25:13,013:INFO:Elastic Net Imported successfully
2023-07-06 17:25:13,018:INFO:Starting cross validation
2023-07-06 17:25:13,019:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:25:16,754:INFO:Calculating mean and std
2023-07-06 17:25:16,756:INFO:Creating metrics dataframe
2023-07-06 17:25:16,782:INFO:Uploading results into container
2023-07-06 17:25:16,783:INFO:Uploading model into container now
2023-07-06 17:25:16,783:INFO:_master_model_container: 4
2023-07-06 17:25:16,783:INFO:_display_container: 2
2023-07-06 17:25:16,784:INFO:ElasticNet(random_state=1178)
2023-07-06 17:25:16,784:INFO:create_model() successfully completed......................................
2023-07-06 17:25:16,959:INFO:SubProcess create_model() end ==================================
2023-07-06 17:25:16,959:INFO:Creating metrics dataframe
2023-07-06 17:25:16,967:INFO:Initializing Least Angle Regression
2023-07-06 17:25:16,967:INFO:Total runtime is 0.22916884422302244 minutes
2023-07-06 17:25:16,970:INFO:SubProcess create_model() called ==================================
2023-07-06 17:25:16,970:INFO:Initializing create_model()
2023-07-06 17:25:16,971:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d6610>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae6f4df0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:25:16,971:INFO:Checking exceptions
2023-07-06 17:25:16,971:INFO:Importing libraries
2023-07-06 17:25:16,971:INFO:Copying training dataset
2023-07-06 17:25:17,107:INFO:Defining folds
2023-07-06 17:25:17,107:INFO:Declaring metric variables
2023-07-06 17:25:17,110:INFO:Importing untrained model
2023-07-06 17:25:17,113:INFO:Least Angle Regression Imported successfully
2023-07-06 17:25:17,118:INFO:Starting cross validation
2023-07-06 17:25:17,119:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:25:19,171:INFO:Calculating mean and std
2023-07-06 17:25:19,173:INFO:Creating metrics dataframe
2023-07-06 17:25:19,202:INFO:Uploading results into container
2023-07-06 17:25:19,203:INFO:Uploading model into container now
2023-07-06 17:25:19,204:INFO:_master_model_container: 5
2023-07-06 17:25:19,204:INFO:_display_container: 2
2023-07-06 17:25:19,205:INFO:Lars(random_state=1178)
2023-07-06 17:25:19,205:INFO:create_model() successfully completed......................................
2023-07-06 17:25:19,410:INFO:SubProcess create_model() end ==================================
2023-07-06 17:25:19,410:INFO:Creating metrics dataframe
2023-07-06 17:25:19,418:INFO:Initializing Lasso Least Angle Regression
2023-07-06 17:25:19,419:INFO:Total runtime is 0.27002277374267575 minutes
2023-07-06 17:25:19,422:INFO:SubProcess create_model() called ==================================
2023-07-06 17:25:19,423:INFO:Initializing create_model()
2023-07-06 17:25:19,423:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d6610>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae6f4df0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:25:19,423:INFO:Checking exceptions
2023-07-06 17:25:19,423:INFO:Importing libraries
2023-07-06 17:25:19,423:INFO:Copying training dataset
2023-07-06 17:25:19,576:INFO:Defining folds
2023-07-06 17:25:19,576:INFO:Declaring metric variables
2023-07-06 17:25:19,580:INFO:Importing untrained model
2023-07-06 17:25:19,583:INFO:Lasso Least Angle Regression Imported successfully
2023-07-06 17:25:19,587:INFO:Starting cross validation
2023-07-06 17:25:19,589:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:25:21,628:INFO:Calculating mean and std
2023-07-06 17:25:21,630:INFO:Creating metrics dataframe
2023-07-06 17:25:21,656:INFO:Uploading results into container
2023-07-06 17:25:21,657:INFO:Uploading model into container now
2023-07-06 17:25:21,657:INFO:_master_model_container: 6
2023-07-06 17:25:21,657:INFO:_display_container: 2
2023-07-06 17:25:21,658:INFO:LassoLars(random_state=1178)
2023-07-06 17:25:21,658:INFO:create_model() successfully completed......................................
2023-07-06 17:25:21,836:INFO:SubProcess create_model() end ==================================
2023-07-06 17:25:21,836:INFO:Creating metrics dataframe
2023-07-06 17:25:21,845:INFO:Initializing Orthogonal Matching Pursuit
2023-07-06 17:25:21,845:INFO:Total runtime is 0.310464068253835 minutes
2023-07-06 17:25:21,848:INFO:SubProcess create_model() called ==================================
2023-07-06 17:25:21,848:INFO:Initializing create_model()
2023-07-06 17:25:21,848:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d6610>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae6f4df0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:25:21,848:INFO:Checking exceptions
2023-07-06 17:25:21,848:INFO:Importing libraries
2023-07-06 17:25:21,848:INFO:Copying training dataset
2023-07-06 17:25:21,992:INFO:Defining folds
2023-07-06 17:25:21,992:INFO:Declaring metric variables
2023-07-06 17:25:21,996:INFO:Importing untrained model
2023-07-06 17:25:21,999:INFO:Orthogonal Matching Pursuit Imported successfully
2023-07-06 17:25:22,004:INFO:Starting cross validation
2023-07-06 17:25:22,005:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:25:24,017:INFO:Calculating mean and std
2023-07-06 17:25:24,019:INFO:Creating metrics dataframe
2023-07-06 17:25:24,046:INFO:Uploading results into container
2023-07-06 17:25:24,047:INFO:Uploading model into container now
2023-07-06 17:25:24,047:INFO:_master_model_container: 7
2023-07-06 17:25:24,047:INFO:_display_container: 2
2023-07-06 17:25:24,048:INFO:OrthogonalMatchingPursuit()
2023-07-06 17:25:24,048:INFO:create_model() successfully completed......................................
2023-07-06 17:25:24,226:INFO:SubProcess create_model() end ==================================
2023-07-06 17:25:24,226:INFO:Creating metrics dataframe
2023-07-06 17:25:24,235:INFO:Initializing Bayesian Ridge
2023-07-06 17:25:24,236:INFO:Total runtime is 0.350304901599884 minutes
2023-07-06 17:25:24,238:INFO:SubProcess create_model() called ==================================
2023-07-06 17:25:24,239:INFO:Initializing create_model()
2023-07-06 17:25:24,239:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d6610>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae6f4df0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:25:24,239:INFO:Checking exceptions
2023-07-06 17:25:24,239:INFO:Importing libraries
2023-07-06 17:25:24,239:INFO:Copying training dataset
2023-07-06 17:25:24,376:INFO:Defining folds
2023-07-06 17:25:24,376:INFO:Declaring metric variables
2023-07-06 17:25:24,380:INFO:Importing untrained model
2023-07-06 17:25:24,382:INFO:Bayesian Ridge Imported successfully
2023-07-06 17:25:24,388:INFO:Starting cross validation
2023-07-06 17:25:24,389:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:25:27,936:INFO:Calculating mean and std
2023-07-06 17:25:27,938:INFO:Creating metrics dataframe
2023-07-06 17:25:27,967:INFO:Uploading results into container
2023-07-06 17:25:27,968:INFO:Uploading model into container now
2023-07-06 17:25:27,969:INFO:_master_model_container: 8
2023-07-06 17:25:27,969:INFO:_display_container: 2
2023-07-06 17:25:27,969:INFO:BayesianRidge()
2023-07-06 17:25:27,970:INFO:create_model() successfully completed......................................
2023-07-06 17:25:28,154:INFO:SubProcess create_model() end ==================================
2023-07-06 17:25:28,154:INFO:Creating metrics dataframe
2023-07-06 17:25:28,163:INFO:Initializing Passive Aggressive Regressor
2023-07-06 17:25:28,163:INFO:Total runtime is 0.4157596548398335 minutes
2023-07-06 17:25:28,165:INFO:SubProcess create_model() called ==================================
2023-07-06 17:25:28,166:INFO:Initializing create_model()
2023-07-06 17:25:28,166:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d6610>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae6f4df0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:25:28,166:INFO:Checking exceptions
2023-07-06 17:25:28,166:INFO:Importing libraries
2023-07-06 17:25:28,166:INFO:Copying training dataset
2023-07-06 17:25:28,315:INFO:Defining folds
2023-07-06 17:25:28,315:INFO:Declaring metric variables
2023-07-06 17:25:28,319:INFO:Importing untrained model
2023-07-06 17:25:28,321:INFO:Passive Aggressive Regressor Imported successfully
2023-07-06 17:25:28,326:INFO:Starting cross validation
2023-07-06 17:25:28,328:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:25:30,954:INFO:Calculating mean and std
2023-07-06 17:25:30,957:INFO:Creating metrics dataframe
2023-07-06 17:25:30,987:INFO:Uploading results into container
2023-07-06 17:25:30,988:INFO:Uploading model into container now
2023-07-06 17:25:30,988:INFO:_master_model_container: 9
2023-07-06 17:25:30,989:INFO:_display_container: 2
2023-07-06 17:25:30,989:INFO:PassiveAggressiveRegressor(random_state=1178)
2023-07-06 17:25:30,989:INFO:create_model() successfully completed......................................
2023-07-06 17:25:31,196:INFO:SubProcess create_model() end ==================================
2023-07-06 17:25:31,196:INFO:Creating metrics dataframe
2023-07-06 17:25:31,206:INFO:Initializing Huber Regressor
2023-07-06 17:25:31,206:INFO:Total runtime is 0.46648110946019483 minutes
2023-07-06 17:25:31,209:INFO:SubProcess create_model() called ==================================
2023-07-06 17:25:31,209:INFO:Initializing create_model()
2023-07-06 17:25:31,209:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d6610>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae6f4df0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:25:31,209:INFO:Checking exceptions
2023-07-06 17:25:31,209:INFO:Importing libraries
2023-07-06 17:25:31,209:INFO:Copying training dataset
2023-07-06 17:25:31,359:INFO:Defining folds
2023-07-06 17:25:31,359:INFO:Declaring metric variables
2023-07-06 17:25:31,362:INFO:Importing untrained model
2023-07-06 17:25:31,365:INFO:Huber Regressor Imported successfully
2023-07-06 17:25:31,370:INFO:Starting cross validation
2023-07-06 17:25:31,371:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:25:37,894:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:25:38,095:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:25:42,407:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:25:43,149:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:25:43,297:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:25:43,348:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:25:43,473:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:25:43,676:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:25:44,366:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:25:45,027:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:25:45,300:INFO:Calculating mean and std
2023-07-06 17:25:45,302:INFO:Creating metrics dataframe
2023-07-06 17:25:45,332:INFO:Uploading results into container
2023-07-06 17:25:45,333:INFO:Uploading model into container now
2023-07-06 17:25:45,334:INFO:_master_model_container: 10
2023-07-06 17:25:45,334:INFO:_display_container: 2
2023-07-06 17:25:45,334:INFO:HuberRegressor()
2023-07-06 17:25:45,334:INFO:create_model() successfully completed......................................
2023-07-06 17:25:45,513:INFO:SubProcess create_model() end ==================================
2023-07-06 17:25:45,513:INFO:Creating metrics dataframe
2023-07-06 17:25:45,523:INFO:Initializing K Neighbors Regressor
2023-07-06 17:25:45,523:INFO:Total runtime is 0.7050962924957275 minutes
2023-07-06 17:25:45,526:INFO:SubProcess create_model() called ==================================
2023-07-06 17:25:45,526:INFO:Initializing create_model()
2023-07-06 17:25:45,526:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d6610>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae6f4df0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:25:45,526:INFO:Checking exceptions
2023-07-06 17:25:45,526:INFO:Importing libraries
2023-07-06 17:25:45,526:INFO:Copying training dataset
2023-07-06 17:25:45,662:INFO:Defining folds
2023-07-06 17:25:45,663:INFO:Declaring metric variables
2023-07-06 17:25:45,666:INFO:Importing untrained model
2023-07-06 17:25:45,669:INFO:K Neighbors Regressor Imported successfully
2023-07-06 17:25:45,674:INFO:Starting cross validation
2023-07-06 17:25:45,675:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:25:53,555:INFO:Calculating mean and std
2023-07-06 17:25:53,558:INFO:Creating metrics dataframe
2023-07-06 17:25:53,590:INFO:Uploading results into container
2023-07-06 17:25:53,590:INFO:Uploading model into container now
2023-07-06 17:25:53,591:INFO:_master_model_container: 11
2023-07-06 17:25:53,591:INFO:_display_container: 2
2023-07-06 17:25:53,592:INFO:KNeighborsRegressor(n_jobs=-1)
2023-07-06 17:25:53,592:INFO:create_model() successfully completed......................................
2023-07-06 17:25:53,796:INFO:SubProcess create_model() end ==================================
2023-07-06 17:25:53,796:INFO:Creating metrics dataframe
2023-07-06 17:25:53,806:INFO:Initializing Decision Tree Regressor
2023-07-06 17:25:53,806:INFO:Total runtime is 0.8431490023930867 minutes
2023-07-06 17:25:53,809:INFO:SubProcess create_model() called ==================================
2023-07-06 17:25:53,809:INFO:Initializing create_model()
2023-07-06 17:25:53,809:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d6610>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae6f4df0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:25:53,809:INFO:Checking exceptions
2023-07-06 17:25:53,809:INFO:Importing libraries
2023-07-06 17:25:53,810:INFO:Copying training dataset
2023-07-06 17:25:53,955:INFO:Defining folds
2023-07-06 17:25:53,956:INFO:Declaring metric variables
2023-07-06 17:25:53,959:INFO:Importing untrained model
2023-07-06 17:25:53,962:INFO:Decision Tree Regressor Imported successfully
2023-07-06 17:25:53,967:INFO:Starting cross validation
2023-07-06 17:25:53,968:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:26:00,329:INFO:Calculating mean and std
2023-07-06 17:26:00,331:INFO:Creating metrics dataframe
2023-07-06 17:26:00,362:INFO:Uploading results into container
2023-07-06 17:26:00,363:INFO:Uploading model into container now
2023-07-06 17:26:00,364:INFO:_master_model_container: 12
2023-07-06 17:26:00,364:INFO:_display_container: 2
2023-07-06 17:26:00,365:INFO:DecisionTreeRegressor(random_state=1178)
2023-07-06 17:26:00,365:INFO:create_model() successfully completed......................................
2023-07-06 17:26:00,544:INFO:SubProcess create_model() end ==================================
2023-07-06 17:26:00,544:INFO:Creating metrics dataframe
2023-07-06 17:26:00,554:INFO:Initializing Random Forest Regressor
2023-07-06 17:26:00,554:INFO:Total runtime is 0.9556156158447264 minutes
2023-07-06 17:26:00,557:INFO:SubProcess create_model() called ==================================
2023-07-06 17:26:00,558:INFO:Initializing create_model()
2023-07-06 17:26:00,558:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d6610>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae6f4df0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:26:00,558:INFO:Checking exceptions
2023-07-06 17:26:00,558:INFO:Importing libraries
2023-07-06 17:26:00,558:INFO:Copying training dataset
2023-07-06 17:26:00,698:INFO:Defining folds
2023-07-06 17:26:00,698:INFO:Declaring metric variables
2023-07-06 17:26:00,702:INFO:Importing untrained model
2023-07-06 17:26:00,705:INFO:Random Forest Regressor Imported successfully
2023-07-06 17:26:00,710:INFO:Starting cross validation
2023-07-06 17:26:00,711:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:26:58,336:INFO:Calculating mean and std
2023-07-06 17:26:58,338:INFO:Creating metrics dataframe
2023-07-06 17:26:58,428:INFO:Uploading results into container
2023-07-06 17:26:58,429:INFO:Uploading model into container now
2023-07-06 17:26:58,430:INFO:_master_model_container: 13
2023-07-06 17:26:58,430:INFO:_display_container: 2
2023-07-06 17:26:58,430:INFO:RandomForestRegressor(n_jobs=-1, random_state=1178)
2023-07-06 17:26:58,430:INFO:create_model() successfully completed......................................
2023-07-06 17:26:58,624:INFO:SubProcess create_model() end ==================================
2023-07-06 17:26:58,624:INFO:Creating metrics dataframe
2023-07-06 17:26:58,635:INFO:Initializing Extra Trees Regressor
2023-07-06 17:26:58,636:INFO:Total runtime is 1.9236375172932942 minutes
2023-07-06 17:26:58,638:INFO:SubProcess create_model() called ==================================
2023-07-06 17:26:58,639:INFO:Initializing create_model()
2023-07-06 17:26:58,639:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d6610>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae6f4df0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:26:58,639:INFO:Checking exceptions
2023-07-06 17:26:58,639:INFO:Importing libraries
2023-07-06 17:26:58,639:INFO:Copying training dataset
2023-07-06 17:26:58,785:INFO:Defining folds
2023-07-06 17:26:58,786:INFO:Declaring metric variables
2023-07-06 17:26:58,789:INFO:Importing untrained model
2023-07-06 17:26:58,793:INFO:Extra Trees Regressor Imported successfully
2023-07-06 17:26:58,798:INFO:Starting cross validation
2023-07-06 17:26:58,799:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:26:59,213:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/joblib/externals/loky/process_executor.py:700: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  warnings.warn(

2023-07-06 17:27:04,129:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.80s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-07-06 17:27:04,847:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 1.29s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-07-06 17:27:05,723:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 1.78s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-07-06 17:27:09,154:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 2.04s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-07-06 17:27:09,529:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 2.22s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-07-06 17:27:10,760:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 1.96s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-07-06 17:27:15,420:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 3.20s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-07-06 17:27:36,305:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 7.99s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-07-06 17:27:41,521:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 1.70s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-07-06 17:27:54,437:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.81s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-07-06 17:27:58,139:INFO:Calculating mean and std
2023-07-06 17:27:58,142:INFO:Creating metrics dataframe
2023-07-06 17:27:58,164:INFO:Uploading results into container
2023-07-06 17:27:58,165:INFO:Uploading model into container now
2023-07-06 17:27:58,166:INFO:_master_model_container: 14
2023-07-06 17:27:58,166:INFO:_display_container: 2
2023-07-06 17:27:58,166:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1178)
2023-07-06 17:27:58,166:INFO:create_model() successfully completed......................................
2023-07-06 17:27:58,350:INFO:SubProcess create_model() end ==================================
2023-07-06 17:27:58,350:INFO:Creating metrics dataframe
2023-07-06 17:27:58,361:INFO:Initializing AdaBoost Regressor
2023-07-06 17:27:58,362:INFO:Total runtime is 2.919072349866231 minutes
2023-07-06 17:27:58,364:INFO:SubProcess create_model() called ==================================
2023-07-06 17:27:58,365:INFO:Initializing create_model()
2023-07-06 17:27:58,365:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d6610>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae6f4df0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:27:58,365:INFO:Checking exceptions
2023-07-06 17:27:58,365:INFO:Importing libraries
2023-07-06 17:27:58,365:INFO:Copying training dataset
2023-07-06 17:27:58,509:INFO:Defining folds
2023-07-06 17:27:58,509:INFO:Declaring metric variables
2023-07-06 17:27:58,512:INFO:Importing untrained model
2023-07-06 17:27:58,515:INFO:AdaBoost Regressor Imported successfully
2023-07-06 17:27:58,519:INFO:Starting cross validation
2023-07-06 17:27:58,521:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:27:58,693:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/joblib/externals/loky/process_executor.py:700: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  warnings.warn(

2023-07-06 17:28:33,487:INFO:Calculating mean and std
2023-07-06 17:28:33,490:INFO:Creating metrics dataframe
2023-07-06 17:28:33,515:INFO:Uploading results into container
2023-07-06 17:28:33,516:INFO:Uploading model into container now
2023-07-06 17:28:33,517:INFO:_master_model_container: 15
2023-07-06 17:28:33,517:INFO:_display_container: 2
2023-07-06 17:28:33,517:INFO:AdaBoostRegressor(random_state=1178)
2023-07-06 17:28:33,517:INFO:create_model() successfully completed......................................
2023-07-06 17:28:33,736:INFO:SubProcess create_model() end ==================================
2023-07-06 17:28:33,736:INFO:Creating metrics dataframe
2023-07-06 17:28:33,747:INFO:Initializing Gradient Boosting Regressor
2023-07-06 17:28:33,747:INFO:Total runtime is 3.5088244080543514 minutes
2023-07-06 17:28:33,749:INFO:SubProcess create_model() called ==================================
2023-07-06 17:28:33,750:INFO:Initializing create_model()
2023-07-06 17:28:33,750:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d6610>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae6f4df0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:28:33,750:INFO:Checking exceptions
2023-07-06 17:28:33,750:INFO:Importing libraries
2023-07-06 17:28:33,750:INFO:Copying training dataset
2023-07-06 17:28:33,897:INFO:Defining folds
2023-07-06 17:28:33,897:INFO:Declaring metric variables
2023-07-06 17:28:33,901:INFO:Importing untrained model
2023-07-06 17:28:33,904:INFO:Gradient Boosting Regressor Imported successfully
2023-07-06 17:28:33,908:INFO:Starting cross validation
2023-07-06 17:28:33,910:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:30:04,092:INFO:Calculating mean and std
2023-07-06 17:30:04,093:INFO:Creating metrics dataframe
2023-07-06 17:30:04,115:INFO:Uploading results into container
2023-07-06 17:30:04,116:INFO:Uploading model into container now
2023-07-06 17:30:04,116:INFO:_master_model_container: 16
2023-07-06 17:30:04,116:INFO:_display_container: 2
2023-07-06 17:30:04,117:INFO:GradientBoostingRegressor(random_state=1178)
2023-07-06 17:30:04,117:INFO:create_model() successfully completed......................................
2023-07-06 17:30:04,291:INFO:SubProcess create_model() end ==================================
2023-07-06 17:30:04,292:INFO:Creating metrics dataframe
2023-07-06 17:30:04,302:INFO:Initializing Light Gradient Boosting Machine
2023-07-06 17:30:04,303:INFO:Total runtime is 5.01808830499649 minutes
2023-07-06 17:30:04,306:INFO:SubProcess create_model() called ==================================
2023-07-06 17:30:04,307:INFO:Initializing create_model()
2023-07-06 17:30:04,307:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d6610>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae6f4df0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:30:04,307:INFO:Checking exceptions
2023-07-06 17:30:04,307:INFO:Importing libraries
2023-07-06 17:30:04,307:INFO:Copying training dataset
2023-07-06 17:30:04,445:INFO:Defining folds
2023-07-06 17:30:04,445:INFO:Declaring metric variables
2023-07-06 17:30:04,449:INFO:Importing untrained model
2023-07-06 17:30:04,452:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-06 17:30:04,457:INFO:Starting cross validation
2023-07-06 17:30:04,458:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:30:08,979:INFO:Calculating mean and std
2023-07-06 17:30:08,982:INFO:Creating metrics dataframe
2023-07-06 17:30:09,008:INFO:Uploading results into container
2023-07-06 17:30:09,009:INFO:Uploading model into container now
2023-07-06 17:30:09,010:INFO:_master_model_container: 17
2023-07-06 17:30:09,010:INFO:_display_container: 2
2023-07-06 17:30:09,010:INFO:LGBMRegressor(random_state=1178)
2023-07-06 17:30:09,011:INFO:create_model() successfully completed......................................
2023-07-06 17:30:09,216:INFO:SubProcess create_model() end ==================================
2023-07-06 17:30:09,216:INFO:Creating metrics dataframe
2023-07-06 17:30:09,227:INFO:Initializing Dummy Regressor
2023-07-06 17:30:09,227:INFO:Total runtime is 5.100169559319814 minutes
2023-07-06 17:30:09,230:INFO:SubProcess create_model() called ==================================
2023-07-06 17:30:09,231:INFO:Initializing create_model()
2023-07-06 17:30:09,231:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d6610>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25ae6f4df0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:30:09,231:INFO:Checking exceptions
2023-07-06 17:30:09,231:INFO:Importing libraries
2023-07-06 17:30:09,231:INFO:Copying training dataset
2023-07-06 17:30:09,372:INFO:Defining folds
2023-07-06 17:30:09,372:INFO:Declaring metric variables
2023-07-06 17:30:09,376:INFO:Importing untrained model
2023-07-06 17:30:09,379:INFO:Dummy Regressor Imported successfully
2023-07-06 17:30:09,384:INFO:Starting cross validation
2023-07-06 17:30:09,385:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:30:11,497:INFO:Calculating mean and std
2023-07-06 17:30:11,499:INFO:Creating metrics dataframe
2023-07-06 17:30:11,523:INFO:Uploading results into container
2023-07-06 17:30:11,524:INFO:Uploading model into container now
2023-07-06 17:30:11,524:INFO:_master_model_container: 18
2023-07-06 17:30:11,524:INFO:_display_container: 2
2023-07-06 17:30:11,525:INFO:DummyRegressor()
2023-07-06 17:30:11,525:INFO:create_model() successfully completed......................................
2023-07-06 17:30:11,703:INFO:SubProcess create_model() end ==================================
2023-07-06 17:30:11,703:INFO:Creating metrics dataframe
2023-07-06 17:30:11,721:INFO:Initializing create_model()
2023-07-06 17:30:11,722:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25b17d6610>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:30:11,722:INFO:Checking exceptions
2023-07-06 17:30:11,723:INFO:Importing libraries
2023-07-06 17:30:11,723:INFO:Copying training dataset
2023-07-06 17:30:11,866:INFO:Defining folds
2023-07-06 17:30:11,867:INFO:Declaring metric variables
2023-07-06 17:30:11,867:INFO:Importing untrained model
2023-07-06 17:30:11,867:INFO:Declaring custom model
2023-07-06 17:30:11,867:INFO:Linear Regression Imported successfully
2023-07-06 17:30:11,868:INFO:Cross validation set to False
2023-07-06 17:30:11,868:INFO:Fitting Model
2023-07-06 17:30:13,587:INFO:LinearRegression(n_jobs=-1)
2023-07-06 17:30:13,588:INFO:create_model() successfully completed......................................
2023-07-06 17:30:13,793:INFO:_master_model_container: 18
2023-07-06 17:30:13,793:INFO:_display_container: 2
2023-07-06 17:30:13,793:INFO:LinearRegression(n_jobs=-1)
2023-07-06 17:30:13,794:INFO:compare_models() successfully completed......................................
2023-07-06 17:30:19,659:INFO:PyCaret RegressionExperiment
2023-07-06 17:30:19,659:INFO:Logging name: reg-default-name
2023-07-06 17:30:19,659:INFO:ML Usecase: MLUsecase.REGRESSION
2023-07-06 17:30:19,659:INFO:version 3.0.4
2023-07-06 17:30:19,659:INFO:Initializing setup()
2023-07-06 17:30:19,659:INFO:self.USI: 4727
2023-07-06 17:30:19,659:INFO:self._variable_keys: {'pipeline', 'fold_groups_param', 'log_plots_param', '_ml_usecase', 'memory', 'transform_target_param', 'logging_param', 'y', 'USI', 'data', 'target_param', 'html_param', 'fold_generator', 'X', 'n_jobs_param', 'X_test', 'y_test', 'exp_id', 'X_train', 'exp_name_log', 'gpu_n_jobs_param', 'seed', 'idx', 'gpu_param', 'y_train', '_available_plots', 'fold_shuffle_param'}
2023-07-06 17:30:19,659:INFO:Checking environment
2023-07-06 17:30:19,659:INFO:python_version: 3.9.16
2023-07-06 17:30:19,659:INFO:python_build: ('main', 'Feb  1 2023 21:39:03')
2023-07-06 17:30:19,659:INFO:machine: x86_64
2023-07-06 17:30:19,659:INFO:platform: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 17:30:19,660:INFO:Memory: svmem(total=540878073856, available=518375432192, percent=4.2, used=18957549568, free=16092397568, active=32441630720, inactive=475747745792, buffers=2693545984, cached=503134580736, shared=22040576, slab=14232633344)
2023-07-06 17:30:19,661:INFO:Physical Core: 64
2023-07-06 17:30:19,661:INFO:Logical Core: 64
2023-07-06 17:30:19,661:INFO:Checking libraries
2023-07-06 17:30:19,661:INFO:System:
2023-07-06 17:30:19,661:INFO:    python: 3.9.16 | packaged by conda-forge | (main, Feb  1 2023, 21:39:03)  [GCC 11.3.0]
2023-07-06 17:30:19,661:INFO:executable: /home/mirlab/anaconda3/envs/misc/bin/python
2023-07-06 17:30:19,661:INFO:   machine: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-07-06 17:30:19,661:INFO:PyCaret required dependencies:
2023-07-06 17:30:19,661:INFO:                 pip: 23.1.2
2023-07-06 17:30:19,661:INFO:          setuptools: 67.7.2
2023-07-06 17:30:19,661:INFO:             pycaret: 3.0.4
2023-07-06 17:30:19,661:INFO:             IPython: 8.14.0
2023-07-06 17:30:19,662:INFO:          ipywidgets: 8.0.7
2023-07-06 17:30:19,662:INFO:                tqdm: 4.64.1
2023-07-06 17:30:19,662:INFO:               numpy: 1.23.5
2023-07-06 17:30:19,662:INFO:              pandas: 1.5.3
2023-07-06 17:30:19,662:INFO:              jinja2: 3.1.2
2023-07-06 17:30:19,662:INFO:               scipy: 1.10.1
2023-07-06 17:30:19,662:INFO:              joblib: 1.2.0
2023-07-06 17:30:19,662:INFO:             sklearn: 1.2.2
2023-07-06 17:30:19,662:INFO:                pyod: 1.1.0
2023-07-06 17:30:19,662:INFO:            imblearn: 0.10.1
2023-07-06 17:30:19,662:INFO:   category_encoders: 2.6.1
2023-07-06 17:30:19,662:INFO:            lightgbm: 3.3.5
2023-07-06 17:30:19,662:INFO:               numba: 0.57.0
2023-07-06 17:30:19,662:INFO:            requests: 2.28.1
2023-07-06 17:30:19,662:INFO:          matplotlib: 3.7.1
2023-07-06 17:30:19,662:INFO:          scikitplot: 0.3.7
2023-07-06 17:30:19,662:INFO:         yellowbrick: 1.5
2023-07-06 17:30:19,662:INFO:              plotly: 5.15.0
2023-07-06 17:30:19,662:INFO:    plotly-resampler: Not installed
2023-07-06 17:30:19,662:INFO:             kaleido: 0.2.1
2023-07-06 17:30:19,662:INFO:           schemdraw: 0.15
2023-07-06 17:30:19,662:INFO:         statsmodels: 0.14.0
2023-07-06 17:30:19,662:INFO:              sktime: 0.20.0
2023-07-06 17:30:19,662:INFO:               tbats: 1.1.3
2023-07-06 17:30:19,662:INFO:            pmdarima: 2.0.3
2023-07-06 17:30:19,662:INFO:              psutil: 5.9.5
2023-07-06 17:30:19,662:INFO:          markupsafe: 2.1.2
2023-07-06 17:30:19,662:INFO:             pickle5: Not installed
2023-07-06 17:30:19,662:INFO:         cloudpickle: 2.2.1
2023-07-06 17:30:19,662:INFO:         deprecation: 2.1.0
2023-07-06 17:30:19,662:INFO:              xxhash: 3.2.0
2023-07-06 17:30:19,662:INFO:           wurlitzer: 3.0.3
2023-07-06 17:30:19,662:INFO:PyCaret optional dependencies:
2023-07-06 17:30:19,662:INFO:                shap: Not installed
2023-07-06 17:30:19,662:INFO:           interpret: Not installed
2023-07-06 17:30:19,662:INFO:                umap: Not installed
2023-07-06 17:30:19,662:INFO:    pandas_profiling: 3.6.6
2023-07-06 17:30:19,662:INFO:  explainerdashboard: Not installed
2023-07-06 17:30:19,662:INFO:             autoviz: Not installed
2023-07-06 17:30:19,662:INFO:           fairlearn: Not installed
2023-07-06 17:30:19,662:INFO:          deepchecks: Not installed
2023-07-06 17:30:19,662:INFO:             xgboost: Not installed
2023-07-06 17:30:19,662:INFO:            catboost: Not installed
2023-07-06 17:30:19,662:INFO:              kmodes: Not installed
2023-07-06 17:30:19,662:INFO:             mlxtend: Not installed
2023-07-06 17:30:19,662:INFO:       statsforecast: Not installed
2023-07-06 17:30:19,662:INFO:        tune_sklearn: Not installed
2023-07-06 17:30:19,662:INFO:                 ray: Not installed
2023-07-06 17:30:19,662:INFO:            hyperopt: Not installed
2023-07-06 17:30:19,663:INFO:              optuna: 3.1.1
2023-07-06 17:30:19,663:INFO:               skopt: Not installed
2023-07-06 17:30:19,663:INFO:              mlflow: Not installed
2023-07-06 17:30:19,663:INFO:              gradio: Not installed
2023-07-06 17:30:19,663:INFO:             fastapi: Not installed
2023-07-06 17:30:19,663:INFO:             uvicorn: Not installed
2023-07-06 17:30:19,663:INFO:              m2cgen: Not installed
2023-07-06 17:30:19,663:INFO:           evidently: Not installed
2023-07-06 17:30:19,663:INFO:               fugue: Not installed
2023-07-06 17:30:19,663:INFO:           streamlit: 1.24.0
2023-07-06 17:30:19,663:INFO:             prophet: Not installed
2023-07-06 17:30:19,663:INFO:None
2023-07-06 17:30:19,663:INFO:Set up data.
2023-07-06 17:30:19,792:INFO:Set up train/test split.
2023-07-06 17:30:19,885:INFO:Set up index.
2023-07-06 17:30:19,911:INFO:Set up folding strategy.
2023-07-06 17:30:19,911:INFO:Assigning column types.
2023-07-06 17:30:19,954:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-07-06 17:30:19,954:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 17:30:19,959:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:30:19,964:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:30:20,122:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:30:20,170:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:30:20,170:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:30:20,171:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:30:20,171:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-07-06 17:30:20,176:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:30:20,181:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:30:20,331:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:30:20,380:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:30:20,380:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:30:20,380:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:30:20,380:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-07-06 17:30:20,385:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:30:20,390:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:30:20,540:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:30:20,588:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:30:20,589:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:30:20,589:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:30:20,594:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-07-06 17:30:20,599:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:30:20,749:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:30:20,797:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:30:20,798:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:30:20,798:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:30:20,798:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-07-06 17:30:20,808:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:30:20,961:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:30:21,009:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:30:21,010:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:30:21,010:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:30:21,020:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-07-06 17:30:21,172:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:30:21,221:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:30:21,221:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:30:21,221:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:30:21,222:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-07-06 17:30:21,385:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:30:21,433:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:30:21,433:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:30:21,434:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:30:21,596:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:30:21,645:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-07-06 17:30:21,645:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:30:21,645:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:30:21,646:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-07-06 17:30:21,811:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:30:21,859:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:30:21,859:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:30:22,020:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-07-06 17:30:22,069:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:30:22,069:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:30:22,069:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-07-06 17:30:22,279:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:30:22,279:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:30:22,488:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:30:22,489:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:30:22,490:INFO:Preparing preprocessing pipeline...
2023-07-06 17:30:22,490:INFO:Set up simple imputation.
2023-07-06 17:30:22,495:INFO:Set up column name cleaning.
2023-07-06 17:30:23,582:INFO:Finished creating preprocessing pipeline.
2023-07-06 17:30:23,586:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['PTemp_C_Max', 'AirTC_Avg', 'RH',
                                             'WS_ms_Avg', 'WindDir', 'TPM1',
                                             'TPM2.5', 'TPM10', 'GeffRef',
                                             'TempRef', 'Daylight',
                                             'DN_Voltage2_back_1min',
                                             'DN_Voltage2_back_2min',
                                             'DN_Voltage2_back_3min',
                                             'DN_Voltage2_back_4min',
                                             'DN_Voltage2_back_5min',
                                             'DN_Voltage2_back...
                                             'DN_Voltage2_back_14min',
                                             'DN_Voltage2_back_15min',
                                             'DN_Voltage2_back_16min',
                                             'DN_Voltage2_back_17min',
                                             'DN_Voltage2_back_18min',
                                             'DN_Voltage2_back_19min', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-07-06 17:30:23,586:INFO:Creating final display dataframe.
2023-07-06 17:30:25,774:INFO:Setup _display_container:                     Description             Value
0                    Session id              7774
1                        Target       DN_Voltage2
2                   Target type        Regression
3           Original data shape      (143940, 72)
4        Transformed data shape      (143940, 72)
5   Transformed train set shape      (100758, 72)
6    Transformed test set shape       (43182, 72)
7              Numeric features                71
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              4727
2023-07-06 17:30:25,989:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:30:25,989:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:30:26,197:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:30:26,198:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-07-06 17:30:26,199:INFO:setup() successfully completed in 6.55s...............
2023-07-06 17:30:26,199:INFO:Initializing compare_models()
2023-07-06 17:30:26,199:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3640>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3640>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-07-06 17:30:26,199:INFO:Checking exceptions
2023-07-06 17:30:26,245:INFO:Preparing display monitor
2023-07-06 17:30:26,263:INFO:Initializing Linear Regression
2023-07-06 17:30:26,263:INFO:Total runtime is 1.8397967020670573e-06 minutes
2023-07-06 17:30:26,265:INFO:SubProcess create_model() called ==================================
2023-07-06 17:30:26,265:INFO:Initializing create_model()
2023-07-06 17:30:26,265:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3640>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25af83cca0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:30:26,265:INFO:Checking exceptions
2023-07-06 17:30:26,265:INFO:Importing libraries
2023-07-06 17:30:26,265:INFO:Copying training dataset
2023-07-06 17:30:26,396:INFO:Defining folds
2023-07-06 17:30:26,397:INFO:Declaring metric variables
2023-07-06 17:30:26,400:INFO:Importing untrained model
2023-07-06 17:30:26,402:INFO:Linear Regression Imported successfully
2023-07-06 17:30:26,407:INFO:Starting cross validation
2023-07-06 17:30:26,408:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:30:29,616:INFO:Calculating mean and std
2023-07-06 17:30:29,619:INFO:Creating metrics dataframe
2023-07-06 17:30:29,647:INFO:Uploading results into container
2023-07-06 17:30:29,648:INFO:Uploading model into container now
2023-07-06 17:30:29,648:INFO:_master_model_container: 1
2023-07-06 17:30:29,648:INFO:_display_container: 2
2023-07-06 17:30:29,649:INFO:LinearRegression(n_jobs=-1)
2023-07-06 17:30:29,649:INFO:create_model() successfully completed......................................
2023-07-06 17:30:29,883:INFO:SubProcess create_model() end ==================================
2023-07-06 17:30:29,883:INFO:Creating metrics dataframe
2023-07-06 17:30:29,890:INFO:Initializing Lasso Regression
2023-07-06 17:30:29,891:INFO:Total runtime is 0.06046835581461589 minutes
2023-07-06 17:30:29,893:INFO:SubProcess create_model() called ==================================
2023-07-06 17:30:29,893:INFO:Initializing create_model()
2023-07-06 17:30:29,893:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3640>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25af83cca0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:30:29,894:INFO:Checking exceptions
2023-07-06 17:30:29,894:INFO:Importing libraries
2023-07-06 17:30:29,894:INFO:Copying training dataset
2023-07-06 17:30:30,032:INFO:Defining folds
2023-07-06 17:30:30,033:INFO:Declaring metric variables
2023-07-06 17:30:30,036:INFO:Importing untrained model
2023-07-06 17:30:30,038:INFO:Lasso Regression Imported successfully
2023-07-06 17:30:30,043:INFO:Starting cross validation
2023-07-06 17:30:30,044:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:30:33,001:INFO:Calculating mean and std
2023-07-06 17:30:33,003:INFO:Creating metrics dataframe
2023-07-06 17:30:33,028:INFO:Uploading results into container
2023-07-06 17:30:33,029:INFO:Uploading model into container now
2023-07-06 17:30:33,030:INFO:_master_model_container: 2
2023-07-06 17:30:33,030:INFO:_display_container: 2
2023-07-06 17:30:33,030:INFO:Lasso(random_state=7774)
2023-07-06 17:30:33,030:INFO:create_model() successfully completed......................................
2023-07-06 17:30:33,230:INFO:SubProcess create_model() end ==================================
2023-07-06 17:30:33,230:INFO:Creating metrics dataframe
2023-07-06 17:30:33,238:INFO:Initializing Ridge Regression
2023-07-06 17:30:33,238:INFO:Total runtime is 0.11625847816467286 minutes
2023-07-06 17:30:33,240:INFO:SubProcess create_model() called ==================================
2023-07-06 17:30:33,241:INFO:Initializing create_model()
2023-07-06 17:30:33,241:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3640>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25af83cca0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:30:33,241:INFO:Checking exceptions
2023-07-06 17:30:33,241:INFO:Importing libraries
2023-07-06 17:30:33,241:INFO:Copying training dataset
2023-07-06 17:30:33,372:INFO:Defining folds
2023-07-06 17:30:33,372:INFO:Declaring metric variables
2023-07-06 17:30:33,376:INFO:Importing untrained model
2023-07-06 17:30:33,378:INFO:Ridge Regression Imported successfully
2023-07-06 17:30:33,382:INFO:Starting cross validation
2023-07-06 17:30:33,383:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:30:35,592:INFO:Calculating mean and std
2023-07-06 17:30:35,594:INFO:Creating metrics dataframe
2023-07-06 17:30:35,619:INFO:Uploading results into container
2023-07-06 17:30:35,619:INFO:Uploading model into container now
2023-07-06 17:30:35,620:INFO:_master_model_container: 3
2023-07-06 17:30:35,620:INFO:_display_container: 2
2023-07-06 17:30:35,620:INFO:Ridge(random_state=7774)
2023-07-06 17:30:35,621:INFO:create_model() successfully completed......................................
2023-07-06 17:30:35,810:INFO:SubProcess create_model() end ==================================
2023-07-06 17:30:35,810:INFO:Creating metrics dataframe
2023-07-06 17:30:35,819:INFO:Initializing Elastic Net
2023-07-06 17:30:35,819:INFO:Total runtime is 0.1592703620592753 minutes
2023-07-06 17:30:35,821:INFO:SubProcess create_model() called ==================================
2023-07-06 17:30:35,821:INFO:Initializing create_model()
2023-07-06 17:30:35,822:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3640>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25af83cca0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:30:35,822:INFO:Checking exceptions
2023-07-06 17:30:35,822:INFO:Importing libraries
2023-07-06 17:30:35,822:INFO:Copying training dataset
2023-07-06 17:30:35,953:INFO:Defining folds
2023-07-06 17:30:35,953:INFO:Declaring metric variables
2023-07-06 17:30:35,956:INFO:Importing untrained model
2023-07-06 17:30:35,959:INFO:Elastic Net Imported successfully
2023-07-06 17:30:35,963:INFO:Starting cross validation
2023-07-06 17:30:35,964:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:30:38,092:INFO:Calculating mean and std
2023-07-06 17:30:38,095:INFO:Creating metrics dataframe
2023-07-06 17:30:38,121:INFO:Uploading results into container
2023-07-06 17:30:38,122:INFO:Uploading model into container now
2023-07-06 17:30:38,123:INFO:_master_model_container: 4
2023-07-06 17:30:38,123:INFO:_display_container: 2
2023-07-06 17:30:38,124:INFO:ElasticNet(random_state=7774)
2023-07-06 17:30:38,124:INFO:create_model() successfully completed......................................
2023-07-06 17:30:38,337:INFO:SubProcess create_model() end ==================================
2023-07-06 17:30:38,337:INFO:Creating metrics dataframe
2023-07-06 17:30:38,345:INFO:Initializing Least Angle Regression
2023-07-06 17:30:38,345:INFO:Total runtime is 0.20138167937596638 minutes
2023-07-06 17:30:38,348:INFO:SubProcess create_model() called ==================================
2023-07-06 17:30:38,348:INFO:Initializing create_model()
2023-07-06 17:30:38,348:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3640>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25af83cca0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:30:38,348:INFO:Checking exceptions
2023-07-06 17:30:38,348:INFO:Importing libraries
2023-07-06 17:30:38,348:INFO:Copying training dataset
2023-07-06 17:30:38,486:INFO:Defining folds
2023-07-06 17:30:38,486:INFO:Declaring metric variables
2023-07-06 17:30:38,489:INFO:Importing untrained model
2023-07-06 17:30:38,492:INFO:Least Angle Regression Imported successfully
2023-07-06 17:30:38,496:INFO:Starting cross validation
2023-07-06 17:30:38,497:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:30:40,668:INFO:Calculating mean and std
2023-07-06 17:30:40,670:INFO:Creating metrics dataframe
2023-07-06 17:30:40,694:INFO:Uploading results into container
2023-07-06 17:30:40,695:INFO:Uploading model into container now
2023-07-06 17:30:40,696:INFO:_master_model_container: 5
2023-07-06 17:30:40,696:INFO:_display_container: 2
2023-07-06 17:30:40,696:INFO:Lars(random_state=7774)
2023-07-06 17:30:40,696:INFO:create_model() successfully completed......................................
2023-07-06 17:30:40,889:INFO:SubProcess create_model() end ==================================
2023-07-06 17:30:40,889:INFO:Creating metrics dataframe
2023-07-06 17:30:40,897:INFO:Initializing Lasso Least Angle Regression
2023-07-06 17:30:40,898:INFO:Total runtime is 0.2439157446225484 minutes
2023-07-06 17:30:40,900:INFO:SubProcess create_model() called ==================================
2023-07-06 17:30:40,900:INFO:Initializing create_model()
2023-07-06 17:30:40,900:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3640>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25af83cca0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:30:40,900:INFO:Checking exceptions
2023-07-06 17:30:40,900:INFO:Importing libraries
2023-07-06 17:30:40,900:INFO:Copying training dataset
2023-07-06 17:30:41,035:INFO:Defining folds
2023-07-06 17:30:41,035:INFO:Declaring metric variables
2023-07-06 17:30:41,038:INFO:Importing untrained model
2023-07-06 17:30:41,041:INFO:Lasso Least Angle Regression Imported successfully
2023-07-06 17:30:41,045:INFO:Starting cross validation
2023-07-06 17:30:41,046:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:30:42,998:INFO:Calculating mean and std
2023-07-06 17:30:43,000:INFO:Creating metrics dataframe
2023-07-06 17:30:43,025:INFO:Uploading results into container
2023-07-06 17:30:43,026:INFO:Uploading model into container now
2023-07-06 17:30:43,027:INFO:_master_model_container: 6
2023-07-06 17:30:43,027:INFO:_display_container: 2
2023-07-06 17:30:43,027:INFO:LassoLars(random_state=7774)
2023-07-06 17:30:43,028:INFO:create_model() successfully completed......................................
2023-07-06 17:30:43,218:INFO:SubProcess create_model() end ==================================
2023-07-06 17:30:43,218:INFO:Creating metrics dataframe
2023-07-06 17:30:43,227:INFO:Initializing Orthogonal Matching Pursuit
2023-07-06 17:30:43,227:INFO:Total runtime is 0.282744558652242 minutes
2023-07-06 17:30:43,230:INFO:SubProcess create_model() called ==================================
2023-07-06 17:30:43,230:INFO:Initializing create_model()
2023-07-06 17:30:43,230:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3640>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25af83cca0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:30:43,230:INFO:Checking exceptions
2023-07-06 17:30:43,230:INFO:Importing libraries
2023-07-06 17:30:43,230:INFO:Copying training dataset
2023-07-06 17:30:43,367:INFO:Defining folds
2023-07-06 17:30:43,367:INFO:Declaring metric variables
2023-07-06 17:30:43,370:INFO:Importing untrained model
2023-07-06 17:30:43,373:INFO:Orthogonal Matching Pursuit Imported successfully
2023-07-06 17:30:43,377:INFO:Starting cross validation
2023-07-06 17:30:43,379:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:30:45,367:INFO:Calculating mean and std
2023-07-06 17:30:45,369:INFO:Creating metrics dataframe
2023-07-06 17:30:45,394:INFO:Uploading results into container
2023-07-06 17:30:45,394:INFO:Uploading model into container now
2023-07-06 17:30:45,395:INFO:_master_model_container: 7
2023-07-06 17:30:45,395:INFO:_display_container: 2
2023-07-06 17:30:45,395:INFO:OrthogonalMatchingPursuit()
2023-07-06 17:30:45,395:INFO:create_model() successfully completed......................................
2023-07-06 17:30:45,588:INFO:SubProcess create_model() end ==================================
2023-07-06 17:30:45,588:INFO:Creating metrics dataframe
2023-07-06 17:30:45,597:INFO:Initializing Bayesian Ridge
2023-07-06 17:30:45,598:INFO:Total runtime is 0.3222492973009745 minutes
2023-07-06 17:30:45,600:INFO:SubProcess create_model() called ==================================
2023-07-06 17:30:45,600:INFO:Initializing create_model()
2023-07-06 17:30:45,600:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3640>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25af83cca0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:30:45,600:INFO:Checking exceptions
2023-07-06 17:30:45,600:INFO:Importing libraries
2023-07-06 17:30:45,600:INFO:Copying training dataset
2023-07-06 17:30:45,738:INFO:Defining folds
2023-07-06 17:30:45,738:INFO:Declaring metric variables
2023-07-06 17:30:45,741:INFO:Importing untrained model
2023-07-06 17:30:45,744:INFO:Bayesian Ridge Imported successfully
2023-07-06 17:30:45,748:INFO:Starting cross validation
2023-07-06 17:30:45,749:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:30:48,826:INFO:Calculating mean and std
2023-07-06 17:30:48,829:INFO:Creating metrics dataframe
2023-07-06 17:30:48,857:INFO:Uploading results into container
2023-07-06 17:30:48,858:INFO:Uploading model into container now
2023-07-06 17:30:48,859:INFO:_master_model_container: 8
2023-07-06 17:30:48,859:INFO:_display_container: 2
2023-07-06 17:30:48,859:INFO:BayesianRidge()
2023-07-06 17:30:48,860:INFO:create_model() successfully completed......................................
2023-07-06 17:30:49,085:INFO:SubProcess create_model() end ==================================
2023-07-06 17:30:49,085:INFO:Creating metrics dataframe
2023-07-06 17:30:49,094:INFO:Initializing Passive Aggressive Regressor
2023-07-06 17:30:49,095:INFO:Total runtime is 0.38053443431854245 minutes
2023-07-06 17:30:49,097:INFO:SubProcess create_model() called ==================================
2023-07-06 17:30:49,097:INFO:Initializing create_model()
2023-07-06 17:30:49,098:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3640>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25af83cca0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:30:49,098:INFO:Checking exceptions
2023-07-06 17:30:49,098:INFO:Importing libraries
2023-07-06 17:30:49,098:INFO:Copying training dataset
2023-07-06 17:30:49,238:INFO:Defining folds
2023-07-06 17:30:49,239:INFO:Declaring metric variables
2023-07-06 17:30:49,242:INFO:Importing untrained model
2023-07-06 17:30:49,245:INFO:Passive Aggressive Regressor Imported successfully
2023-07-06 17:30:49,249:INFO:Starting cross validation
2023-07-06 17:30:49,250:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:30:51,887:INFO:Calculating mean and std
2023-07-06 17:30:51,889:INFO:Creating metrics dataframe
2023-07-06 17:30:51,917:INFO:Uploading results into container
2023-07-06 17:30:51,918:INFO:Uploading model into container now
2023-07-06 17:30:51,919:INFO:_master_model_container: 9
2023-07-06 17:30:51,919:INFO:_display_container: 2
2023-07-06 17:30:51,919:INFO:PassiveAggressiveRegressor(random_state=7774)
2023-07-06 17:30:51,919:INFO:create_model() successfully completed......................................
2023-07-06 17:30:52,139:INFO:SubProcess create_model() end ==================================
2023-07-06 17:30:52,139:INFO:Creating metrics dataframe
2023-07-06 17:30:52,148:INFO:Initializing Huber Regressor
2023-07-06 17:30:52,149:INFO:Total runtime is 0.4314330736796061 minutes
2023-07-06 17:30:52,151:INFO:SubProcess create_model() called ==================================
2023-07-06 17:30:52,151:INFO:Initializing create_model()
2023-07-06 17:30:52,151:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3640>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25af83cca0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:30:52,151:INFO:Checking exceptions
2023-07-06 17:30:52,151:INFO:Importing libraries
2023-07-06 17:30:52,152:INFO:Copying training dataset
2023-07-06 17:30:52,288:INFO:Defining folds
2023-07-06 17:30:52,288:INFO:Declaring metric variables
2023-07-06 17:30:52,291:INFO:Importing untrained model
2023-07-06 17:30:52,294:INFO:Huber Regressor Imported successfully
2023-07-06 17:30:52,298:INFO:Starting cross validation
2023-07-06 17:30:52,299:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:30:59,867:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:31:00,953:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:31:01,415:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:31:01,453:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:31:01,765:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:31:02,692:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:31:02,939:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:31:03,005:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:31:03,104:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:31:03,679:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-07-06 17:31:03,948:INFO:Calculating mean and std
2023-07-06 17:31:03,950:INFO:Creating metrics dataframe
2023-07-06 17:31:03,979:INFO:Uploading results into container
2023-07-06 17:31:03,980:INFO:Uploading model into container now
2023-07-06 17:31:03,980:INFO:_master_model_container: 10
2023-07-06 17:31:03,980:INFO:_display_container: 2
2023-07-06 17:31:03,981:INFO:HuberRegressor()
2023-07-06 17:31:03,981:INFO:create_model() successfully completed......................................
2023-07-06 17:31:04,165:INFO:SubProcess create_model() end ==================================
2023-07-06 17:31:04,165:INFO:Creating metrics dataframe
2023-07-06 17:31:04,175:INFO:Initializing K Neighbors Regressor
2023-07-06 17:31:04,175:INFO:Total runtime is 0.6318686723709106 minutes
2023-07-06 17:31:04,177:INFO:SubProcess create_model() called ==================================
2023-07-06 17:31:04,177:INFO:Initializing create_model()
2023-07-06 17:31:04,177:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3640>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25af83cca0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:31:04,178:INFO:Checking exceptions
2023-07-06 17:31:04,178:INFO:Importing libraries
2023-07-06 17:31:04,178:INFO:Copying training dataset
2023-07-06 17:31:04,308:INFO:Defining folds
2023-07-06 17:31:04,309:INFO:Declaring metric variables
2023-07-06 17:31:04,312:INFO:Importing untrained model
2023-07-06 17:31:04,314:INFO:K Neighbors Regressor Imported successfully
2023-07-06 17:31:04,319:INFO:Starting cross validation
2023-07-06 17:31:04,320:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:31:12,244:INFO:Calculating mean and std
2023-07-06 17:31:12,247:INFO:Creating metrics dataframe
2023-07-06 17:31:12,276:INFO:Uploading results into container
2023-07-06 17:31:12,277:INFO:Uploading model into container now
2023-07-06 17:31:12,278:INFO:_master_model_container: 11
2023-07-06 17:31:12,278:INFO:_display_container: 2
2023-07-06 17:31:12,279:INFO:KNeighborsRegressor(n_jobs=-1)
2023-07-06 17:31:12,279:INFO:create_model() successfully completed......................................
2023-07-06 17:31:12,491:INFO:SubProcess create_model() end ==================================
2023-07-06 17:31:12,491:INFO:Creating metrics dataframe
2023-07-06 17:31:12,501:INFO:Initializing Decision Tree Regressor
2023-07-06 17:31:12,501:INFO:Total runtime is 0.7706408818562825 minutes
2023-07-06 17:31:12,503:INFO:SubProcess create_model() called ==================================
2023-07-06 17:31:12,504:INFO:Initializing create_model()
2023-07-06 17:31:12,504:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3640>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25af83cca0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:31:12,504:INFO:Checking exceptions
2023-07-06 17:31:12,504:INFO:Importing libraries
2023-07-06 17:31:12,504:INFO:Copying training dataset
2023-07-06 17:31:12,640:INFO:Defining folds
2023-07-06 17:31:12,640:INFO:Declaring metric variables
2023-07-06 17:31:12,644:INFO:Importing untrained model
2023-07-06 17:31:12,646:INFO:Decision Tree Regressor Imported successfully
2023-07-06 17:31:12,651:INFO:Starting cross validation
2023-07-06 17:31:12,652:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:31:19,010:INFO:Calculating mean and std
2023-07-06 17:31:19,013:INFO:Creating metrics dataframe
2023-07-06 17:31:19,043:INFO:Uploading results into container
2023-07-06 17:31:19,044:INFO:Uploading model into container now
2023-07-06 17:31:19,044:INFO:_master_model_container: 12
2023-07-06 17:31:19,044:INFO:_display_container: 2
2023-07-06 17:31:19,045:INFO:DecisionTreeRegressor(random_state=7774)
2023-07-06 17:31:19,045:INFO:create_model() successfully completed......................................
2023-07-06 17:31:19,230:INFO:SubProcess create_model() end ==================================
2023-07-06 17:31:19,230:INFO:Creating metrics dataframe
2023-07-06 17:31:19,240:INFO:Initializing Random Forest Regressor
2023-07-06 17:31:19,240:INFO:Total runtime is 0.8829554438591003 minutes
2023-07-06 17:31:19,242:INFO:SubProcess create_model() called ==================================
2023-07-06 17:31:19,243:INFO:Initializing create_model()
2023-07-06 17:31:19,243:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3640>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25af83cca0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:31:19,243:INFO:Checking exceptions
2023-07-06 17:31:19,243:INFO:Importing libraries
2023-07-06 17:31:19,243:INFO:Copying training dataset
2023-07-06 17:31:19,371:INFO:Defining folds
2023-07-06 17:31:19,371:INFO:Declaring metric variables
2023-07-06 17:31:19,375:INFO:Importing untrained model
2023-07-06 17:31:19,377:INFO:Random Forest Regressor Imported successfully
2023-07-06 17:31:19,382:INFO:Starting cross validation
2023-07-06 17:31:19,383:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:32:16,221:INFO:Calculating mean and std
2023-07-06 17:32:16,224:INFO:Creating metrics dataframe
2023-07-06 17:32:16,293:INFO:Uploading results into container
2023-07-06 17:32:16,294:INFO:Uploading model into container now
2023-07-06 17:32:16,295:INFO:_master_model_container: 13
2023-07-06 17:32:16,295:INFO:_display_container: 2
2023-07-06 17:32:16,296:INFO:RandomForestRegressor(n_jobs=-1, random_state=7774)
2023-07-06 17:32:16,296:INFO:create_model() successfully completed......................................
2023-07-06 17:32:16,516:INFO:SubProcess create_model() end ==================================
2023-07-06 17:32:16,517:INFO:Creating metrics dataframe
2023-07-06 17:32:16,527:INFO:Initializing Extra Trees Regressor
2023-07-06 17:32:16,527:INFO:Total runtime is 1.837736364205678 minutes
2023-07-06 17:32:16,529:INFO:SubProcess create_model() called ==================================
2023-07-06 17:32:16,529:INFO:Initializing create_model()
2023-07-06 17:32:16,529:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3640>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25af83cca0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:32:16,530:INFO:Checking exceptions
2023-07-06 17:32:16,530:INFO:Importing libraries
2023-07-06 17:32:16,530:INFO:Copying training dataset
2023-07-06 17:32:16,658:INFO:Defining folds
2023-07-06 17:32:16,659:INFO:Declaring metric variables
2023-07-06 17:32:16,662:INFO:Importing untrained model
2023-07-06 17:32:16,664:INFO:Extra Trees Regressor Imported successfully
2023-07-06 17:32:16,669:INFO:Starting cross validation
2023-07-06 17:32:16,670:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:32:17,012:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/joblib/externals/loky/process_executor.py:700: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  warnings.warn(

2023-07-06 17:32:20,576:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.84s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-07-06 17:32:20,782:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.72s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-07-06 17:32:21,406:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 1.13s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-07-06 17:32:22,078:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.70s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-07-06 17:32:24,324:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 1.06s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-07-06 17:32:26,937:WARNING:/home/mirlab/anaconda3/envs/misc/lib/python3.9/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 3.05s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-07-06 17:32:47,012:INFO:Calculating mean and std
2023-07-06 17:32:47,015:INFO:Creating metrics dataframe
2023-07-06 17:32:47,071:INFO:Uploading results into container
2023-07-06 17:32:47,072:INFO:Uploading model into container now
2023-07-06 17:32:47,072:INFO:_master_model_container: 14
2023-07-06 17:32:47,073:INFO:_display_container: 2
2023-07-06 17:32:47,073:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=7774)
2023-07-06 17:32:47,073:INFO:create_model() successfully completed......................................
2023-07-06 17:32:47,284:INFO:SubProcess create_model() end ==================================
2023-07-06 17:32:47,284:INFO:Creating metrics dataframe
2023-07-06 17:32:47,294:INFO:Initializing AdaBoost Regressor
2023-07-06 17:32:47,295:INFO:Total runtime is 2.3505348324775692 minutes
2023-07-06 17:32:47,297:INFO:SubProcess create_model() called ==================================
2023-07-06 17:32:47,298:INFO:Initializing create_model()
2023-07-06 17:32:47,298:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3640>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25af83cca0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:32:47,298:INFO:Checking exceptions
2023-07-06 17:32:47,298:INFO:Importing libraries
2023-07-06 17:32:47,298:INFO:Copying training dataset
2023-07-06 17:32:47,443:INFO:Defining folds
2023-07-06 17:32:47,443:INFO:Declaring metric variables
2023-07-06 17:32:47,447:INFO:Importing untrained model
2023-07-06 17:32:47,449:INFO:AdaBoost Regressor Imported successfully
2023-07-06 17:32:47,454:INFO:Starting cross validation
2023-07-06 17:32:47,455:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:33:23,358:INFO:Calculating mean and std
2023-07-06 17:33:23,361:INFO:Creating metrics dataframe
2023-07-06 17:33:23,385:INFO:Uploading results into container
2023-07-06 17:33:23,386:INFO:Uploading model into container now
2023-07-06 17:33:23,386:INFO:_master_model_container: 15
2023-07-06 17:33:23,387:INFO:_display_container: 2
2023-07-06 17:33:23,387:INFO:AdaBoostRegressor(random_state=7774)
2023-07-06 17:33:23,387:INFO:create_model() successfully completed......................................
2023-07-06 17:33:23,612:INFO:SubProcess create_model() end ==================================
2023-07-06 17:33:23,612:INFO:Creating metrics dataframe
2023-07-06 17:33:23,623:INFO:Initializing Gradient Boosting Regressor
2023-07-06 17:33:23,623:INFO:Total runtime is 2.9560125311215715 minutes
2023-07-06 17:33:23,626:INFO:SubProcess create_model() called ==================================
2023-07-06 17:33:23,627:INFO:Initializing create_model()
2023-07-06 17:33:23,627:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3640>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25af83cca0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:33:23,627:INFO:Checking exceptions
2023-07-06 17:33:23,627:INFO:Importing libraries
2023-07-06 17:33:23,627:INFO:Copying training dataset
2023-07-06 17:33:23,776:INFO:Defining folds
2023-07-06 17:33:23,776:INFO:Declaring metric variables
2023-07-06 17:33:23,780:INFO:Importing untrained model
2023-07-06 17:33:23,783:INFO:Gradient Boosting Regressor Imported successfully
2023-07-06 17:33:23,788:INFO:Starting cross validation
2023-07-06 17:33:23,789:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:34:54,099:INFO:Calculating mean and std
2023-07-06 17:34:54,101:INFO:Creating metrics dataframe
2023-07-06 17:34:54,123:INFO:Uploading results into container
2023-07-06 17:34:54,123:INFO:Uploading model into container now
2023-07-06 17:34:54,124:INFO:_master_model_container: 16
2023-07-06 17:34:54,124:INFO:_display_container: 2
2023-07-06 17:34:54,125:INFO:GradientBoostingRegressor(random_state=7774)
2023-07-06 17:34:54,125:INFO:create_model() successfully completed......................................
2023-07-06 17:34:54,319:INFO:SubProcess create_model() end ==================================
2023-07-06 17:34:54,319:INFO:Creating metrics dataframe
2023-07-06 17:34:54,330:INFO:Initializing Light Gradient Boosting Machine
2023-07-06 17:34:54,330:INFO:Total runtime is 4.467787869771321 minutes
2023-07-06 17:34:54,332:INFO:SubProcess create_model() called ==================================
2023-07-06 17:34:54,333:INFO:Initializing create_model()
2023-07-06 17:34:54,333:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3640>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25af83cca0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:34:54,333:INFO:Checking exceptions
2023-07-06 17:34:54,333:INFO:Importing libraries
2023-07-06 17:34:54,333:INFO:Copying training dataset
2023-07-06 17:34:54,466:INFO:Defining folds
2023-07-06 17:34:54,466:INFO:Declaring metric variables
2023-07-06 17:34:54,469:INFO:Importing untrained model
2023-07-06 17:34:54,472:INFO:Light Gradient Boosting Machine Imported successfully
2023-07-06 17:34:54,477:INFO:Starting cross validation
2023-07-06 17:34:54,478:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:34:59,334:INFO:Calculating mean and std
2023-07-06 17:34:59,337:INFO:Creating metrics dataframe
2023-07-06 17:34:59,361:INFO:Uploading results into container
2023-07-06 17:34:59,362:INFO:Uploading model into container now
2023-07-06 17:34:59,362:INFO:_master_model_container: 17
2023-07-06 17:34:59,363:INFO:_display_container: 2
2023-07-06 17:34:59,363:INFO:LGBMRegressor(random_state=7774)
2023-07-06 17:34:59,363:INFO:create_model() successfully completed......................................
2023-07-06 17:34:59,584:INFO:SubProcess create_model() end ==================================
2023-07-06 17:34:59,584:INFO:Creating metrics dataframe
2023-07-06 17:34:59,595:INFO:Initializing Dummy Regressor
2023-07-06 17:34:59,596:INFO:Total runtime is 4.555551000436147 minutes
2023-07-06 17:34:59,598:INFO:SubProcess create_model() called ==================================
2023-07-06 17:34:59,599:INFO:Initializing create_model()
2023-07-06 17:34:59,599:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3640>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f25af83cca0>, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:34:59,599:INFO:Checking exceptions
2023-07-06 17:34:59,599:INFO:Importing libraries
2023-07-06 17:34:59,599:INFO:Copying training dataset
2023-07-06 17:34:59,736:INFO:Defining folds
2023-07-06 17:34:59,736:INFO:Declaring metric variables
2023-07-06 17:34:59,739:INFO:Importing untrained model
2023-07-06 17:34:59,742:INFO:Dummy Regressor Imported successfully
2023-07-06 17:34:59,747:INFO:Starting cross validation
2023-07-06 17:34:59,748:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-07-06 17:35:01,753:INFO:Calculating mean and std
2023-07-06 17:35:01,755:INFO:Creating metrics dataframe
2023-07-06 17:35:01,777:INFO:Uploading results into container
2023-07-06 17:35:01,778:INFO:Uploading model into container now
2023-07-06 17:35:01,778:INFO:_master_model_container: 18
2023-07-06 17:35:01,778:INFO:_display_container: 2
2023-07-06 17:35:01,779:INFO:DummyRegressor()
2023-07-06 17:35:01,779:INFO:create_model() successfully completed......................................
2023-07-06 17:35:01,967:INFO:SubProcess create_model() end ==================================
2023-07-06 17:35:01,968:INFO:Creating metrics dataframe
2023-07-06 17:35:01,986:INFO:Initializing create_model()
2023-07-06 17:35:01,986:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f25c17b3640>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-07-06 17:35:01,986:INFO:Checking exceptions
2023-07-06 17:35:01,987:INFO:Importing libraries
2023-07-06 17:35:01,987:INFO:Copying training dataset
2023-07-06 17:35:02,119:INFO:Defining folds
2023-07-06 17:35:02,119:INFO:Declaring metric variables
2023-07-06 17:35:02,120:INFO:Importing untrained model
2023-07-06 17:35:02,120:INFO:Declaring custom model
2023-07-06 17:35:02,120:INFO:Linear Regression Imported successfully
2023-07-06 17:35:02,121:INFO:Cross validation set to False
2023-07-06 17:35:02,121:INFO:Fitting Model
2023-07-06 17:35:03,806:INFO:LinearRegression(n_jobs=-1)
2023-07-06 17:35:03,806:INFO:create_model() successfully completed......................................
2023-07-06 17:35:04,012:INFO:_master_model_container: 18
2023-07-06 17:35:04,012:INFO:_display_container: 2
2023-07-06 17:35:04,013:INFO:LinearRegression(n_jobs=-1)
2023-07-06 17:35:04,013:INFO:compare_models() successfully completed......................................
